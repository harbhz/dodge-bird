{
  "version": 3,
  "sources": ["../node_modules/kaboom/src/math.ts", "../node_modules/kaboom/src/utils.ts", "../node_modules/kaboom/src/gamepad.json", "../node_modules/kaboom/src/app.ts", "../node_modules/kaboom/src/gfx.ts", "../node_modules/kaboom/src/assets.ts", "../node_modules/kaboom/src/easings.ts", "../node_modules/kaboom/src/texPacker.ts", "../node_modules/kaboom/src/kaboom.ts", "../code/main.js"],
  "sourcesContent": ["import {\n\tPoint,\n\tRNGValue,\n\tLerpValue,\n\tVec2Args,\n} from \"./types\"\n\nexport function deg2rad(deg: number): number {\n\treturn deg * Math.PI / 180\n}\n\nexport function rad2deg(rad: number): number {\n\treturn rad * 180 / Math.PI\n}\n\nexport function clamp(\n\tval: number,\n\tmin: number,\n\tmax: number,\n): number {\n\tif (min > max) {\n\t\treturn clamp(val, max, min)\n\t}\n\treturn Math.min(Math.max(val, min), max)\n}\n\nexport function lerp<V extends LerpValue>(\n\ta: V,\n\tb: V,\n\tt: number,\n): V {\n\tif (typeof a === \"number\" && typeof b === \"number\") {\n\t\treturn a + (b - a) * t as V\n\t} else if (a instanceof Vec2 && b instanceof Vec2) {\n\t\treturn a.lerp(b, t) as V\n\t} else if (a instanceof Color && b instanceof Color) {\n\t\treturn a.lerp(b, t) as V\n\t}\n\tthrow new Error(`Bad value for lerp(): ${a}, ${b}. Only number, Vec2 and Color is supported.`)\n}\n\nexport function map(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn l2 + (v - l1) / (h1 - l1) * (h2 - l2)\n}\n\nexport function mapc(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn clamp(map(v, l1, h1, l2, h2), l2, h2)\n}\n\nexport class Vec2 {\n\tx: number = 0\n\ty: number = 0\n\tconstructor(x: number = 0, y: number = x) {\n\t\tthis.x = x\n\t\tthis.y = y\n\t}\n\tstatic fromAngle(deg: number) {\n\t\tconst angle = deg2rad(deg)\n\t\treturn new Vec2(Math.cos(angle), Math.sin(angle))\n\t}\n\tstatic LEFT = new Vec2(-1, 0)\n\tstatic RIGHT = new Vec2(1, 0)\n\tstatic UP = new Vec2(0, -1)\n\tstatic DOWN = new Vec2(0, 1)\n\tclone(): Vec2 {\n\t\treturn new Vec2(this.x, this.y)\n\t}\n\tadd(...args: Vec2Args): Vec2 {\n\t\tconst p2 = vec2(...args)\n\t\treturn new Vec2(this.x + p2.x, this.y + p2.y)\n\t}\n\tsub(...args: Vec2Args): Vec2 {\n\t\tconst p2 = vec2(...args)\n\t\treturn new Vec2(this.x - p2.x, this.y - p2.y)\n\t}\n\tscale(...args: Vec2Args): Vec2 {\n\t\tconst s = vec2(...args)\n\t\treturn new Vec2(this.x * s.x, this.y * s.y)\n\t}\n\tdist(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn this.sub(p2).len()\n\t}\n\tsdist(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn this.sub(p2).slen()\n\t}\n\tlen(): number {\n\t\treturn Math.sqrt(this.dot(this))\n\t}\n\tslen(): number {\n\t\treturn this.dot(this)\n\t}\n\tunit(): Vec2 {\n\t\tconst len = this.len()\n\t\treturn len === 0 ? new Vec2(0) : this.scale(1 / len)\n\t}\n\tnormal(): Vec2 {\n\t\treturn new Vec2(this.y, -this.x)\n\t}\n\treflect(normal: Vec2) {\n\t\treturn this.sub(normal.scale(2 * this.dot(normal)))\n\t}\n\tproject(on: Vec2) {\n\t\treturn on.scale(on.dot(this) / on.len())\n\t}\n\treject(on: Vec2) {\n\t\treturn this.sub(this.project(on))\n\t}\n\tdot(p2: Vec2): number {\n\t\treturn this.x * p2.x + this.y * p2.y\n\t}\n\tcross(p2: Vec2): number {\n\t\treturn this.x * p2.y - this.y * p2.x\n\t}\n\tangle(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn rad2deg(Math.atan2(this.y - p2.y, this.x - p2.x))\n\t}\n\tangleBetween(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn rad2deg(Math.atan2(this.cross(p2), this.dot(p2)))\n\t}\n\tlerp(dest: Vec2, t: number): Vec2 {\n\t\treturn new Vec2(lerp(this.x, dest.x, t), lerp(this.y, dest.y, t))\n\t}\n\tslerp(dest: Vec2, t: number): Vec2 {\n\t\tconst cos = this.dot(dest)\n\t\tconst sin = this.cross(dest)\n\t\tconst angle = Math.atan2(sin, cos)\n\t\treturn this\n\t\t\t.scale(Math.sin((1 - t) * angle))\n\t\t\t.add(dest.scale(Math.sin(t * angle)))\n\t\t\t.scale(1 / sin)\n\t}\n\tisZero(): boolean {\n\t\treturn this.x === 0 && this.y === 0\n\t}\n\ttoFixed(n: number): Vec2 {\n\t\treturn new Vec2(Number(this.x.toFixed(n)), Number(this.y.toFixed(n)))\n\t}\n\ttransform(m: Mat4): Vec2 {\n\t\treturn m.multVec2(this)\n\t}\n\teq(other: Vec2): boolean {\n\t\treturn this.x === other.x && this.y === other.y\n\t}\n\tbbox(): Rect {\n\t\treturn new Rect(this, 0, 0)\n\t}\n\ttoString(): string {\n\t\treturn `vec2(${this.x.toFixed(2)}, ${this.y.toFixed(2)})`\n\t}\n}\n\nexport function vec2(...args: Vec2Args): Vec2 {\n\tif (args.length === 1) {\n\t\tif (args[0] instanceof Vec2) {\n\t\t\treturn new Vec2(args[0].x, args[0].y)\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 2) {\n\t\t\treturn new Vec2(...args[0])\n\t\t}\n\t}\n\t// @ts-ignore\n\treturn new Vec2(...args)\n}\n\nexport class Color {\n\n\tr: number = 255\n\tg: number = 255\n\tb: number = 255\n\n\tconstructor(r: number, g: number, b: number) {\n\t\tthis.r = clamp(r, 0, 255)\n\t\tthis.g = clamp(g, 0, 255)\n\t\tthis.b = clamp(b, 0, 255)\n\t}\n\n\tstatic fromArray(arr: number[]) {\n\t\treturn new Color(arr[0], arr[1], arr[2])\n\t}\n\n\tstatic fromHex(hex: string | number) {\n\t\tif (typeof hex === \"number\") {\n\t\t\treturn new Color(\n\t\t\t\t(hex >> 16) & 0xff,\n\t\t\t\t(hex >> 8) & 0xff,\n\t\t\t\t(hex >> 0) & 0xff,\n\t\t\t)\n\t\t} else if (typeof hex === \"string\") {\n\t\t\tconst result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n\t\t\treturn new Color(\n\t\t\t\tparseInt(result[1], 16),\n\t\t\t\tparseInt(result[2], 16),\n\t\t\t\tparseInt(result[3], 16),\n\t\t\t)\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid hex color format\")\n\t\t}\n\t}\n\n\t// TODO: use range of [0, 360] [0, 100] [0, 100]?\n\tstatic fromHSL(h: number, s: number, l: number) {\n\n\t\tif (s == 0){\n\t\t\treturn new Color(255 * l, 255 * l, 255 * l)\n\t\t}\n\n\t\tconst hue2rgb = (p, q, t) => {\n\t\t\tif (t < 0) t += 1\n\t\t\tif (t > 1) t -= 1\n\t\t\tif (t < 1 / 6) return p + (q - p) * 6 * t\n\t\t\tif (t < 1 / 2) return q\n\t\t\tif (t < 2 / 3) return p + (q - p) * (2/3 - t) * 6\n\t\t\treturn p\n\t\t}\n\n\t\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s\n\t\tconst p = 2 * l - q\n\t\tconst r = hue2rgb(p, q, h + 1 / 3)\n\t\tconst g = hue2rgb(p, q, h)\n\t\tconst b = hue2rgb(p, q, h - 1 / 3)\n\n\t\treturn new Color(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255))\n\n\t}\n\n\tstatic RED = new Color(255, 0, 0)\n\tstatic GREEN = new Color(0, 255, 0)\n\tstatic BLUE = new Color(0, 0, 255)\n\tstatic YELLOW = new Color(255, 255, 0)\n\tstatic MAGENTA = new Color(255, 0, 255)\n\tstatic CYAN = new Color(0, 255, 255)\n\tstatic WHITE = new Color(255, 255, 255)\n\tstatic BLACK = new Color(0, 0, 0)\n\n\tclone(): Color {\n\t\treturn new Color(this.r, this.g, this.b)\n\t}\n\n\tlighten(a: number): Color {\n\t\treturn new Color(this.r + a, this.g + a, this.b + a)\n\t}\n\n\tdarken(a: number): Color {\n\t\treturn this.lighten(-a)\n\t}\n\n\tinvert(): Color {\n\t\treturn new Color(255 - this.r, 255 - this.g, 255 - this.b)\n\t}\n\n\tmult(other: Color): Color {\n\t\treturn new Color(\n\t\t\tthis.r * other.r / 255,\n\t\t\tthis.g * other.g / 255,\n\t\t\tthis.b * other.b / 255,\n\t\t)\n\t}\n\n\tlerp(dest: Color, t: number): Color {\n\t\treturn new Color(\n\t\t\tlerp(this.r, dest.r, t),\n\t\t\tlerp(this.g, dest.g, t),\n\t\t\tlerp(this.b, dest.b, t),\n\t\t)\n\t}\n\n\ttoHSL(): [number, number, number] {\n\t\tconst r = this.r / 255\n\t\tconst g = this.g / 255\n\t\tconst b = this.b / 255\n\t\tconst max = Math.max(r, g, b), min = Math.min(r, g, b)\n\t\tlet h = (max + min) / 2\n\t\tlet s = h\n\t\tconst l = h\n\t\tif (max == min) {\n\t\t\th = s = 0\n\t\t} else {\n\t\t\tconst d = max - min\n\t\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min)\n\t\t\tswitch (max) {\n\t\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break\n\t\t\t\tcase g: h = (b - r) / d + 2; break\n\t\t\t\tcase b: h = (r - g) / d + 4; break\n\t\t\t}\n\t\t\th /= 6\n\t\t}\n\t\treturn [ h, s, l ]\n\t}\n\n\teq(other: Color): boolean {\n\t\treturn this.r === other.r\n\t\t\t&& this.g === other.g\n\t\t\t&& this.b === other.b\n\n\t}\n\n\ttoString(): string {\n\t\treturn `rgb(${this.r}, ${this.g}, ${this.b})`\n\t}\n\n\ttoHex(): string {\n\t\treturn \"#\" + ((1 << 24) + (this.r << 16) + (this.g << 8) + this.b).toString(16).slice(1)\n\t}\n\n}\n\nexport function rgb(...args): Color {\n\tif (args.length === 0) {\n\t\treturn new Color(255, 255, 255)\n\t} else if (args.length === 1) {\n\t\tif (args[0] instanceof Color) {\n\t\t\treturn args[0].clone()\n\t\t} else if (typeof args[0] === \"string\") {\n\t\t\treturn Color.fromHex(args[0])\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 3) {\n\t\t\treturn Color.fromArray(args[0])\n\t\t}\n\t}\n\t// @ts-ignore\n\treturn new Color(...args)\n}\n\nexport const hsl2rgb = (h, s, l) => Color.fromHSL(h, s, l)\n\nexport class Quad {\n\tx: number = 0\n\ty: number = 0\n\tw: number = 1\n\th: number = 1\n\tconstructor(x: number, y: number, w: number, h: number) {\n\t\tthis.x = x\n\t\tthis.y = y\n\t\tthis.w = w\n\t\tthis.h = h\n\t}\n\tscale(other: Quad): Quad {\n\t\treturn new Quad(\n\t\t\tthis.x + this.w * other.x,\n\t\t\tthis.y + this.h * other.y,\n\t\t\tthis.w * other.w,\n\t\t\tthis.h * other.h,\n\t\t)\n\t}\n\tpos() {\n\t\treturn new Vec2(this.x, this.y)\n\t}\n\tclone(): Quad {\n\t\treturn new Quad(this.x, this.y, this.w, this.h)\n\t}\n\teq(other: Quad): boolean {\n\t\treturn this.x === other.x\n\t\t\t&& this.y === other.y\n\t\t\t&& this.w === other.w\n\t\t\t&& this.h === other.h\n\t}\n\ttoString(): string {\n\t\treturn `quad(${this.x}, ${this.y}, ${this.w}, ${this.h})`\n\t}\n}\n\nexport function quad(x: number, y: number, w: number, h: number): Quad {\n\treturn new Quad(x, y, w, h)\n}\n\nexport class Mat4 {\n\n\tm: number[] = [\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1,\n\t]\n\n\tconstructor(m?: number[]) {\n\t\tif (m) {\n\t\t\tthis.m = m\n\t\t}\n\t}\n\n\tstatic translate(p: Vec2): Mat4 {\n\t\treturn new Mat4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\tp.x, p.y, 0, 1,\n\t\t])\n\t}\n\n\tstatic scale(s: Vec2): Mat4 {\n\t\treturn new Mat4([\n\t\t\ts.x, 0, 0, 0,\n\t\t\t0, s.y, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\tstatic rotateX(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\treturn new Mat4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, -s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\tstatic rotateY(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\treturn new Mat4([\n\t\t\tc, 0, s, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t-s, 0, c, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\tstatic rotateZ(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\treturn new Mat4([\n\t\t\tc, -s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\ttranslate(p: Vec2) {\n\t\tthis.m[12] += this.m[0] * p.x + this.m[4] * p.y\n\t\tthis.m[13] += this.m[1] * p.x + this.m[5] * p.y\n\t\tthis.m[14] += this.m[2] * p.x + this.m[6] * p.y\n\t\tthis.m[15] += this.m[3] * p.x + this.m[7] * p.y\n\t\treturn this\n\t}\n\n\tscale(p: Vec2) {\n\t\tthis.m[0] *= p.x\n\t\tthis.m[4] *= p.y\n\t\tthis.m[1] *= p.x\n\t\tthis.m[5] *= p.y\n\t\tthis.m[2] *= p.x\n\t\tthis.m[6] *= p.y\n\t\tthis.m[3] *= p.x\n\t\tthis.m[7] *= p.y\n\t\treturn this\n\t}\n\n\trotate(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\tconst m0 = this.m[0]\n\t\tconst m1 = this.m[1]\n\t\tconst m4 = this.m[4]\n\t\tconst m5 = this.m[5]\n\t\tthis.m[0] = m0 * c + m1 * s\n\t\tthis.m[1] = -m0 * s + m1 * c\n\t\tthis.m[4] = m4 * c + m5 * s\n\t\tthis.m[5] = -m4 * s + m5 * c\n\t\treturn this\n\t}\n\n\t// TODO: in-place variant\n\tmult(other: Mat4): Mat4 {\n\t\tconst out = []\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tout[i * 4 + j] =\n\t\t\t\t\tthis.m[0 * 4 + j] * other.m[i * 4 + 0] +\n\t\t\t\t\tthis.m[1 * 4 + j] * other.m[i * 4 + 1] +\n\t\t\t\t\tthis.m[2 * 4 + j] * other.m[i * 4 + 2] +\n\t\t\t\t\tthis.m[3 * 4 + j] * other.m[i * 4 + 3]\n\t\t\t}\n\t\t}\n\t\treturn new Mat4(out)\n\t}\n\n\tmultVec2(p: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tp.x * this.m[0] + p.y * this.m[4] + this.m[12],\n\t\t\tp.x * this.m[1] + p.y * this.m[5] + this.m[13],\n\t\t)\n\t}\n\n\tgetTranslation() {\n\t\treturn new Vec2(this.m[12], this.m[13])\n\t}\n\n\tgetScale() {\n\t\tif (this.m[0] != 0 || this.m[1] != 0) {\n\t\t\tconst det = this.m[0] * this.m[5] - this.m[1] * this.m[4]\n\t\t\tconst r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1])\n\t\t\treturn new Vec2(r, det / r)\n\t\t} else if (this.m[4] != 0 || this.m[5] != 0) {\n\t\t\tconst det = this.m[0] * this.m[5] - this.m[1] * this.m[4]\n\t\t\tconst s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5])\n\t\t\treturn new Vec2(det / s, s)\n\t\t} else {\n\t\t\treturn new Vec2(0, 0)\n\t\t}\n\t}\n\n\tgetRotation() {\n\t\tif (this.m[0] != 0 || this.m[1] != 0) {\n\t\t\tconst r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1])\n\t\t\treturn rad2deg(this.m[1] > 0 ? Math.acos(this.m[0] / r) : -Math.acos(this.m[0] / r))\n\t\t} else if (this.m[4] != 0 || this.m[5] != 0) {\n\t\t\tconst s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5])\n\t\t\treturn rad2deg(Math.PI / 2 - (this.m[5] > 0 ? Math.acos(-this.m[4] / s) : -Math.acos(this.m[4] / s)))\n\t\t} else {\n\t\t\treturn 0\n\t\t}\n\t}\n\n\tgetSkew() {\n\t\tif (this.m[0] != 0 || this.m[1] != 0) {\n\t\t\tconst r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1])\n\t\t\treturn new Vec2(Math.atan(this.m[0] * this.m[4] + this.m[1] * this.m[5]) / (r * r), 0)\n\t\t}\n\t\telse if (this.m[4] != 0 || this.m[5] != 0) {\n\t\t\tconst s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5])\n\t\t\treturn new Vec2(0, Math.atan(this.m[0] * this.m[4] + this.m[1] * this.m[5]) / (s * s))\n\t\t}\n\t\telse {\n\t\t\treturn new Vec2(0, 0)\n\t\t}\n\t}\n\n\tinvert(): Mat4 {\n\n\t\tconst out = []\n\n\t\tconst f00 = this.m[10] * this.m[15] - this.m[14] * this.m[11]\n\t\tconst f01 = this.m[9] * this.m[15] - this.m[13] * this.m[11]\n\t\tconst f02 = this.m[9] * this.m[14] - this.m[13] * this.m[10]\n\t\tconst f03 = this.m[8] * this.m[15] - this.m[12] * this.m[11]\n\t\tconst f04 = this.m[8] * this.m[14] - this.m[12] * this.m[10]\n\t\tconst f05 = this.m[8] * this.m[13] - this.m[12] * this.m[9]\n\t\tconst f06 = this.m[6] * this.m[15] - this.m[14] * this.m[7]\n\t\tconst f07 = this.m[5] * this.m[15] - this.m[13] * this.m[7]\n\t\tconst f08 = this.m[5] * this.m[14] - this.m[13] * this.m[6]\n\t\tconst f09 = this.m[4] * this.m[15] - this.m[12] * this.m[7]\n\t\tconst f10 = this.m[4] * this.m[14] - this.m[12] * this.m[6]\n\t\tconst f11 = this.m[5] * this.m[15] - this.m[13] * this.m[7]\n\t\tconst f12 = this.m[4] * this.m[13] - this.m[12] * this.m[5]\n\t\tconst f13 = this.m[6] * this.m[11] - this.m[10] * this.m[7]\n\t\tconst f14 = this.m[5] * this.m[11] - this.m[9] * this.m[7]\n\t\tconst f15 = this.m[5] * this.m[10] - this.m[9] * this.m[6]\n\t\tconst f16 = this.m[4] * this.m[11] - this.m[8] * this.m[7]\n\t\tconst f17 = this.m[4] * this.m[10] - this.m[8] * this.m[6]\n\t\tconst f18 = this.m[4] * this.m[9] - this.m[8] * this.m[5]\n\n\t\tout[0] = this.m[5] * f00 - this.m[6] * f01 + this.m[7] * f02\n\t\tout[4] = -(this.m[4] * f00 - this.m[6] * f03 + this.m[7] * f04)\n\t\tout[8] = this.m[4] * f01 - this.m[5] * f03 + this.m[7] * f05\n\t\tout[12] = -(this.m[4] * f02 - this.m[5] * f04 + this.m[6] * f05)\n\n\t\tout[1] = -(this.m[1] * f00 - this.m[2] * f01 + this.m[3] * f02)\n\t\tout[5] = this.m[0] * f00 - this.m[2] * f03 + this.m[3] * f04\n\t\tout[9] = -(this.m[0] * f01 - this.m[1] * f03 + this.m[3] * f05)\n\t\tout[13] = this.m[0] * f02 - this.m[1] * f04 + this.m[2] * f05\n\n\t\tout[2] = this.m[1] * f06 - this.m[2] * f07 + this.m[3] * f08\n\t\tout[6] = -(this.m[0] * f06 - this.m[2] * f09 + this.m[3] * f10)\n\t\tout[10] = this.m[0] * f11 - this.m[1] * f09 + this.m[3] * f12\n\t\tout[14] = -(this.m[0] * f08 - this.m[1] * f10 + this.m[2] * f12)\n\n\t\tout[3] = -(this.m[1] * f13 - this.m[2] * f14 + this.m[3] * f15)\n\t\tout[7] = this.m[0] * f13 - this.m[2] * f16 + this.m[3] * f17\n\t\tout[11] = -(this.m[0] * f14 - this.m[1] * f16 + this.m[3] * f18)\n\t\tout[15] = this.m[0] * f15 - this.m[1] * f17 + this.m[2] * f18\n\n\t\tconst det =\n\t\t\tthis.m[0] * out[0] +\n\t\t\tthis.m[1] * out[4] +\n\t\t\tthis.m[2] * out[8] +\n\t\t\tthis.m[3] * out[12]\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tout[i * 4 + j] *= (1.0 / det)\n\t\t\t}\n\t\t}\n\n\t\treturn new Mat4(out)\n\n\t}\n\n\tclone(): Mat4 {\n\t\treturn new Mat4([...this.m])\n\t}\n\n\ttoString(): string {\n\t\treturn this.m.toString()\n\t}\n\n}\n\nexport function wave(lo: number, hi: number, t: number, f = (t) => -Math.cos(t)): number {\n\treturn lo + (f(t) + 1) / 2 * (hi - lo)\n}\n\n// basic ANSI C LCG\nconst A = 1103515245\nconst C = 12345\nconst M = 2147483648\n\nexport class RNG {\n\tseed: number\n\tconstructor(seed: number) {\n\t\tthis.seed = seed\n\t}\n\tgen(): number {\n\t\tthis.seed = (A * this.seed + C) % M\n\t\treturn this.seed / M\n\t}\n\tgenNumber(a: number, b: number): number {\n\t\treturn a + this.gen() * (b - a)\n\t}\n\tgenVec2(a: Vec2, b?: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tthis.genNumber(a.x, b.x),\n\t\t\tthis.genNumber(a.y, b.y),\n\t\t)\n\t}\n\tgenColor(a: Color, b: Color): Color {\n\t\treturn new Color(\n\t\t\tthis.genNumber(a.r, b.r),\n\t\t\tthis.genNumber(a.g, b.g),\n\t\t\tthis.genNumber(a.b, b.b),\n\t\t)\n\t}\n\tgenAny<T = RNGValue>(...args: T[]): T {\n\t\tif (args.length === 0) {\n\t\t\treturn this.gen() as T\n\t\t} else if (args.length === 1) {\n\t\t\tif (typeof args[0] === \"number\") {\n\t\t\t\treturn this.genNumber(0, args[0]) as T\n\t\t\t} else if (args[0] instanceof Vec2) {\n\t\t\t\treturn this.genVec2(vec2(0, 0), args[0]) as T\n\t\t\t} else if (args[0] instanceof Color) {\n\t\t\t\treturn this.genColor(rgb(0, 0, 0), args[0]) as T\n\t\t\t}\n\t\t} else if (args.length === 2) {\n\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\treturn this.genNumber(args[0], args[1]) as T\n\t\t\t} else if (args[0] instanceof Vec2 && args[1] instanceof Vec2) {\n\t\t\t\treturn this.genVec2(args[0], args[1]) as T\n\t\t\t} else if (args[0] instanceof Color && args[1] instanceof Color) {\n\t\t\t\treturn this.genColor(args[0], args[1]) as T\n\t\t\t}\n\t\t}\n\t}\n}\n\n// TODO: let user pass seed\nconst defRNG = new RNG(Date.now())\n\nexport function randSeed(seed?: number): number {\n\tif (seed != null) {\n\t\tdefRNG.seed = seed\n\t}\n\treturn defRNG.seed\n}\n\nexport function rand(...args) {\n\t// @ts-ignore\n\treturn defRNG.genAny(...args)\n}\n\n// TODO: randi() to return 0 / 1?\nexport function randi(...args: number[]) {\n\treturn Math.floor(rand(...args))\n}\n\nexport function chance(p: number): boolean {\n\treturn rand() <= p\n}\n\nexport function choose<T>(list: T[]): T {\n\treturn list[randi(list.length)]\n}\n\n// TODO: better name\nexport function testRectRect2(r1: Rect, r2: Rect): boolean {\n\treturn r1.pos.x + r1.width >= r2.pos.x\n\t\t&& r1.pos.x <= r2.pos.x + r2.width\n\t\t&& r1.pos.y + r1.height >= r2.pos.y\n\t\t&& r1.pos.y <= r2.pos.y + r2.height\n}\n\nexport function testRectRect(r1: Rect, r2: Rect): boolean {\n\treturn r1.pos.x + r1.width > r2.pos.x\n\t\t&& r1.pos.x < r2.pos.x + r2.width\n\t\t&& r1.pos.y + r1.height > r2.pos.y\n\t\t&& r1.pos.y < r2.pos.y + r2.height\n}\n\n// TODO: better name\nexport function testLineLineT(l1: Line, l2: Line): number | null {\n\n\tif ((l1.p1.x === l1.p2.x && l1.p1.y === l1.p2.y) || (l2.p1.x === l2.p2.x && l2.p1.y === l2.p2.y)) {\n\t\treturn null\n\t}\n\n\tconst denom = ((l2.p2.y - l2.p1.y) * (l1.p2.x - l1.p1.x) - (l2.p2.x - l2.p1.x) * (l1.p2.y - l1.p1.y))\n\n\t// parallel\n\tif (denom === 0) {\n\t\treturn null\n\t}\n\n\tconst ua = ((l2.p2.x - l2.p1.x) * (l1.p1.y - l2.p1.y) - (l2.p2.y - l2.p1.y) * (l1.p1.x - l2.p1.x)) / denom\n\tconst ub = ((l1.p2.x - l1.p1.x) * (l1.p1.y - l2.p1.y) - (l1.p2.y - l1.p1.y) * (l1.p1.x - l2.p1.x)) / denom\n\n\t// is the intersection on the segments\n\tif (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n\t\treturn null\n\t}\n\n\treturn ua\n\n}\n\nexport function testLineLine(l1: Line, l2: Line): Vec2 | null {\n\tconst t = testLineLineT(l1, l2)\n\tif (!t) return null\n\treturn vec2(\n\t\tl1.p1.x + t * (l1.p2.x - l1.p1.x),\n\t\tl1.p1.y + t * (l1.p2.y - l1.p1.y),\n\t)\n}\n\nexport function testRectLine(r: Rect, l: Line): boolean {\n\tif (testRectPoint(r, l.p1) || testRectPoint(r, l.p2)) {\n\t\treturn true\n\t}\n\tconst pts = r.points()\n\treturn !!testLineLine(l, new Line(pts[0], pts[1]))\n\t\t|| !!testLineLine(l, new Line(pts[1], pts[2]))\n\t\t|| !!testLineLine(l, new Line(pts[2], pts[3]))\n\t\t|| !!testLineLine(l, new Line(pts[3], pts[0]))\n}\n\nexport function testRectPoint2(r: Rect, pt: Point): boolean {\n\treturn pt.x >= r.pos.x\n\t\t&& pt.x <= r.pos.x + r.width\n\t\t&& pt.y >= r.pos.y\n\t\t&& pt.y <= r.pos.y + r.height\n}\n\nexport function testRectPoint(r: Rect, pt: Point): boolean {\n\treturn pt.x > r.pos.x\n\t\t&& pt.x < r.pos.x + r.width\n\t\t&& pt.y > r.pos.y\n\t\t&& pt.y < r.pos.y + r.height\n}\n\nexport function testRectCircle(r: Rect, c: Circle): boolean {\n\tconst nx = Math.max(r.pos.x, Math.min(c.center.x, r.pos.x + r.width))\n\tconst ny = Math.max(r.pos.y, Math.min(c.center.y, r.pos.y + r.height))\n\tconst nearestPoint = vec2(nx, ny)\n\treturn nearestPoint.sdist(c.center) <= c.radius * c.radius\n}\n\nexport function testRectPolygon(r: Rect, p: Polygon): boolean {\n\treturn testPolygonPolygon(p, new Polygon(r.points()))\n}\n\nexport function testLinePoint(l: Line, pt: Vec2): boolean {\n\tconst v1 = pt.sub(l.p1)\n\tconst v2 = l.p2.sub(l.p1)\n\n\t// Check if sine is 0, in that case lines are parallel.\n\t// If not parallel, the point cannot lie on the line.\n\tif (Math.abs(v1.cross(v2)) > Number.EPSILON) {\n\t\treturn false\n\t}\n\n\t// Scalar projection of v1 on v2\n\tconst t = v1.dot(v2) / v2.dot(v2)\n\t// Since t is percentual distance of pt from line.p1 on the line,\n\t// it should be between 0% and 100%\n\treturn t >= 0 && t <= 1\n}\n\nexport function testLineCircle(l: Line, circle: Circle): boolean {\n\tconst v = l.p2.sub(l.p1)\n\tconst a = v.dot(v)\n\tconst centerToOrigin = l.p1.sub(circle.center)\n\tconst b = 2 * v.dot(centerToOrigin)\n\tconst c = centerToOrigin.dot(centerToOrigin) - circle.radius * circle.radius\n\t// Calculate the discriminant of ax^2 + bx + c\n\tconst dis = b * b - 4 * a * c\n\n\t// No root\n\tif ((a <= Number.EPSILON) || (dis < 0)) {\n\t\treturn false\n\t}\n\t// One possible root\n\telse if (dis == 0) {\n\t\tconst t = -b / (2 * a)\n\t\tif (t >= 0 && t <= 1) {\n\t\t\treturn true\n\t\t}\n\t}\n\t// Two possible roots\n\telse {\n\t\tconst t1 = (-b + Math.sqrt(dis)) / (2 * a)\n\t\tconst t2 = (-b - Math.sqrt(dis)) / (2 * a)\n\t\tif ((t1 >= 0 && t1 <= 1) || (t2 >= 0 && t2 <= 1)) {\n\t\t\treturn true\n\t\t}\n\t}\n\n\t// Check if line is completely within the circle\n\t// We only need to check one point, since the line didn't cross the circle\n\treturn testCirclePoint(circle, l.p1)\n}\n\nexport function testLinePolygon(l: Line, p: Polygon): boolean {\n\n\t// test if line is inside\n\tif (testPolygonPoint(p, l.p1) || testPolygonPoint(p, l.p2)) {\n\t\treturn true\n\t}\n\n\t// test each line\n\tfor (let i = 0; i < p.pts.length; i++) {\n\t\tconst p1 = p.pts[i]\n\t\tconst p2 = p.pts[(i + 1) % p.pts.length]\n\t\tif (testLineLine(l, new Line(p1, p2))) {\n\t\t\treturn true\n\t\t}\n\t}\n\n\treturn false\n\n}\n\nexport function testCirclePoint(c: Circle, p: Point): boolean {\n\treturn c.center.sdist(p) < c.radius * c.radius\n}\n\nexport function testCircleCircle(c1: Circle, c2: Circle): boolean {\n\treturn c1.center.sdist(c2.center) < (c1.radius + c2.radius) * (c1.radius + c2.radius)\n}\n\nexport function testCirclePolygon(c: Circle, p: Polygon): boolean {\n\t// For each edge check for intersection\n\tlet prev = p.pts[p.pts.length - 1]\n\tfor (const cur of p.pts) {\n\t\tif (testLineCircle(new Line(prev, cur), c)) {\n\t\t\treturn true\n\t\t}\n\t\tprev = cur\n\t}\n\n\t// Check if the polygon is completely within the circle\n\t// We only need to check one point, since the polygon didn't cross the circle\n\tif (testCirclePoint(c, p.pts[0])) {\n\t\treturn true\n\t}\n\n\t// Check if the circle is completely within the polygon\n\treturn testPolygonPoint(p, c.center)\n}\n\nexport function testPolygonPolygon(p1: Polygon, p2: Polygon): boolean {\n\tfor (let i = 0; i < p1.pts.length; i++) {\n\t\tif (testLinePolygon(new Line(p1.pts[i], p1.pts[(i + 1) % p1.pts.length]), p2)) {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\nexport function testPolygonPoint(poly: Polygon, pt: Point): boolean {\n\n\tlet c = false\n\tconst p = poly.pts\n\n\tfor (let i = 0, j = p.length - 1; i < p.length; j = i++) {\n\t\tif (\n\t\t\t((p[i].y > pt.y) != (p[j].y > pt.y))\n\t\t\t&& (pt.x < (p[j].x - p[i].x) * (pt.y - p[i].y) / (p[j].y - p[i].y) + p[i].x)\n\t\t) {\n\t\t\tc = !c\n\t\t}\n\t}\n\n\treturn c\n\n}\n\nexport function testPointPoint(p1: Point, p2: Point): boolean {\n\treturn p1.x === p2.x && p1.y === p2.y\n}\n\nexport class Line {\n\tp1: Vec2\n\tp2: Vec2\n\tconstructor(p1: Vec2, p2: Vec2) {\n\t\tthis.p1 = p1.clone()\n\t\tthis.p2 = p2.clone()\n\t}\n\ttransform(m: Mat4): Line {\n\t\treturn new Line(m.multVec2(this.p1), m.multVec2(this.p2))\n\t}\n\tbbox(): Rect {\n\t\treturn Rect.fromPoints(this.p1, this.p2)\n\t}\n\tarea(): number {\n\t\treturn this.p1.dist(this.p2)\n\t}\n\tclone(): Line {\n\t\treturn new Line(this.p1, this.p2)\n\t}\n}\n\n// TODO: use x: number y: number (x, y, width, height)\nexport class Rect {\n\tpos: Vec2\n\twidth: number\n\theight: number\n\tconstructor(pos: Vec2, width: number, height: number) {\n\t\tthis.pos = pos.clone()\n\t\tthis.width = width\n\t\tthis.height = height\n\t}\n\tstatic fromPoints(p1: Vec2, p2: Vec2): Rect {\n\t\treturn new Rect(p1.clone(), p2.x - p1.x, p2.y - p1.y)\n\t}\n\tcenter(): Vec2 {\n\t\treturn new Vec2(this.pos.x + this.width / 2, this.pos.y + this.height / 2)\n\t}\n\tpoints(): [Vec2, Vec2, Vec2, Vec2] {\n\t\treturn [\n\t\t\tthis.pos,\n\t\t\tthis.pos.add(this.width, 0),\n\t\t\tthis.pos.add(this.width, this.height),\n\t\t\tthis.pos.add(0, this.height),\n\t\t]\n\t}\n\ttransform(m: Mat4): Polygon {\n\t\treturn new Polygon(this.points().map((pt) => m.multVec2(pt)))\n\t}\n\tbbox(): Rect {\n\t\treturn this.clone()\n\t}\n\tarea(): number {\n\t\treturn this.width * this.height\n\t}\n\tclone(): Rect {\n\t\treturn new Rect(this.pos.clone(), this.width, this.height)\n\t}\n\tdistToPoint(p: Vec2): number {\n\t\treturn Math.sqrt(this.sdistToPoint(p))\n\t}\n\tsdistToPoint(p: Vec2): number {\n\t\tconst min = this.pos\n\t\tconst max = this.pos.add(this.width, this.height)\n\t\tconst dx = Math.max(min.x - p.x, 0, p.x - max.x)\n\t\tconst dy = Math.max(min.y - p.y, 0, p.y - max.y)\n\t\treturn dx * dx + dy * dy\n\t}\n}\n\nexport class Circle {\n\tcenter: Vec2\n\tradius: number\n\tconstructor(center: Vec2, radius: number) {\n\t\tthis.center = center.clone()\n\t\tthis.radius = radius\n\t}\n\ttransform(tr: Mat4): Ellipse {\n\t\treturn new Ellipse(this.center, this.radius, this.radius).transform(tr)\n\t}\n\tbbox(): Rect {\n\t\treturn Rect.fromPoints(\n\t\t\tthis.center.sub(vec2(this.radius)),\n\t\t\tthis.center.add(vec2(this.radius)),\n\t\t)\n\t}\n\tarea(): number {\n\t\treturn this.radius * this.radius * Math.PI\n\t}\n\tclone(): Circle {\n\t\treturn new Circle(this.center, this.radius)\n\t}\n}\n\nexport class Ellipse {\n\tcenter: Vec2\n\tradiusX: number\n\tradiusY: number\n\tconstructor(center: Vec2, rx: number, ry: number) {\n\t\tthis.center = center.clone()\n\t\tthis.radiusX = rx\n\t\tthis.radiusY = ry\n\t}\n\ttransform(tr: Mat4): Ellipse {\n\t\treturn new Ellipse(\n\t\t\ttr.multVec2(this.center),\n\t\t\ttr.m[0] * this.radiusX,\n\t\t\ttr.m[5] * this.radiusY,\n\t\t)\n\t}\n\tbbox(): Rect {\n\t\treturn Rect.fromPoints(\n\t\t\tthis.center.sub(vec2(this.radiusX, this.radiusY)),\n\t\t\tthis.center.add(vec2(this.radiusX, this.radiusY)),\n\t\t)\n\t}\n\tarea(): number {\n\t\treturn this.radiusX * this.radiusY * Math.PI\n\t}\n\tclone(): Ellipse {\n\t\treturn new Ellipse(this.center, this.radiusX, this.radiusY)\n\t}\n}\n\nexport class Polygon {\n\tpts: Vec2[]\n\tconstructor(pts: Vec2[]) {\n\t\tif (pts.length < 3) {\n\t\t\tthrow new Error(\"Polygons should have at least 3 vertices\")\n\t\t}\n\t\tthis.pts = pts\n\t}\n\ttransform(m: Mat4): Polygon {\n\t\treturn new Polygon(this.pts.map((pt) => m.multVec2(pt)))\n\t}\n\tbbox(): Rect {\n\t\tconst p1 = vec2(Number.MAX_VALUE)\n\t\tconst p2 = vec2(-Number.MAX_VALUE)\n\t\tfor (const pt of this.pts) {\n\t\t\tp1.x = Math.min(p1.x, pt.x)\n\t\t\tp2.x = Math.max(p2.x, pt.x)\n\t\t\tp1.y = Math.min(p1.y, pt.y)\n\t\t\tp2.y = Math.max(p2.y, pt.y)\n\t\t}\n\t\treturn Rect.fromPoints(p1, p2)\n\t}\n\tarea(): number {\n\t\tlet total = 0\n\t\tconst l = this.pts.length\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tconst p1 = this.pts[i]\n\t\t\tconst p2 = this.pts[(i + 1) % l]\n\t\t\ttotal += (p1.x * p2.y * 0.5)\n\t\t\ttotal -= (p2.x * p1.y * 0.5)\n\t\t}\n\t\treturn Math.abs(total)\n\t}\n\tclone(): Polygon {\n\t\treturn new Polygon(this.pts.map((pt) => pt.clone()))\n\t}\n}\n\nexport function sat(p1: Polygon, p2: Polygon): Vec2 | null {\n\tlet overlap = Number.MAX_VALUE\n\tlet displacement = vec2(0)\n\tfor (const poly of [p1, p2]) {\n\t\tfor (let i = 0; i < poly.pts.length; i++) {\n\t\t\tconst a = poly.pts[i]\n\t\t\tconst b = poly.pts[(i + 1) % poly.pts.length]\n\t\t\tconst axisProj = b.sub(a).normal().unit()\n\t\t\tlet min1 = Number.MAX_VALUE\n\t\t\tlet max1 = -Number.MAX_VALUE\n\t\t\tfor (let j = 0; j < p1.pts.length; j++) {\n\t\t\t\tconst q = p1.pts[j].dot(axisProj)\n\t\t\t\tmin1 = Math.min(min1, q)\n\t\t\t\tmax1 = Math.max(max1, q)\n\t\t\t}\n\t\t\tlet min2 = Number.MAX_VALUE\n\t\t\tlet max2 = -Number.MAX_VALUE\n\t\t\tfor (let j = 0; j < p2.pts.length; j++) {\n\t\t\t\tconst q = p2.pts[j].dot(axisProj)\n\t\t\t\tmin2 = Math.min(min2, q)\n\t\t\t\tmax2 = Math.max(max2, q)\n\t\t\t}\n\t\t\tconst o = Math.min(max1, max2) - Math.max(min1, min2)\n\t\t\tif (o < 0) {\n\t\t\t\treturn null\n\t\t\t}\n\t\t\tif (o < Math.abs(overlap)) {\n\t\t\t\tconst o1 = max2 - min1\n\t\t\t\tconst o2 = min2 - max1\n\t\t\t\toverlap = Math.abs(o1) < Math.abs(o2) ? o1 : o2\n\t\t\t\tdisplacement = axisProj.scale(overlap)\n\t\t\t}\n\t\t}\n\t}\n\treturn displacement\n}\n", "export class Registry<T> extends Map<number, T> {\n\tprivate lastID: number\n\tconstructor(...args) {\n\t\tsuper(...args)\n\t\tthis.lastID = 0\n\t}\n\tpush(v: T): number {\n\t\tconst id = this.lastID\n\t\tthis.set(id, v)\n\t\tthis.lastID++\n\t\treturn id\n\t}\n\tpushd(v: T): () => void {\n\t\tconst id = this.push(v)\n\t\treturn () => this.delete(id)\n\t}\n}\n\nexport class EventController {\n\tpaused: boolean = false\n\treadonly cancel: () => void\n\tconstructor(cancel: () => void) {\n\t\tthis.cancel = cancel\n\t}\n\tstatic join(events: EventController[]): EventController {\n\t\tconst ev = new EventController(() => events.forEach((e) => e.cancel()))\n\t\tObject.defineProperty(ev, \"paused\", {\n\t\t\tget: () => events[0].paused,\n\t\t\tset: (p: boolean) => events.forEach((e) => e.paused = p),\n\t\t})\n\t\tev.paused = false\n\t\treturn ev\n\t}\n}\n\nexport class Event<Args extends any[] = any[]> {\n\tprivate handlers: Registry<(...args: Args) => void> = new Registry()\n\tadd(action: (...args: Args) => void): EventController {\n\t\tconst cancel = this.handlers.pushd((...args: Args) => {\n\t\t\tif (ev.paused) return\n\t\t\taction(...args)\n\t\t})\n\t\tconst ev = new EventController(cancel)\n\t\treturn ev\n\t}\n\taddOnce(action: (...args) => void): EventController {\n\t\tconst ev = this.add((...args) => {\n\t\t\tev.cancel()\n\t\t\taction(...args)\n\t\t})\n\t\treturn ev\n\t}\n\tnext(): Promise<Args> {\n\t\treturn new Promise((res) => this.addOnce(res))\n\t}\n\ttrigger(...args: Args) {\n\t\tthis.handlers.forEach((action) => action(...args))\n\t}\n\tnumListeners(): number {\n\t\treturn this.handlers.size\n\t}\n\tclear() {\n\t\tthis.handlers.clear()\n\t}\n}\n\n// TODO: only accept one argument?\nexport class EventHandler<EventMap extends Record<string, any[]>> {\n\tprivate handlers: Partial<{\n\t\t[Name in keyof EventMap]: Event<EventMap[Name]>\n\t}> = {}\n\ton<Name extends keyof EventMap>(\n\t\tname: Name,\n\t\taction: (...args: EventMap[Name]) => void,\n\t): EventController {\n\t\tif (!this.handlers[name]) {\n\t\t\tthis.handlers[name] = new Event<EventMap[Name]>()\n\t\t}\n\t\treturn this.handlers[name].add(action)\n\t}\n\tonOnce<Name extends keyof EventMap>(\n\t\tname: Name,\n\t\taction: (...args: EventMap[Name]) => void,\n\t): EventController {\n\t\tconst ev = this.on(name, (...args) => {\n\t\t\tev.cancel()\n\t\t\taction(...args)\n\t\t})\n\t\treturn ev\n\t}\n\tnext<Name extends keyof EventMap>(name: Name): Promise<unknown> {\n\t\treturn new Promise((res) => {\n\t\t\t// TODO: can only pass 1 val to resolve()\n\t\t\tthis.onOnce(name, (...args: EventMap[Name]) => res(args[0]))\n\t\t})\n\t}\n\ttrigger<Name extends keyof EventMap>(name: Name, ...args: EventMap[Name]) {\n\t\tif (this.handlers[name]) {\n\t\t\tthis.handlers[name].trigger(...args)\n\t\t}\n\t}\n\tremove<Name extends keyof EventMap>(name: Name) {\n\t\tdelete this.handlers[name]\n\t}\n\tclear() {\n\t\tthis.handlers = {}\n\t}\n\tnumListeners<Name extends keyof EventMap>(name: Name): number {\n\t\treturn this.handlers[name]?.numListeners() ?? 0\n\t}\n}\n\nexport function deepEq(o1: any, o2: any): boolean {\n\tif (o1 === o2) {\n\t\treturn true\n\t}\n\tconst t1 = typeof o1\n\tconst t2 = typeof o2\n\tif (t1 !== t2) {\n\t\treturn false\n\t}\n\tif (t1 === \"object\" && t2 === \"object\" && o1 !== null && o2 !== null) {\n\t\tif (Array.isArray(o1) !== Array.isArray(o2)) {\n\t\t\treturn false\n\t\t}\n\t\tconst k1 = Object.keys(o1)\n\t\tconst k2 = Object.keys(o2)\n\t\tif (k1.length !== k2.length) {\n\t\t\treturn false\n\t\t}\n\t\tfor (const k of k1) {\n\t\t\tconst v1 = o1[k]\n\t\t\tconst v2 = o2[k]\n\t\t\tif (!deepEq(v1, v2)) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\treturn false\n}\n\nexport function base64ToArrayBuffer(base64: string): ArrayBuffer {\n\tconst binstr = window.atob(base64)\n\tconst len = binstr.length\n\tconst bytes = new Uint8Array(len)\n\tfor (let i = 0; i < len; i++) {\n\t\tbytes[i] = binstr.charCodeAt(i)\n\t}\n\treturn bytes.buffer\n}\n\nexport function dataURLToArrayBuffer(url: string): ArrayBuffer {\n\treturn base64ToArrayBuffer(url.split(\",\")[1])\n}\n\nexport function download(filename: string, url: string) {\n\tconst a = document.createElement(\"a\")\n\ta.href = url\n\ta.download = filename\n\ta.click()\n}\n\nexport function downloadText(filename: string, text: string) {\n\tdownload(filename, \"data:text/plain;charset=utf-8,\" + text)\n}\n\nexport function downloadJSON(filename: string, data: any) {\n\tdownloadText(filename, JSON.stringify(data))\n}\n\nexport function downloadBlob(filename: string, blob: Blob) {\n\tconst url = URL.createObjectURL(blob)\n\tdownload(filename, url)\n\tURL.revokeObjectURL(url)\n}\n\nexport const isDataURL = (str: string) => str.match(/^data:\\w+\\/\\w+;base64,.+/)\nexport const getFileExt = (p: string) => p.split(\".\").pop()\nexport const getFileName = (p: string) => p.split(\".\").slice(0, -1).join(\".\")\n\ntype Func = (...args: any[]) => any\n\nexport function overload2<A extends Func, B extends Func>(fn1: A, fn2: B): A & B {\n\treturn ((...args) => {\n\t\tconst al = args.length\n\t\tif (al === fn1.length) return fn1(...args)\n\t\tif (al === fn2.length) return fn2(...args)\n\t}) as A & B\n}\n\nexport function overload3<\n\tA extends Func,\n\tB extends Func,\n\tC extends Func,\n>(fn1: A, fn2: B, fn3: C): A & B & C {\n\treturn ((...args) => {\n\t\tconst al = args.length\n\t\tif (al === fn1.length) return fn1(...args)\n\t\tif (al === fn2.length) return fn2(...args)\n\t\tif (al === fn3.length) return fn3(...args)\n\t}) as A & B & C\n}\n\nexport function overload4<\n\tA extends Func,\n\tB extends Func,\n\tC extends Func,\n\tD extends Func,\n>(fn1: A, fn2: B, fn3: C, fn4: D): A & B & C & D {\n\treturn ((...args) => {\n\t\tconst al = args.length\n\t\tif (al === fn1.length) return fn1(...args)\n\t\tif (al === fn2.length) return fn2(...args)\n\t\tif (al === fn3.length) return fn3(...args)\n\t\tif (al === fn4.length) return fn4(...args)\n\t}) as A & B & C & D\n}\n\nexport const uid = (() => {\n\tlet id = 0\n\treturn () => id++\n})()\n\nexport const getErrorMessage = (error: unknown) =>\n\t(error instanceof Error) ? error.message : String(error)\n\nconst warned = new Set()\n\nexport function warn(msg: string) {\n\tif (!warned.has(msg)) {\n\t\twarned.add(msg)\n\t\tconsole.warn(msg)\n\t}\n}\n\nexport function deprecateMsg(oldName: string, newName: string) {\n\twarn(`${oldName} is deprecated. Use ${newName} instead.`)\n}\n\nexport function deprecate(oldName: string, newName: string, newFunc: (...args) => any) {\n\treturn (...args) => {\n\t\tdeprecateMsg(oldName, newName)\n\t\treturn newFunc(...args)\n\t}\n}\n\nexport function benchmark(task: () => void, times: number = 1) {\n\tconst t1 = performance.now()\n\tfor (let i = 0; i < times; i++) {\n\t\ttask()\n\t}\n\tconst t2 = performance.now()\n\treturn t2 - t1\n}\n\nexport function comparePerf(t1: () => void, t2: () => void, times: number = 1) {\n\treturn benchmark(t2, times) / benchmark(t1, times)\n}\n\nexport class BinaryHeap<T> {\n\t_items: T[]\n\t_compareFn: (a: T, b: T) => boolean\n\n\t/**\n\t * Creates a binary heap with the given compare function\n\t * Not passing a compare function will give a min heap\n\t */\n\tconstructor(compareFn = (a: T, b: T) => a < b) {\n\t\tthis._compareFn = compareFn\n\t\tthis._items = []\n\t}\n\n\t/**\n\t * Insert an item into the binary heap\n\t */\n\tinsert(item: T) {\n\t\tthis._items.push(item)\n\t\tthis.moveUp(this._items.length - 1)\n\t}\n\n\t/**\n\t * Remove the smallest item from the binary heap in case of a min heap\n\t * or the greatest item from the binary heap in case of a max heap\n\t */\n\tremove() {\n\t\tif (this._items.length === 0)\n\t\t\treturn null\n\t\tconst item = this._items[0]\n\t\tconst lastItem = this._items.pop()\n\t\tif (this._items.length !== 0) {\n\t\t\tthis._items[0] = lastItem as T\n\t\t\tthis.moveDown(0)\n\t\t}\n\t\treturn item\n\t}\n\n\t/**\n\t * Remove all items\n\t */\n\tclear() {\n\t\tthis._items.splice(0, this._items.length)\n\t}\n\n\tmoveUp(pos: number) {\n\t\twhile (pos > 0) {\n\t\t\tconst parent = Math.floor((pos - 1) / 2)\n\t\t\tif (!this._compareFn(this._items[pos], this._items[parent]))\n\t\t\t\tif (this._items[pos] >= this._items[parent])\n\t\t\t\t\tbreak\n\t\t\tthis.swap(pos, parent)\n\t\t\tpos = parent\n\t\t}\n\t}\n\n\tmoveDown(pos: number) {\n\t\twhile (pos < Math.floor(this._items.length / 2)) {\n\t\t\tlet child = 2 * pos + 1\n\t\t\tif (child < this._items.length - 1 && !this._compareFn(this._items[child], this._items[child + 1]))\n\t\t\t\t++child\n\t\t\tif (this._compareFn(this._items[pos], this._items[child]))\n\t\t\t\tbreak\n\t\t\tthis.swap(pos, child)\n\t\t\tpos = child\n\t\t}\n\t}\n\n\tswap(index1: number, index2: number) {\n\t\t[this._items[index1], this._items[index2]] = [this._items[index2], this._items[index1]]\n\t}\n\n\t/**\n\t * Returns the amount of items\n\t */\n\tget length() {\n\t\treturn this._items.length\n\t}\n}\n\nconst enum EnumRunesCode {\n\tHIGH_SURROGATE_START = 0xd800,\n\tHIGH_SURROGATE_END = 0xdbff,\n\n\tLOW_SURROGATE_START = 0xdc00,\n\n\tREGIONAL_INDICATOR_START = 0x1f1e6,\n\tREGIONAL_INDICATOR_END = 0x1f1ff,\n\n\tFITZPATRICK_MODIFIER_START = 0x1f3fb,\n\tFITZPATRICK_MODIFIER_END = 0x1f3ff,\n\n\tVARIATION_MODIFIER_START = 0xfe00,\n\tVARIATION_MODIFIER_END = 0xfe0f,\n\n\tDIACRITICAL_MARKS_START = 0x20d0,\n\tDIACRITICAL_MARKS_END = 0x20ff,\n\n\tSUBDIVISION_INDICATOR_START = 0x1f3f4,\n\tTAGS_START = 0xe0000,\n\tTAGS_END = 0xe007f,\n\n\tZWJ = 0x200d,\n}\n\nconst GRAPHEMES = Object.freeze([\n\t0x0308, // ( \u25CC\u0308 ) COMBINING DIAERESIS\n\t0x0937, // ( \u0937 ) DEVANAGARI LETTER SSA\n\t0x093F, // ( \u093F ) DEVANAGARI VOWEL SIGN I\n\t0x0BA8, // ( \u0BA8 ) TAMIL LETTER NA\n\t0x0BBF, // ( \u0BBF ) TAMIL VOWEL SIGN I\n\t0x0BCD, // ( \u25CC\u0BCD) TAMIL SIGN VIRAMA\n\t0x0E31, // ( \u25CC\u0E31 ) THAI CHARACTER MAI HAN-AKAT\n\t0x0E33, // ( \u0E33 ) THAI CHARACTER SARA AM\n\t0x0E40, // ( \u0E40 ) THAI CHARACTER SARA E\n\t0x0E49, // ( \u0E40 ) THAI CHARACTER MAI THO\n\t0x1100, // ( \u1100 ) HANGUL CHOSEONG KIYEOK\n\t0x1161, // ( \u1161 ) HANGUL JUNGSEONG A\n\t0x11A8, // ( \u11A8 ) HANGUL JONGSEONG KIYEOK\n])\n\nenum EnumCodeUnits {\n\tunit_1 = 1,\n\tunit_2 = 2,\n\tunit_4 = 4,\n}\n\nexport function runes(string: string): string[] {\n\tif (typeof string !== \"string\") {\n\t\tthrow new TypeError(\"string cannot be undefined or null\")\n\t}\n\tconst result: string[] = []\n\tlet i = 0\n\tlet increment = 0\n\twhile (i < string.length) {\n\t\tincrement += nextUnits(i + increment, string)\n\t\tif (isGrapheme(string[i + increment])) {\n\t\t\tincrement++\n\t\t}\n\t\tif (isVariationSelector(string[i + increment])) {\n\t\t\tincrement++\n\t\t}\n\t\tif (isDiacriticalMark(string[i + increment])) {\n\t\t\tincrement++\n\t\t}\n\t\tif (isZeroWidthJoiner(string[i + increment])) {\n\t\t\tincrement++\n\t\t\tcontinue\n\t\t}\n\t\tresult.push(string.substring(i, i + increment))\n\t\ti += increment\n\t\tincrement = 0\n\t}\n\treturn result\n}\n\n// Decide how many code units make up the current character.\n// BMP characters: 1 code unit\n// Non-BMP characters (represented by surrogate pairs): 2 code units\n// Emoji with skin-tone modifiers: 4 code units (2 code points)\n// Country flags: 4 code units (2 code points)\n// Variations: 2 code units\n// Subdivision flags: 14 code units (7 code points)\nfunction nextUnits(i: number, string: string) {\n\tconst current = string[i]\n\t// If we don't have a value that is part of a surrogate pair, or we're at\n\t// the end, only take the value at i\n\tif (!isFirstOfSurrogatePair(current) || i === string.length - 1) {\n\t\treturn EnumCodeUnits.unit_1\n\t}\n\n\tconst currentPair = current + string[i + 1]\n\tconst nextPair = string.substring(i + 2, i + 5)\n\n\t// Country flags are comprised of two regional indicator symbols,\n\t// each represented by a surrogate pair.\n\t// See http://emojipedia.org/flags/\n\t// If both pairs are regional indicator symbols, take 4\n\tif (isRegionalIndicator(currentPair) && isRegionalIndicator(nextPair)) {\n\t\treturn EnumCodeUnits.unit_4\n\t}\n\n\t// https://unicode.org/emoji/charts/full-emoji-list.html#subdivision-flag\n\t// See https://emojipedia.org/emoji-tag-sequence/\n\t// If nextPair is in Tags(https://en.wikipedia.org/wiki/Tags_(Unicode_block)),\n\t// then find next closest U+E007F(CANCEL TAG)\n\tif (isSubdivisionFlag(currentPair) &&\tisSupplementarySpecialpurposePlane(nextPair)) {\n\t\treturn string.slice(i).indexOf(String.fromCodePoint(EnumRunesCode.TAGS_END)) + 2\n\t}\n\n\t// If the next pair make a Fitzpatrick skin tone\n\t// modifier, take 4\n\t// See http://emojipedia.org/modifiers/\n\t// Technically, only some code points are meant to be\n\t// combined with the skin tone modifiers. This function\n\t// does not check the current pair to see if it is\n\t// one of them.\n\tif (isFitzpatrickModifier(nextPair)) {\n\t\treturn EnumCodeUnits.unit_4\n\t}\n\treturn EnumCodeUnits.unit_2\n}\n\nfunction isFirstOfSurrogatePair(string: string) {\n\treturn string && betweenInclusive(string[0].charCodeAt(0), EnumRunesCode.HIGH_SURROGATE_START, EnumRunesCode.HIGH_SURROGATE_END)\n}\n\nfunction isRegionalIndicator(string: string) {\n\treturn betweenInclusive(codePointFromSurrogatePair(string), EnumRunesCode.REGIONAL_INDICATOR_START, EnumRunesCode.REGIONAL_INDICATOR_END)\n}\n\nfunction isSubdivisionFlag(string: string) {\n\treturn betweenInclusive(codePointFromSurrogatePair(string),\tEnumRunesCode.SUBDIVISION_INDICATOR_START, EnumRunesCode.SUBDIVISION_INDICATOR_START)\n}\n\nfunction isFitzpatrickModifier(string: string) {\n\treturn betweenInclusive(codePointFromSurrogatePair(string), EnumRunesCode.FITZPATRICK_MODIFIER_START, EnumRunesCode.FITZPATRICK_MODIFIER_END)\n}\n\nfunction isVariationSelector(string: string) {\n\treturn typeof string === \"string\" && betweenInclusive(string.charCodeAt(0), EnumRunesCode.VARIATION_MODIFIER_START, EnumRunesCode.VARIATION_MODIFIER_END)\n}\n\nfunction isDiacriticalMark(string: string) {\n\treturn typeof string === \"string\" && betweenInclusive(string.charCodeAt(0), EnumRunesCode.DIACRITICAL_MARKS_START, EnumRunesCode.DIACRITICAL_MARKS_END)\n}\n\nfunction isSupplementarySpecialpurposePlane(string: string) {\n\tconst codePoint = string.codePointAt(0)\n\treturn (typeof string === \"string\" &&\ttypeof codePoint === \"number\" && betweenInclusive(codePoint, EnumRunesCode.TAGS_START, EnumRunesCode.TAGS_END))\n}\n\nfunction isGrapheme(string: string) {\n\treturn typeof string === \"string\" && GRAPHEMES.includes(string.charCodeAt(0))\n}\n\nfunction isZeroWidthJoiner(string: string) {\n\treturn typeof string === \"string\" && string.charCodeAt(0) === EnumRunesCode.ZWJ\n}\n\nfunction codePointFromSurrogatePair(pair: string) {\n\tconst highOffset = pair.charCodeAt(0) - EnumRunesCode.HIGH_SURROGATE_START\n\tconst lowOffset = pair.charCodeAt(1) - EnumRunesCode.LOW_SURROGATE_START\n\treturn (highOffset << 10) + lowOffset + 0x10000\n}\n\nfunction betweenInclusive(value: number, lower: number, upper: number) {\n\treturn value >= lower && value <= upper\n}\n\nexport function substring(string: string, start?: number, width?: number) {\n\tconst chars = runes(string)\n\tif (start === undefined) {\n\t\treturn string\n\t}\n\tif (start >= chars.length) {\n\t\treturn \"\"\n\t}\n\tconst rest = chars.length - start\n\tconst stringWidth = width === undefined ? rest : width\n\tlet endIndex = start + stringWidth\n\tif (endIndex > (start + rest)) {\n\t\tendIndex = undefined\n\t}\n\treturn chars.slice(start, endIndex).join(\"\")\n}\n", "{\n\t\"Joy-Con L+R (STANDARD GAMEPAD Vendor: 057e Product: 200e)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"6\": \"ltrigger\",\n\t\t\t\"7\": \"rtrigger\",\n\t\t\t\"8\": \"select\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"11\": \"rstick\",\n\t\t\t\"12\": \"dpad-up\",\n\t\t\t\"13\": \"dpad-down\",\n\t\t\t\"14\": \"dpad-left\",\n\t\t\t\"15\": \"dpad-right\",\n\t\t\t\"16\": \"home\",\n\t\t\t\"17\": \"capture\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 },\n\t\t\t\"right\": { \"x\": 2, \"y\": 3 }\n\t\t}\n\t},\n\t\"Joy-Con (L) (STANDARD GAMEPAD Vendor: 057e Product: 2006)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"9\": \"select\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"16\": \"start\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 }\n\t\t}\n\t},\n\t\"Joy-Con (R) (STANDARD GAMEPAD Vendor: 057e Product: 2007)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"16\": \"select\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 }\n\t\t}\n\t},\n\t\"Pro Controller (STANDARD GAMEPAD Vendor: 057e Product: 2009)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"6\": \"ltrigger\",\n\t\t\t\"7\": \"rtrigger\",\n\t\t\t\"8\": \"select\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"11\": \"rstick\",\n\t\t\t\"12\": \"dpad-up\",\n\t\t\t\"13\": \"dpad-down\",\n\t\t\t\"14\": \"dpad-left\",\n\t\t\t\"15\": \"dpad-right\",\n\t\t\t\"16\": \"home\",\n\t\t\t\"17\": \"capture\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 },\n\t\t\t\"right\": { \"x\": 2, \"y\": 3 }\n\t\t}\n\t},\n\t\"default\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"6\": \"ltrigger\",\n\t\t\t\"7\": \"rtrigger\",\n\t\t\t\"8\": \"select\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"11\": \"rstick\",\n\t\t\t\"12\": \"dpad-up\",\n\t\t\t\"13\": \"dpad-down\",\n\t\t\t\"14\": \"dpad-left\",\n\t\t\t\"15\": \"dpad-right\",\n\t\t\t\"16\": \"home\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 },\n\t\t\t\"right\": { \"x\": 2, \"y\": 3 }\n\t\t}\n\t}\n}\n", "// everything related to canvas, game loop and input\n\nimport type {\n\tCursor,\n\tKey,\n\tMouseButton,\n\tGamepadButton,\n\tGamepadStick,\n\tGamepadDef,\n\tKGamePad,\n} from \"./types\"\n\nimport {\n\tVec2,\n\tmap,\n} from \"./math\"\n\nimport {\n\tEventHandler,\n\tEventController,\n\toverload2,\n} from \"./utils\"\n\nimport GAMEPAD_MAP from \"./gamepad.json\"\n\nexport class ButtonState<T = string> {\n\tpressed: Set<T> = new Set([])\n\tpressedRepeat: Set<T> = new Set([])\n\treleased: Set<T> = new Set([])\n\tdown: Set<T> = new Set([])\n\tupdate() {\n\t\tthis.pressed.clear()\n\t\tthis.released.clear()\n\t\tthis.pressedRepeat.clear()\n\t}\n\tpress(btn: T) {\n\t\tthis.pressed.add(btn)\n\t\tthis.pressedRepeat.add(btn)\n\t\tthis.down.add(btn)\n\t}\n\tpressRepeat(btn: T) {\n\t\tthis.pressedRepeat.add(btn)\n\t}\n\trelease(btn: T) {\n\t\tthis.down.delete(btn)\n\t\tthis.pressed.delete(btn)\n\t\tthis.released.add(btn)\n\t}\n}\n\nclass GamepadState {\n\tbuttonState: ButtonState<GamepadButton> = new ButtonState()\n\tstickState: Map<GamepadStick, Vec2> = new Map()\n}\n\nclass FPSCounter {\n\tprivate dts: number[] = []\n\tprivate timer: number = 0\n\tfps: number = 0\n\ttick(dt: number) {\n\t\tthis.dts.push(dt)\n\t\tthis.timer += dt\n\t\tif (this.timer >= 1) {\n\t\t\tthis.timer = 0\n\t\t\tthis.fps = Math.round(1 / (this.dts.reduce((a, b) => a + b) / this.dts.length))\n\t\t\tthis.dts = []\n\t\t}\n\t}\n}\n\nexport default (opt: {\n\tcanvas: HTMLCanvasElement,\n\ttouchToMouse?: boolean,\n\tgamepads?: Record<string, GamepadDef>,\n\tpixelDensity?: number,\n\tmaxFPS?: number,\n}) => {\n\n\tif (!opt.canvas) {\n\t\tthrow new Error(\"Please provide a canvas\")\n\t}\n\n\tconst state = {\n\t\tcanvas: opt.canvas,\n\t\tloopID: null as null | number,\n\t\tstopped: false,\n\t\tdt: 0,\n\t\ttime: 0,\n\t\trealTime: 0,\n\t\tfpsCounter: new FPSCounter(),\n\t\ttimeScale: 1,\n\t\tskipTime: false,\n\t\tnumFrames: 0,\n\t\tmousePos: new Vec2(0),\n\t\tmouseDeltaPos: new Vec2(0),\n\t\tkeyState: new ButtonState<Key>(),\n\t\tmouseState: new ButtonState<MouseButton>(),\n\t\tmergedGamepadState: new GamepadState(),\n\t\tgamepadStates: new Map<number, GamepadState>(),\n\t\tgamepads: [] as KGamePad[],\n\t\tcharInputted: [],\n\t\tisMouseMoved: false,\n\t\tlastWidth: opt.canvas.offsetWidth,\n\t\tlastHeight: opt.canvas.offsetHeight,\n\t\tevents: new EventHandler<{\n\t\t\tmouseMove: [],\n\t\t\tmouseDown: [MouseButton],\n\t\t\tmousePress: [MouseButton],\n\t\t\tmouseRelease: [MouseButton],\n\t\t\tcharInput: [string],\n\t\t\tkeyPress: [Key],\n\t\t\tkeyDown: [Key],\n\t\t\tkeyPressRepeat: [Key],\n\t\t\tkeyRelease: [Key],\n\t\t\ttouchStart: [Vec2, Touch],\n\t\t\ttouchMove: [Vec2, Touch],\n\t\t\ttouchEnd: [Vec2, Touch],\n\t\t\tgamepadButtonDown: [string],\n\t\t\tgamepadButtonPress: [string],\n\t\t\tgamepadButtonRelease: [string],\n\t\t\tgamepadStick: [string, Vec2],\n\t\t\tgamepadConnect: [KGamePad],\n\t\t\tgamepadDisconnect: [KGamePad],\n\t\t\tscroll: [Vec2],\n\t\t\thide: [],\n\t\t\tshow: [],\n\t\t\tresize: [],\n\t\t\tinput: [],\n\t\t}>(),\n\t}\n\n\tfunction dt() {\n\t\treturn state.dt * state.timeScale\n\t}\n\n\tfunction time() {\n\t\treturn state.time\n\t}\n\n\tfunction fps() {\n\t\treturn state.fpsCounter.fps\n\t}\n\n\tfunction numFrames() {\n\t\treturn state.numFrames\n\t}\n\n\tfunction screenshot(): string {\n\t\treturn state.canvas.toDataURL()\n\t}\n\n\tfunction setCursor(c: Cursor): void {\n\t\tstate.canvas.style.cursor = c\n\t}\n\n\tfunction getCursor(): Cursor {\n\t\treturn state.canvas.style.cursor\n\t}\n\n\tfunction setCursorLocked(b: boolean): void {\n\t\tif (b) {\n\t\t\ttry {\n\t\t\t\tconst res = state.canvas.requestPointerLock() as unknown as Promise<void>\n\t\t\t\tif (res.catch) {\n\t\t\t\t\tres.catch((e) => console.error(e))\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e)\n\t\t\t}\n\t\t} else {\n\t\t\tdocument.exitPointerLock()\n\t\t}\n\t}\n\n\tfunction isCursorLocked(): boolean {\n\t\treturn !!document.pointerLockElement\n\t}\n\n\t// wrappers around full screen functions to work across browsers\n\tfunction enterFullscreen(el: HTMLElement) {\n\t\tif (el.requestFullscreen) el.requestFullscreen()\n\t\t// @ts-ignore\n\t\telse if (el.webkitRequestFullscreen) el.webkitRequestFullscreen()\n\t}\n\n\tfunction exitFullscreen() {\n\t\tif (document.exitFullscreen) document.exitFullscreen()\n\t\t// @ts-ignore\n\t\telse if (document.webkitExitFullScreen) document.webkitExitFullScreen()\n\t}\n\n\tfunction getFullscreenElement(): Element | void {\n\t\treturn document.fullscreenElement\n\t\t\t// @ts-ignore\n\t\t\t|| document.webkitFullscreenElement\n\t}\n\n\tfunction setFullscreen(f: boolean = true) {\n\t\tif (f) {\n\t\t\tenterFullscreen(state.canvas)\n\t\t} else {\n\t\t\texitFullscreen()\n\t\t}\n\t}\n\n\tfunction isFullscreen(): boolean {\n\t\treturn Boolean(getFullscreenElement())\n\t}\n\n\tfunction quit() {\n\t\tstate.stopped = true\n\t\tfor (const name in canvasEvents) {\n\t\t\tstate.canvas.removeEventListener(name, canvasEvents[name])\n\t\t}\n\t\tfor (const name in docEvents) {\n\t\t\tdocument.removeEventListener(name, docEvents[name])\n\t\t}\n\t\tfor (const name in winEvents) {\n\t\t\twindow.removeEventListener(name, winEvents[name])\n\t\t}\n\t\tresizeObserver.disconnect()\n\t}\n\n\tfunction run(action: () => void) {\n\n\t\tif (state.loopID !== null) {\n\t\t\tcancelAnimationFrame(state.loopID)\n\t\t}\n\n\t\tlet accumulatedDt = 0\n\n\t\tconst frame = (t: number) => {\n\n\t\t\tif (state.stopped) return\n\n\t\t\t// TODO: allow background actions?\n\t\t\tif (document.visibilityState !== \"visible\") {\n\t\t\t\tstate.loopID = requestAnimationFrame(frame)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst loopTime = t / 1000\n\t\t\tconst realDt = loopTime - state.realTime\n\t\t\tconst desiredDt = opt.maxFPS ? 1 / opt.maxFPS : 0\n\n\t\t\tstate.realTime = loopTime\n\t\t\taccumulatedDt += realDt\n\n\t\t\tif (accumulatedDt > desiredDt) {\n\t\t\t\tif (!state.skipTime) {\n\t\t\t\t\tstate.dt = accumulatedDt\n\t\t\t\t\tstate.time += dt()\n\t\t\t\t\tstate.fpsCounter.tick(state.dt)\n\t\t\t\t}\n\t\t\t\taccumulatedDt = 0\n\t\t\t\tstate.skipTime = false\n\t\t\t\tstate.numFrames++\n\t\t\t\tprocessInput()\n\t\t\t\taction()\n\t\t\t\tresetInput()\n\t\t\t}\n\n\t\t\tstate.loopID = requestAnimationFrame(frame)\n\n\t\t}\n\n\t\tframe(0)\n\n\t}\n\n\tfunction isTouchscreen() {\n\t\treturn (\"ontouchstart\" in window) || navigator.maxTouchPoints > 0\n\t}\n\n\tfunction mousePos(): Vec2 {\n\t\treturn state.mousePos.clone()\n\t}\n\n\tfunction mouseDeltaPos(): Vec2 {\n\t\treturn state.mouseDeltaPos.clone()\n\t}\n\n\tfunction isMousePressed(m: MouseButton = \"left\"): boolean {\n\t\treturn state.mouseState.pressed.has(m)\n\t}\n\n\tfunction isMouseDown(m: MouseButton = \"left\"): boolean {\n\t\treturn state.mouseState.down.has(m)\n\t}\n\n\tfunction isMouseReleased(m: MouseButton = \"left\"): boolean {\n\t\treturn state.mouseState.released.has(m)\n\t}\n\n\tfunction isMouseMoved(): boolean {\n\t\treturn state.isMouseMoved\n\t}\n\n\tfunction isKeyPressed(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.pressed.size > 0\n\t\t\t: state.keyState.pressed.has(k)\n\t}\n\n\tfunction isKeyPressedRepeat(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.pressedRepeat.size > 0\n\t\t\t: state.keyState.pressedRepeat.has(k)\n\t}\n\n\tfunction isKeyDown(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.down.size > 0\n\t\t\t: state.keyState.down.has(k)\n\t}\n\n\tfunction isKeyReleased(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.released.size > 0\n\t\t\t: state.keyState.released.has(k)\n\t}\n\n\tfunction isGamepadButtonPressed(btn?: GamepadButton): boolean {\n\t\treturn btn === undefined\n\t\t\t? state.mergedGamepadState.buttonState.pressed.size > 0\n\t\t\t: state.mergedGamepadState.buttonState.pressed.has(btn)\n\t}\n\n\tfunction isGamepadButtonDown(btn?: GamepadButton): boolean {\n\t\treturn btn === undefined\n\t\t\t? state.mergedGamepadState.buttonState.down.size > 0\n\t\t\t: state.mergedGamepadState.buttonState.down.has(btn)\n\t}\n\n\tfunction isGamepadButtonReleased(btn?: GamepadButton): boolean {\n\t\treturn btn === undefined\n\t\t\t? state.mergedGamepadState.buttonState.released.size > 0\n\t\t\t: state.mergedGamepadState.buttonState.released.has(btn)\n\t}\n\n\tfunction onResize(action: () => void): EventController {\n\t\treturn state.events.on(\"resize\", action)\n\t}\n\n\t// input callbacks\n\tconst onKeyDown = overload2((action: (key: Key) => void) => {\n\t\treturn state.events.on(\"keyDown\", action)\n\t}, (key: Key, action: (key: Key) => void) => {\n\t\treturn state.events.on(\"keyDown\", (k) => k === key && action(key))\n\t})\n\n\tconst onKeyPress = overload2((action: (key: Key) => void) => {\n\t\treturn state.events.on(\"keyPress\", action)\n\t}, (key: Key, action: (key: Key) => void) => {\n\t\treturn state.events.on(\"keyPress\", (k) => k === key && action(key))\n\t})\n\n\tconst onKeyPressRepeat = overload2((action: (key: Key) => void) => {\n\t\treturn state.events.on(\"keyPressRepeat\", action)\n\t}, (key: Key, action: (key: Key) => void) => {\n\t\treturn state.events.on(\"keyPressRepeat\", (k) => k === key && action(key))\n\t})\n\n\tconst onKeyRelease = overload2((action: (key: Key) => void) => {\n\t\treturn state.events.on(\"keyRelease\", action)\n\t}, (key: Key, action: (key: Key) => void) => {\n\t\treturn state.events.on(\"keyRelease\", (k) => k === key && action(key))\n\t})\n\n\tconst onMouseDown = overload2((action: (m: MouseButton) => void) => {\n\t\treturn state.events.on(\"mouseDown\", (m) => action(m))\n\t}, (mouse: MouseButton, action: (m: MouseButton) => void) => {\n\t\treturn state.events.on(\"mouseDown\", (m) => m === mouse && action(m))\n\t})\n\n\tconst onMousePress = overload2((action: (m: MouseButton) => void) => {\n\t\treturn state.events.on(\"mousePress\", (m) => action(m))\n\t}, (mouse: MouseButton, action: (m: MouseButton) => void) => {\n\t\treturn state.events.on(\"mousePress\", (m) => m === mouse && action(m))\n\t})\n\n\tconst onMouseRelease = overload2((action: (m: MouseButton) => void) => {\n\t\treturn state.events.on(\"mouseRelease\", (m) => action(m))\n\t}, (mouse: MouseButton, action: (m: MouseButton) => void) => {\n\t\treturn state.events.on(\"mouseRelease\", (m) => m === mouse && action(m))\n\t})\n\n\tfunction onMouseMove(f: (pos: Vec2, dpos: Vec2) => void): EventController {\n\t\treturn state.events.on(\"mouseMove\", () => f(mousePos(), mouseDeltaPos()))\n\t}\n\n\tfunction onCharInput(action: (ch: string) => void): EventController {\n\t\treturn state.events.on(\"charInput\", action)\n\t}\n\n\tfunction onTouchStart(f: (pos: Vec2, t: Touch) => void): EventController {\n\t\treturn state.events.on(\"touchStart\", f)\n\t}\n\n\tfunction onTouchMove(f: (pos: Vec2, t: Touch) => void): EventController {\n\t\treturn state.events.on(\"touchMove\", f)\n\t}\n\n\tfunction onTouchEnd(f: (pos: Vec2, t: Touch) => void): EventController {\n\t\treturn state.events.on(\"touchEnd\", f)\n\t}\n\n\tfunction onScroll(action: (delta: Vec2) => void): EventController {\n\t\treturn state.events.on(\"scroll\", action)\n\t}\n\n\tfunction onHide(action: () => void): EventController {\n\t\treturn state.events.on(\"hide\", action)\n\t}\n\n\tfunction onShow(action: () => void): EventController {\n\t\treturn state.events.on(\"show\", action)\n\t}\n\n\tfunction onGamepadButtonDown(btn: GamepadButton | ((btn: GamepadButton) => void), action?: (btn: GamepadButton) => void): EventController {\n\t\tif (typeof btn === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonDown\", btn)\n\t\t} else if (typeof btn === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonDown\", (b) => b === btn && action(btn))\n\t\t}\n\t}\n\n\tfunction onGamepadButtonPress(btn: GamepadButton | ((btn: GamepadButton) => void), action?: (btn: GamepadButton) => void): EventController {\n\t\tif (typeof btn === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonPress\", btn)\n\t\t} else if (typeof btn === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonPress\", (b) => b === btn && action(btn))\n\t\t}\n\t}\n\n\tfunction onGamepadButtonRelease(btn: GamepadButton | ((btn: GamepadButton) => void), action?: (btn: GamepadButton) => void): EventController {\n\t\tif (typeof btn === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonRelease\", btn)\n\t\t} else if (typeof btn === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonRelease\", (b) => b === btn && action(btn))\n\t\t}\n\t}\n\n\tfunction onGamepadStick(stick: GamepadStick, action: (value: Vec2) => void): EventController {\n\t\treturn state.events.on(\"gamepadStick\", ((a: string, v: Vec2) => a === stick && action(v)))\n\t}\n\n\tfunction onGamepadConnect(action: (gamepad: KGamePad) => void) {\n\t\tstate.events.on(\"gamepadConnect\", action)\n\t}\n\n\tfunction onGamepadDisconnect(action: (gamepad: KGamePad) => void) {\n\t\tstate.events.on(\"gamepadDisconnect\", action)\n\t}\n\n\tfunction getGamepadStick(stick: GamepadStick): Vec2 {\n\t\treturn state.mergedGamepadState.stickState.get(stick) || new Vec2(0)\n\t}\n\n\tfunction charInputted(): string[] {\n\t\treturn [...state.charInputted]\n\t}\n\n\tfunction getGamepads(): KGamePad[] {\n\t\treturn [...state.gamepads]\n\t}\n\n\tfunction processInput() {\n\t\tstate.events.trigger(\"input\")\n\t\tstate.keyState.down.forEach((k) => state.events.trigger(\"keyDown\", k))\n\t\tstate.mouseState.down.forEach((k) => state.events.trigger(\"mouseDown\", k))\n\t\tprocessGamepad()\n\t}\n\n\tfunction resetInput() {\n\t\tstate.keyState.update()\n\t\tstate.mouseState.update()\n\t\tstate.mergedGamepadState.buttonState.update()\n\t\tstate.mergedGamepadState.stickState.forEach((v, k) => {\n\t\t\tstate.mergedGamepadState.stickState.set(k, new Vec2(0))\n\t\t})\n\t\tstate.charInputted = []\n\t\tstate.isMouseMoved = false\n\n\t\tstate.gamepadStates.forEach((s) => {\n\t\t\ts.buttonState.update()\n\t\t\ts.stickState.forEach((v, k) => {\n\t\t\t\ts.stickState.set(k, new Vec2(0))\n\t\t\t})\n\t\t})\n\t}\n\n\tfunction registerGamepad(browserGamepad: Gamepad) {\n\n\t\tconst gamepad = {\n\t\t\tindex: browserGamepad.index,\n\t\t\tisPressed: (btn: GamepadButton) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).buttonState.pressed.has(btn)\n\t\t\t},\n\t\t\tisDown: (btn: GamepadButton) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).buttonState.down.has(btn)\n\t\t\t},\n\t\t\tisReleased: (btn: GamepadButton) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).buttonState.released.has(btn)\n\t\t\t},\n\t\t\tgetStick: (stick: GamepadStick) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).stickState.get(stick)\n\t\t\t},\n\t\t}\n\n\t\tstate.gamepads.push(gamepad)\n\n\t\tstate.gamepadStates.set(browserGamepad.index, {\n\t\t\tbuttonState: new ButtonState(),\n\t\t\tstickState: new Map([\n\t\t\t\t[\"left\", new Vec2(0)],\n\t\t\t\t[\"right\", new Vec2(0)],\n\t\t\t]),\n\t\t})\n\n\t\treturn gamepad\n\n\t}\n\n\tfunction removeGamepad(gamepad: Gamepad) {\n\t\tstate.gamepads = state.gamepads.filter((g) => g.index !== gamepad.index)\n\t\tstate.gamepadStates.delete(gamepad.index)\n\t}\n\n\tfunction processGamepad() {\n\n\t\tfor (const browserGamepad of navigator.getGamepads()) {\n\t\t\tif (browserGamepad && !state.gamepadStates.has(browserGamepad.index)) {\n\t\t\t\tregisterGamepad(browserGamepad)\n\t\t\t}\n\t\t}\n\n\t\tfor (const gamepad of state.gamepads) {\n\n\t\t\tconst browserGamepad = navigator.getGamepads()[gamepad.index]\n\t\t\tconst customMap = opt.gamepads ?? {}\n\t\t\tconst map = customMap[browserGamepad.id] ?? GAMEPAD_MAP[browserGamepad.id] ?? GAMEPAD_MAP[\"default\"]\n\t\t\tconst gamepadState = state.gamepadStates.get(gamepad.index)\n\n\t\t\tfor (let i = 0; i < browserGamepad.buttons.length; i++) {\n\t\t\t\tif (browserGamepad.buttons[i].pressed) {\n\t\t\t\t\tif (!gamepadState.buttonState.down.has(map.buttons[i])) {\n\t\t\t\t\t\tstate.mergedGamepadState.buttonState.press(map.buttons[i])\n\t\t\t\t\t\tgamepadState.buttonState.press(map.buttons[i])\n\t\t\t\t\t\tstate.events.trigger(\"gamepadButtonPress\", map.buttons[i])\n\t\t\t\t\t}\n\t\t\t\t\tstate.events.trigger(\"gamepadButtonDown\", map.buttons[i])\n\t\t\t\t} else {\n\t\t\t\t\tif (gamepadState.buttonState.down.has(map.buttons[i])) {\n\t\t\t\t\t\tstate.mergedGamepadState.buttonState.release(map.buttons[i])\n\t\t\t\t\t\tgamepadState.buttonState.release(map.buttons[i])\n\t\t\t\t\t\tstate.events.trigger(\"gamepadButtonRelease\", map.buttons[i])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const stickName in map.sticks) {\n\t\t\t\tconst stick = map.sticks[stickName]\n\t\t\t\tconst value = new Vec2(\n\t\t\t\t\tbrowserGamepad.axes[stick.x],\n\t\t\t\t\tbrowserGamepad.axes[stick.y],\n\t\t\t\t)\n\t\t\t\tgamepadState.stickState.set(stickName as GamepadStick, value)\n\t\t\t\tstate.mergedGamepadState.stickState.set(stickName as GamepadStick, value)\n\t\t\t\tstate.events.trigger(\"gamepadStick\", stickName, value)\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttype EventList<M> = {\n\t\t[event in keyof M]?: (event: M[event]) => void\n\t}\n\n\tconst canvasEvents: EventList<HTMLElementEventMap> = {}\n\tconst docEvents: EventList<DocumentEventMap> = {}\n\tconst winEvents: EventList<WindowEventMap> = {}\n\n\tconst pd = opt.pixelDensity || window.devicePixelRatio || 1\n\n\tcanvasEvents.mousemove = (e) => {\n\t\tconst mousePos = new Vec2(e.offsetX, e.offsetY)\n\t\tconst mouseDeltaPos = new Vec2(e.movementX, e.movementY)\n\t\tif (isFullscreen()) {\n\t\t\tconst cw = state.canvas.width / pd\n\t\t\tconst ch = state.canvas.height / pd\n\t\t\tconst ww = window.innerWidth\n\t\t\tconst wh = window.innerHeight\n\t\t\tconst rw = ww / wh\n\t\t\tconst rc = cw / ch\n\t\t\tif (rw > rc) {\n\t\t\t\tconst ratio = wh / ch\n\t\t\t\tconst offset = (ww - (cw * ratio)) / 2\n\t\t\t\tmousePos.x = map(e.offsetX - offset, 0, cw * ratio, 0, cw)\n\t\t\t\tmousePos.y = map(e.offsetY, 0, ch * ratio, 0, ch)\n\t\t\t} else {\n\t\t\t\tconst ratio = ww / cw\n\t\t\t\tconst offset = (wh - (ch * ratio)) / 2\n\t\t\t\tmousePos.x = map(e.offsetX , 0, cw * ratio, 0, cw)\n\t\t\t\tmousePos.y = map(e.offsetY - offset, 0, ch * ratio, 0, ch)\n\t\t\t}\n\t\t}\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.isMouseMoved = true\n\t\t\tstate.mousePos = mousePos\n\t\t\tstate.mouseDeltaPos = mouseDeltaPos\n\t\t\tstate.events.trigger(\"mouseMove\")\n\t\t})\n\t}\n\n\tconst MOUSE_BUTTONS: MouseButton[] = [\n\t\t\"left\",\n\t\t\"middle\",\n\t\t\"right\",\n\t\t\"back\",\n\t\t\"forward\",\n\t]\n\n\tcanvasEvents.mousedown = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst m = MOUSE_BUTTONS[e.button]\n\t\t\tif (!m) return\n\t\t\tstate.mouseState.press(m)\n\t\t\tstate.events.trigger(\"mousePress\", m)\n\t\t})\n\t}\n\n\tcanvasEvents.mouseup = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst m = MOUSE_BUTTONS[e.button]\n\t\t\tif (!m) return\n\t\t\tstate.mouseState.release(m)\n\t\t\tstate.events.trigger(\"mouseRelease\", m)\n\t\t})\n\t}\n\n\tconst PREVENT_DEFAULT_KEYS = new Set([\n\t\t\" \",\n\t\t\"ArrowLeft\",\n\t\t\"ArrowRight\",\n\t\t\"ArrowUp\",\n\t\t\"ArrowDown\",\n\t\t\"Tab\",\n\t])\n\n\t// translate these key names to a simpler version\n\tconst KEY_ALIAS = {\n\t\t\"ArrowLeft\": \"left\",\n\t\t\"ArrowRight\": \"right\",\n\t\t\"ArrowUp\": \"up\",\n\t\t\"ArrowDown\": \"down\",\n\t\t\" \": \"space\",\n\t}\n\n\tcanvasEvents.keydown = (e) => {\n\t\tif (PREVENT_DEFAULT_KEYS.has(e.key)) {\n\t\t\te.preventDefault()\n\t\t}\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst k = KEY_ALIAS[e.key] || e.key.toLowerCase()\n\t\t\tif (k.length === 1) {\n\t\t\t\tstate.events.trigger(\"charInput\", k)\n\t\t\t\tstate.charInputted.push(k)\n\t\t\t} else if (k === \"space\") {\n\t\t\t\tstate.events.trigger(\"charInput\", \" \")\n\t\t\t\tstate.charInputted.push(\" \")\n\t\t\t}\n\t\t\tif (e.repeat) {\n\t\t\t\tstate.keyState.pressRepeat(k)\n\t\t\t\tstate.events.trigger(\"keyPressRepeat\", k)\n\t\t\t} else {\n\t\t\t\tstate.keyState.press(k)\n\t\t\t\tstate.events.trigger(\"keyPressRepeat\", k)\n\t\t\t\tstate.events.trigger(\"keyPress\", k)\n\t\t\t}\n\t\t})\n\t}\n\n\tcanvasEvents.keyup = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst k = KEY_ALIAS[e.key] || e.key.toLowerCase()\n\t\t\tstate.keyState.release(k)\n\t\t\tstate.events.trigger(\"keyRelease\", k)\n\t\t})\n\t}\n\n\t// TODO: handle all touches at once instead of sequentially\n\tcanvasEvents.touchstart = (e) => {\n\t\t// disable long tap context menu\n\t\te.preventDefault()\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\tconst box = state.canvas.getBoundingClientRect()\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(\n\t\t\t\t\ttouches[0].clientX - box.x,\n\t\t\t\t\ttouches[0].clientY - box.y,\n\t\t\t\t)\n\t\t\t\tstate.mouseState.press(\"left\")\n\t\t\t\tstate.events.trigger(\"mousePress\", \"left\")\n\t\t\t}\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\n\t\t\t\t\t\"touchStart\",\n\t\t\t\t\tnew Vec2(t.clientX - box.x, t.clientY - box.y),\n\t\t\t\t\tt,\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\t}\n\n\tcanvasEvents.touchmove = (e) => {\n\t\t// disable scrolling\n\t\te.preventDefault()\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\tconst box = state.canvas.getBoundingClientRect()\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(\n\t\t\t\t\ttouches[0].clientX - box.x,\n\t\t\t\t\ttouches[0].clientY - box.y,\n\t\t\t\t)\n\t\t\t\tstate.events.trigger(\"mouseMove\")\n\t\t\t}\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\n\t\t\t\t\t\"touchMove\",\n\t\t\t\t\tnew Vec2(t.clientX - box.x, t.clientY - box.y),\n\t\t\t\t\tt,\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\t}\n\n\tcanvasEvents.touchend = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\tconst box = state.canvas.getBoundingClientRect()\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(\n\t\t\t\t\ttouches[0].clientX - box.x,\n\t\t\t\t\ttouches[0].clientY - box.y,\n\t\t\t\t)\n\t\t\t\tstate.mouseState.release(\"left\")\n\t\t\t\tstate.events.trigger(\"mouseRelease\", \"left\")\n\t\t\t}\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\n\t\t\t\t\t\"touchEnd\",\n\t\t\t\t\tnew Vec2(t.clientX - box.x, t.clientY - box.y),\n\t\t\t\t\tt,\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\t}\n\n\tcanvasEvents.touchcancel = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\tconst box = state.canvas.getBoundingClientRect()\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(\n\t\t\t\t\ttouches[0].clientX - box.x,\n\t\t\t\t\ttouches[0].clientY - box.y,\n\t\t\t\t)\n\t\t\t\tstate.mouseState.release(\"left\")\n\t\t\t\tstate.events.trigger(\"mouseRelease\", \"left\")\n\t\t\t}\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\n\t\t\t\t\t\"touchEnd\",\n\t\t\t\t\tnew Vec2(t.clientX - box.x, t.clientY - box.y),\n\t\t\t\t\tt,\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\t}\n\n\t// TODO: option to not prevent default?\n\tcanvasEvents.wheel = (e) => {\n\t\te.preventDefault()\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.events.trigger(\"scroll\", new Vec2(e.deltaX, e.deltaY))\n\t\t})\n\t}\n\n\tcanvasEvents.contextmenu = (e) => e.preventDefault()\n\n\tdocEvents.visibilitychange = () => {\n\t\tif (document.visibilityState === \"visible\") {\n\t\t\t// prevent a surge of dt when switch back after the tab being hidden for a while\n\t\t\tstate.skipTime = true\n\t\t\tstate.events.trigger(\"show\")\n\t\t} else {\n\t\t\tstate.events.trigger(\"hide\")\n\t\t}\n\t}\n\n\twinEvents.gamepadconnected = (e) => {\n\t\tconst kbGamepad = registerGamepad(e.gamepad)\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.events.trigger(\"gamepadConnect\", kbGamepad)\n\t\t})\n\t}\n\n\twinEvents.gamepaddisconnected = (e) => {\n\t\tconst kbGamepad = getGamepads().filter((g) => g.index === e.gamepad.index)[0]\n\t\tremoveGamepad(e.gamepad)\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.events.trigger(\"gamepadDisconnect\", kbGamepad)\n\t\t})\n\t}\n\n\tfor (const name in canvasEvents) {\n\t\tstate.canvas.addEventListener(name, canvasEvents[name])\n\t}\n\n\tfor (const name in docEvents) {\n\t\tdocument.addEventListener(name, docEvents[name])\n\t}\n\n\tfor (const name in winEvents) {\n\t\twindow.addEventListener(name, winEvents[name])\n\t}\n\n\tconst resizeObserver = new ResizeObserver((entries) => {\n\t\tfor (const entry of entries) {\n\t\t\tif (entry.target !== state.canvas) continue\n\t\t\tif (\n\t\t\t\tstate.lastWidth === state.canvas.offsetWidth\n\t\t\t\t&& state.lastHeight === state.canvas.offsetHeight\n\t\t\t) return\n\t\t\tstate.lastWidth = state.canvas.offsetWidth\n\t\t\tstate.lastHeight = state.canvas.offsetHeight\n\t\t\tstate.events.onOnce(\"input\", () => {\n\t\t\t\tstate.events.trigger(\"resize\")\n\t\t\t})\n\t\t}\n\t})\n\n\tresizeObserver.observe(state.canvas)\n\n\treturn {\n\t\tdt,\n\t\ttime,\n\t\trun,\n\t\tcanvas: state.canvas,\n\t\tfps,\n\t\tnumFrames,\n\t\tquit,\n\t\tsetFullscreen,\n\t\tisFullscreen,\n\t\tsetCursor,\n\t\tscreenshot,\n\t\tgetGamepads,\n\t\tgetCursor,\n\t\tsetCursorLocked,\n\t\tisCursorLocked,\n\t\tisTouchscreen,\n\t\tmousePos,\n\t\tmouseDeltaPos,\n\t\tisKeyDown,\n\t\tisKeyPressed,\n\t\tisKeyPressedRepeat,\n\t\tisKeyReleased,\n\t\tisMouseDown,\n\t\tisMousePressed,\n\t\tisMouseReleased,\n\t\tisMouseMoved,\n\t\tisGamepadButtonPressed,\n\t\tisGamepadButtonDown,\n\t\tisGamepadButtonReleased,\n\t\tgetGamepadStick,\n\t\tcharInputted,\n\t\tonResize,\n\t\tonKeyDown,\n\t\tonKeyPress,\n\t\tonKeyPressRepeat,\n\t\tonKeyRelease,\n\t\tonMouseDown,\n\t\tonMousePress,\n\t\tonMouseRelease,\n\t\tonMouseMove,\n\t\tonCharInput,\n\t\tonTouchStart,\n\t\tonTouchMove,\n\t\tonTouchEnd,\n\t\tonScroll,\n\t\tonHide,\n\t\tonShow,\n\t\tonGamepadButtonDown,\n\t\tonGamepadButtonPress,\n\t\tonGamepadButtonRelease,\n\t\tonGamepadStick,\n\t\tonGamepadConnect,\n\t\tonGamepadDisconnect,\n\t\tevents: state.events,\n\t}\n\n}\n", "import type {\n\tImageSource,\n\tTextureOpt,\n\tTexFilter,\n\tUniform,\n} from \"./types\"\n\nimport {\n\tMat4,\n\tVec2,\n\tColor,\n} from \"./math\"\n\nimport {\n\tdeepEq,\n} from \"./utils\"\n\nexport type GfxCtx = ReturnType<typeof initGfx>\n\nexport class Texture {\n\n\tctx: GfxCtx\n\tsrc: null | ImageSource = null\n\tglTex: WebGLTexture\n\twidth: number\n\theight: number\n\n\tconstructor(ctx: GfxCtx, w: number, h: number, opt: TextureOpt = {}) {\n\n\t\tthis.ctx = ctx\n\t\tconst gl = ctx.gl\n\t\tthis.glTex = ctx.gl.createTexture()\n\t\tctx.onDestroy(() => this.free())\n\n\t\tthis.width = w\n\t\tthis.height = h\n\n\t\t// TODO: no default\n\t\tconst filter = {\n\t\t\t\"linear\": gl.LINEAR,\n\t\t\t\"nearest\": gl.NEAREST,\n\t\t}[opt.filter ?? ctx.opts.texFilter] ?? gl.NEAREST\n\n\t\tconst wrap = {\n\t\t\t\"repeat\": gl.REPEAT,\n\t\t\t\"clampToEadge\": gl.CLAMP_TO_EDGE,\n\t\t}[opt.wrap] ?? gl.CLAMP_TO_EDGE\n\n\t\tthis.bind()\n\n\t\tif (w && h) {\n\t\t\tgl.texImage2D(\n\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t0, gl.RGBA,\n\t\t\t\tw,\n\t\t\t\th,\n\t\t\t\t0,\n\t\t\t\tgl.RGBA,\n\t\t\t\tgl.UNSIGNED_BYTE,\n\t\t\t\tnull,\n\t\t\t)\n\t\t}\n\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap)\n\t\tthis.unbind()\n\n\t}\n\n\tstatic fromImage(ctx: GfxCtx, img: ImageSource, opt: TextureOpt = {}): Texture {\n\t\tconst tex = new Texture(ctx, img.width, img.height, opt)\n\t\ttex.update(img)\n\t\ttex.src = img\n\t\treturn tex\n\t}\n\n\tupdate(img: ImageSource, x = 0, y = 0) {\n\t\tconst gl = this.ctx.gl\n\t\tthis.bind()\n\t\tgl.texSubImage2D(gl.TEXTURE_2D, 0, x, y, gl.RGBA, gl.UNSIGNED_BYTE, img)\n\t\tthis.unbind()\n\t}\n\n\tbind() {\n\t\tthis.ctx.pushTexture2D(this.glTex)\n\t}\n\n\tunbind() {\n\t\tthis.ctx.popTexture2D()\n\t}\n\n\tfree() {\n\t\tthis.ctx.gl.deleteTexture(this.glTex)\n\t}\n\n}\n\nexport class FrameBuffer {\n\n\tctx: GfxCtx\n\ttex: Texture\n\tglFramebuffer: WebGLFramebuffer\n\tglRenderbuffer: WebGLRenderbuffer\n\n\tconstructor(ctx: GfxCtx, w: number, h: number, opt: TextureOpt = {}) {\n\n\t\tthis.ctx = ctx\n\t\tconst gl = ctx.gl\n\t\tctx.onDestroy(() => this.free())\n\t\tthis.tex = new Texture(ctx, w, h, opt)\n\t\tthis.glFramebuffer = gl.createFramebuffer()\n\t\tthis.glRenderbuffer = gl.createRenderbuffer()\n\t\tthis.bind()\n\t\tgl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, w, h)\n\t\tgl.framebufferTexture2D(\n\t\t\tgl.FRAMEBUFFER,\n\t\t\tgl.COLOR_ATTACHMENT0,\n\t\t\tgl.TEXTURE_2D,\n\t\t\tthis.tex.glTex,\n\t\t\t0,\n\t\t)\n\t\tgl.framebufferRenderbuffer(\n\t\t\tgl.FRAMEBUFFER,\n\t\t\tgl.DEPTH_STENCIL_ATTACHMENT,\n\t\t\tgl.RENDERBUFFER,\n\t\t\tthis.glRenderbuffer,\n\t\t)\n\t\tthis.unbind()\n\t}\n\n\tget width() {\n\t\treturn this.tex.width\n\t}\n\n\tget height() {\n\t\treturn this.tex.height\n\t}\n\n\ttoImageData() {\n\t\tconst gl = this.ctx.gl\n\t\tconst data = new Uint8ClampedArray(this.width * this.height * 4)\n\t\tthis.bind()\n\t\tgl.readPixels(0, 0, this.width, this.height, gl.RGBA, gl.UNSIGNED_BYTE, data)\n\t\tthis.unbind()\n\t\t// flip vertically\n\t\tconst bytesPerRow = this.width * 4\n\t\tconst temp = new Uint8Array(bytesPerRow)\n\t\tfor (let y = 0; y < (this.height / 2 | 0); y++) {\n\t\t\tconst topOffset = y * bytesPerRow\n\t\t\tconst bottomOffset = (this.height - y - 1) * bytesPerRow\n\t\t\ttemp.set(data.subarray(topOffset, topOffset + bytesPerRow))\n\t\t\tdata.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow)\n\t\t\tdata.set(temp, bottomOffset)\n\t\t}\n\t\treturn new ImageData(data, this.width, this.height)\n\t}\n\n\ttoDataURL() {\n\t\tconst canvas = document.createElement(\"canvas\")\n\t\tconst ctx = canvas.getContext(\"2d\")\n\t\tcanvas.width = this.width\n\t\tcanvas.height = this.height\n\t\tctx.putImageData(this.toImageData(), 0, 0)\n\t\treturn canvas.toDataURL()\n\t}\n\n\tdraw(action: () => void) {\n\t\tthis.bind()\n\t\taction()\n\t\tthis.unbind()\n\t}\n\n\tbind() {\n\t\tthis.ctx.pushFramebuffer(this.glFramebuffer)\n\t\tthis.ctx.pushRenderbuffer(this.glRenderbuffer)\n\t\tthis.ctx.pushViewport({ x: 0, y: 0, w: this.width, h: this.height })\n\t}\n\n\tunbind() {\n\t\tthis.ctx.popFramebuffer()\n\t\tthis.ctx.popRenderbuffer()\n\t\tthis.ctx.popViewport()\n\t}\n\n\tfree() {\n\t\tconst gl = this.ctx.gl\n\t\tgl.deleteFramebuffer(this.glFramebuffer)\n\t\tgl.deleteRenderbuffer(this.glRenderbuffer)\n\t\tthis.tex.free()\n\t}\n\n}\n\nexport class Shader {\n\n\tctx: GfxCtx\n\tglProgram: WebGLProgram\n\n\tconstructor(ctx: GfxCtx, vert: string, frag: string, attribs: string[]) {\n\n\t\tthis.ctx = ctx\n\t\tctx.onDestroy(() => this.free())\n\n\t\tconst gl = ctx.gl\n\t\tconst vertShader = gl.createShader(gl.VERTEX_SHADER)\n\t\tconst fragShader = gl.createShader(gl.FRAGMENT_SHADER)\n\n\t\tgl.shaderSource(vertShader, vert)\n\t\tgl.shaderSource(fragShader, frag)\n\t\tgl.compileShader(vertShader)\n\t\tgl.compileShader(fragShader)\n\n\t\tconst prog = gl.createProgram()\n\t\tthis.glProgram = prog\n\n\t\tgl.attachShader(prog, vertShader)\n\t\tgl.attachShader(prog, fragShader)\n\n\t\tattribs.forEach((attrib, i) => gl.bindAttribLocation(prog, i, attrib))\n\n\t\tgl.linkProgram(prog)\n\n\t\tif (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n\t\t\tconst vertError = gl.getShaderInfoLog(vertShader)\n\t\t\tif (vertError) throw new Error(\"VERTEX SHADER \" + vertError)\n\t\t\tconst fragError = gl.getShaderInfoLog(fragShader)\n\t\t\tif (fragError) throw new Error(\"FRAGMENT SHADER \" + fragError)\n\t\t}\n\n\t\tgl.deleteShader(vertShader)\n\t\tgl.deleteShader(fragShader)\n\n\t}\n\n\tbind() {\n\t\tthis.ctx.pushProgram(this.glProgram)\n\t}\n\n\tunbind() {\n\t\tthis.ctx.popProgram()\n\t}\n\n\tsend(uniform: Uniform) {\n\t\tconst gl = this.ctx.gl\n\t\tfor (const name in uniform) {\n\t\t\tconst val = uniform[name]\n\t\t\tconst loc = gl.getUniformLocation(this.glProgram, name)\n\t\t\tif (typeof val === \"number\") {\n\t\t\t\tgl.uniform1f(loc, val)\n\t\t\t} else if (val instanceof Mat4) {\n\t\t\t\tgl.uniformMatrix4fv(loc, false, new Float32Array(val.m))\n\t\t\t} else if (val instanceof Color) {\n\t\t\t\tgl.uniform3f(loc, val.r, val.g, val.b)\n\t\t\t} else if (val instanceof Vec2) {\n\t\t\t\tgl.uniform2f(loc, val.x, val.y)\n\t\t\t}\n\t\t}\n\t}\n\n\tfree() {\n\t\tthis.ctx.gl.deleteProgram(this.glProgram)\n\t}\n\n}\n\nexport type VertexFormat = {\n\tname: string,\n\tsize: number,\n}[]\n\nexport class BatchRenderer {\n\n\tctx: GfxCtx\n\n\tglVBuf: WebGLBuffer\n\tglIBuf: WebGLBuffer\n\tvqueue: number[] = []\n\tiqueue: number[] = []\n\tstride: number\n\tmaxVertices: number\n\tmaxIndices: number\n\n\tvertexFormat: VertexFormat\n\tnumDraws: number = 0\n\n\tcurPrimitive: GLenum | null = null\n\tcurTex: Texture | null = null\n\tcurShader: Shader | null = null\n\tcurUniform: Uniform = {}\n\n\tconstructor(ctx: GfxCtx, format: VertexFormat, maxVertices: number, maxIndices: number) {\n\n\t\tconst gl = ctx.gl\n\n\t\tthis.vertexFormat = format\n\t\tthis.ctx = ctx\n\t\tthis.stride = format.reduce((sum, f) => sum + f.size, 0)\n\t\tthis.maxVertices = maxVertices\n\t\tthis.maxIndices = maxIndices\n\n\t\tthis.glVBuf = gl.createBuffer()\n\t\tctx.pushArrayBuffer(this.glVBuf)\n\t\tgl.bufferData(gl.ARRAY_BUFFER, maxVertices * 4, gl.DYNAMIC_DRAW)\n\t\tctx.popArrayBuffer()\n\n\t\tthis.glIBuf = gl.createBuffer()\n\t\tctx.pushElementArrayBuffer(this.glIBuf)\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, maxIndices * 4, gl.DYNAMIC_DRAW)\n\t\tctx.popElementArrayBuffer()\n\n\t}\n\n\tpush(\n\t\tprimitive: GLenum,\n\t\tverts: number[],\n\t\tindices: number[],\n\t\tshader: Shader,\n\t\ttex: Texture | null = null,\n\t\tuniform: Uniform = {},\n\t) {\n\t\tif (\n\t\t\tprimitive !== this.curPrimitive\n\t\t\t|| tex !== this.curTex\n\t\t\t|| shader !== this.curShader\n\t\t\t|| !deepEq(this.curUniform, uniform)\n\t\t\t|| this.vqueue.length + verts.length * this.stride > this.maxVertices\n\t\t\t|| this.iqueue.length + indices.length > this.maxIndices\n\t\t) {\n\t\t\tthis.flush()\n\t\t}\n\t\tconst indexOffset = this.vqueue.length / this.stride\n\t\tfor (const v of verts) {\n\t\t\tthis.vqueue.push(v)\n\t\t}\n\t\tfor (const i of indices) {\n\t\t\tthis.iqueue.push(i + indexOffset)\n\t\t}\n\t\tthis.curPrimitive = primitive\n\t\tthis.curShader = shader\n\t\tthis.curTex = tex\n\t\tthis.curUniform = uniform\n\t}\n\n\tflush() {\n\n\t\tif (\n\t\t\t!this.curPrimitive\n\t\t\t|| !this.curShader\n\t\t\t|| this.vqueue.length === 0\n\t\t\t|| this.iqueue.length === 0\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\tconst gl = this.ctx.gl\n\n\t\tthis.ctx.pushArrayBuffer(this.glVBuf)\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(this.vqueue))\n\t\tthis.ctx.pushElementArrayBuffer(this.glIBuf)\n\t\tgl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, new Uint16Array(this.iqueue))\n\t\tthis.ctx.setVertexFormat(this.vertexFormat)\n\t\tthis.curShader.bind()\n\t\tthis.curShader.send(this.curUniform)\n\t\tthis.curTex?.bind()\n\t\tgl.drawElements(this.curPrimitive, this.iqueue.length, gl.UNSIGNED_SHORT, 0)\n\t\tthis.curTex?.unbind()\n\t\tthis.curShader.unbind()\n\n\t\tthis.ctx.popArrayBuffer()\n\t\tthis.ctx.popElementArrayBuffer()\n\n\t\tthis.vqueue = []\n\t\tthis.iqueue = []\n\t\tthis.numDraws++\n\n\t}\n\n\tfree() {\n\t\tconst gl = this.ctx.gl\n\t\tgl.deleteBuffer(this.glVBuf)\n\t\tgl.deleteBuffer(this.glIBuf)\n\t}\n\n}\n\nexport class Mesh {\n\n\tctx: GfxCtx\n\tglVBuf: WebGLBuffer\n\tglIBuf: WebGLBuffer\n\tvertexFormat: VertexFormat\n\tcount: number\n\n\tconstructor(ctx: GfxCtx, format: VertexFormat, verts: number[], indices: number[]) {\n\n\t\tconst gl = ctx.gl\n\n\t\tthis.vertexFormat = format\n\t\tthis.ctx = ctx\n\n\t\tthis.glVBuf = gl.createBuffer()\n\t\tctx.pushArrayBuffer(this.glVBuf)\n\t\tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verts), gl.STATIC_DRAW)\n\t\tctx.popArrayBuffer()\n\n\t\tthis.glIBuf = gl.createBuffer()\n\t\tctx.pushElementArrayBuffer(this.glIBuf)\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW)\n\t\tctx.popElementArrayBuffer()\n\n\t\tthis.count = indices.length\n\n\t}\n\n\tdraw(primitive?: GLenum) {\n\t\tconst gl = this.ctx.gl\n\t\tthis.ctx.pushArrayBuffer(this.glVBuf)\n\t\tthis.ctx.pushElementArrayBuffer(this.glIBuf)\n\t\tthis.ctx.setVertexFormat(this.vertexFormat)\n\t\tgl.drawElements(primitive ?? gl.TRIANGLES, this.count, gl.UNSIGNED_SHORT, 0)\n\t\tthis.ctx.popArrayBuffer()\n\t\tthis.ctx.popElementArrayBuffer()\n\t}\n\n\tfree() {\n\t\tconst gl = this.ctx.gl\n\t\tgl.deleteBuffer(this.glVBuf)\n\t\tgl.deleteBuffer(this.glIBuf)\n\t}\n\n\n}\n\nfunction genStack<T>(setFunc: (item: T) => void) {\n\tconst stack: T[] = []\n\tconst push = (item: T) => {\n\t\tstack.push(item)\n\t\tsetFunc(item)\n\t}\n\tconst pop = () => {\n\t\tstack.pop()\n\t\tsetFunc(cur() ?? null)\n\t}\n\tconst cur = () => stack[stack.length - 1]\n\treturn [push, pop, cur] as const\n}\n\nexport default function initGfx(gl: WebGLRenderingContext, opts: {\n\ttexFilter?: TexFilter,\n} = {}) {\n\n\tconst gc: Array<() => void> = []\n\n\tfunction onDestroy(action) {\n\t\tgc.push(action)\n\t}\n\n\tfunction destroy() {\n\t\tgc.forEach((action) => action())\n\t\tgl.getExtension(\"WEBGL_lose_context\").loseContext()\n\t}\n\n\tlet curVertexFormat = null\n\n\tfunction setVertexFormat(fmt: VertexFormat) {\n\t\tif (deepEq(fmt, curVertexFormat)) return\n\t\tcurVertexFormat = fmt\n\t\tconst stride = fmt.reduce((sum, f) => sum + f.size, 0)\n\t\tfmt.reduce((offset, f, i) => {\n\t\t\tgl.vertexAttribPointer(i, f.size, gl.FLOAT, false, stride * 4, offset)\n\t\t\tgl.enableVertexAttribArray(i)\n\t\t\treturn offset + f.size * 4\n\t\t}, 0)\n\t}\n\n\tconst [ pushTexture2D, popTexture2D ] =\n\t\tgenStack<WebGLTexture>((t) => gl.bindTexture(gl.TEXTURE_2D, t))\n\n\tconst [ pushArrayBuffer, popArrayBuffer ] =\n\t\tgenStack<WebGLBuffer>((b) => gl.bindBuffer(gl.ARRAY_BUFFER, b))\n\n\tconst [ pushElementArrayBuffer, popElementArrayBuffer ] =\n\t\tgenStack<WebGLBuffer>((b) => gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b))\n\n\tconst [ pushFramebuffer, popFramebuffer ] =\n\t\tgenStack<WebGLFramebuffer>((b) => gl.bindFramebuffer(gl.FRAMEBUFFER, b))\n\n\tconst [ pushRenderbuffer, popRenderbuffer ] =\n\t\tgenStack<WebGLRenderbuffer>((b) => gl.bindRenderbuffer(gl.RENDERBUFFER, b))\n\n\tconst [ pushViewport, popViewport ] =\n\t\tgenStack<{ x: number, y: number, w: number, h: number }>(({ x, y, w, h }) => {\n\t\t\tgl.viewport(x, y, w, h)\n\t\t})\n\n\tconst [ pushProgram, popProgram ] = genStack<WebGLProgram>((p) => gl.useProgram(p))\n\n\tpushViewport({ x: 0, y: 0, w: gl.drawingBufferWidth, h: gl.drawingBufferHeight })\n\n\treturn {\n\t\tgl,\n\t\topts,\n\t\tonDestroy,\n\t\tdestroy,\n\t\tpushTexture2D,\n\t\tpopTexture2D,\n\t\tpushArrayBuffer,\n\t\tpopArrayBuffer,\n\t\tpushElementArrayBuffer,\n\t\tpopElementArrayBuffer,\n\t\tpushFramebuffer,\n\t\tpopFramebuffer,\n\t\tpushRenderbuffer,\n\t\tpopRenderbuffer,\n\t\tpushViewport,\n\t\tpopViewport,\n\t\tpushProgram,\n\t\tpopProgram,\n\t\tsetVertexFormat,\n\t}\n\n}\n", "import {\n\tEvent,\n} from \"./utils\"\n\nexport class Asset<D> {\n\tloaded: boolean = false\n\tdata: D | null = null\n\terror: Error | null = null\n\tprivate onLoadEvents: Event<[D]> = new Event()\n\tprivate onErrorEvents: Event<[Error]> = new Event()\n\tprivate onFinishEvents: Event<[]> = new Event()\n\tconstructor(loader: Promise<D>) {\n\t\tloader.then((data) => {\n\t\t\tthis.data = data\n\t\t\tthis.onLoadEvents.trigger(data)\n\t\t}).catch((err) => {\n\t\t\tthis.error = err\n\t\t\tif (this.onErrorEvents.numListeners() > 0) {\n\t\t\t\tthis.onErrorEvents.trigger(err)\n\t\t\t} else {\n\t\t\t\tthrow err\n\t\t\t}\n\t\t}).finally(() => {\n\t\t\tthis.onFinishEvents.trigger()\n\t\t\tthis.loaded = true\n\t\t})\n\t}\n\tstatic loaded<D>(data: D): Asset<D> {\n\t\tconst asset = new Asset(Promise.resolve(data)) as Asset<D>\n\t\tasset.data = data\n\t\tasset.loaded = true\n\t\treturn asset\n\t}\n\tonLoad(action: (data: D) => void) {\n\t\tif (this.loaded && this.data) {\n\t\t\taction(this.data)\n\t\t} else {\n\t\t\tthis.onLoadEvents.add(action)\n\t\t}\n\t\treturn this\n\t}\n\tonError(action: (err: Error) => void) {\n\t\tif (this.loaded && this.error) {\n\t\t\taction(this.error)\n\t\t} else {\n\t\t\tthis.onErrorEvents.add(action)\n\t\t}\n\t\treturn this\n\t}\n\tonFinish(action: () => void) {\n\t\tif (this.loaded) {\n\t\t\taction()\n\t\t} else {\n\t\t\tthis.onFinishEvents.add(action)\n\t\t}\n\t\treturn this\n\t}\n\tthen(action: (data: D) => void): Asset<D> {\n\t\treturn this.onLoad(action)\n\t}\n\tcatch(action: (err: Error) => void): Asset<D> {\n\t\treturn this.onError(action)\n\t}\n\tfinally(action: () => void): Asset<D> {\n\t\treturn this.onFinish(action)\n\t}\n}\n\nexport class AssetBucket<D> {\n\tassets: Map<string, Asset<D>> = new Map()\n\tlastUID: number = 0\n\tadd(name: string | null, loader: Promise<D>): Asset<D> {\n\t\t// if user don't provide a name we use a generated one\n\t\tconst id = name ?? (this.lastUID++ + \"\")\n\t\tconst asset = new Asset(loader)\n\t\tthis.assets.set(id, asset)\n\t\treturn asset\n\t}\n\taddLoaded(name: string | null, data: D): Asset<D> {\n\t\tconst id = name ?? (this.lastUID++ + \"\")\n\t\tconst asset = Asset.loaded(data)\n\t\tthis.assets.set(id, asset)\n\t\treturn asset\n\t}\n\tget(handle: string): Asset<D> | void {\n\t\treturn this.assets.get(handle)\n\t}\n\tprogress(): number {\n\t\tif (this.assets.size === 0) {\n\t\t\treturn 1\n\t\t}\n\t\tlet loaded = 0\n\t\tthis.assets.forEach((asset) => {\n\t\t\tif (asset.loaded) {\n\t\t\t\tloaded++\n\t\t\t}\n\t\t})\n\t\treturn loaded / this.assets.size\n\t}\n}\n\nexport function fetchURL(url: string) {\n\treturn fetch(url)\n\t\t.then((res) => {\n\t\t\tif (!res.ok) throw new Error(`Failed to fetch \"${url}\"`)\n\t\t\treturn res\n\t\t})\n}\n\nexport function fetchJSON(path: string) {\n\treturn fetchURL(path).then((res) => res.json())\n}\n\nexport function fetchText(path: string) {\n\treturn fetchURL(path).then((res) => res.text())\n}\n\nexport function fetchArrayBuffer(path: string) {\n\treturn fetchURL(path).then((res) => res.arrayBuffer())\n}\n\n// wrapper around image loader to get a Promise\nexport function loadImg(src: string): Promise<HTMLImageElement> {\n\tconst img = new Image()\n\timg.crossOrigin = \"anonymous\"\n\timg.src = src\n\treturn new Promise<HTMLImageElement>((resolve, reject) => {\n\t\timg.onload = () => resolve(img)\n\t\timg.onerror = () => reject(new Error(`Failed to load image from \"${src}\"`))\n\t})\n}\n", "// https://easings.net/\nconst c1 = 1.70158\nconst c2 = c1 * 1.525\nconst c3 = c1 + 1\nconst c4 = (2 * Math.PI) / 3\nconst c5 = (2 * Math.PI) / 4.5\n\nconst easings = {\n\tlinear: (x) => x,\n\teaseInSine: (x) => 1 - Math.cos((x * Math.PI) / 2),\n\teaseOutSine: (x) => Math.sin((x * Math.PI) / 2),\n\teaseInOutSine: (x) => -(Math.cos(Math.PI * x) - 1) / 2,\n\teaseInQuad: (x) => x * x,\n\teaseOutQuad: (x) => 1 - (1 - x) * (1 - x),\n\teaseInOutQuad: (x) => x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2,\n\teaseInCubic: (x) => x * x * x,\n\teaseOutCubic: (x) => 1 - Math.pow(1 - x, 3),\n\teaseInOutCubic: (x) => x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2,\n\teaseInQuart: (x) => x * x * x * x,\n\teaseOutQuart: (x) => 1 - Math.pow(1 - x, 4),\n\teaseInOutQuart: (x) => x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2,\n\teaseInQuint: (x) => x * x * x * x * x,\n\teaseOutQuint: (x) => 1 - Math.pow(1 - x, 5),\n\teaseInOutQuint: (x) => x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2,\n\teaseInExpo: (x) => x === 0 ? 0 : Math.pow(2, 10 * x - 10),\n\teaseOutExpo: (x) => x === 1 ? 1 : 1 - Math.pow(2, -10 * x),\n\teaseInOutExpo: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: x < 0.5\n\t\t\t\t\t? Math.pow(2, 20 * x - 10) / 2\n\t\t\t\t\t: (2 - Math.pow(2, -20 * x + 10)) / 2\n\t},\n\teaseInCirc: (x) => 1 - Math.sqrt(1 - Math.pow(x, 2)),\n\teaseOutCirc: (x) => Math.sqrt(1 - Math.pow(x - 1, 2)),\n\teaseInOutCirc: (x) => {\n\t\treturn x < 0.5\n\t\t\t? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2\n\t\t\t: (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2\n\t},\n\teaseInBack: (x) => c3 * x * x * x - c1 * x * x,\n\teaseOutBack: (x) => 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2),\n\teaseInOutBack: (x) => {\n\t\treturn x < 0.5\n\t\t\t? (Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\n\t\t\t: (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2\n\t},\n\teaseInElastic: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * c4)\n\t},\n\teaseOutElastic: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1\n\t},\n\teaseInOutElastic: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: x < 0.5\n\t\t\t\t\t? -(Math.pow(2, 20 * x - 10) * Math.sin((20 * x - 11.125) * c5)) / 2\n\t\t\t\t\t: (Math.pow(2, -20 * x + 10) * Math.sin((20 * x - 11.125) * c5)) / 2 + 1\n\t},\n\teaseInBounce: (x) => 1 - easings.easeOutBounce(1 - x),\n\teaseOutBounce: (x) => {\n\t\tconst n1 = 7.5625\n\t\tconst d1 = 2.75\n\t\tif (x < 1 / d1) {\n\t\t\treturn n1 * x * x\n\t\t} else if (x < 2 / d1) {\n\t\t\treturn n1 * (x -= 1.5 / d1) * x + 0.75\n\t\t} else if (x < 2.5 / d1) {\n\t\t\treturn n1 * (x -= 2.25 / d1) * x + 0.9375\n\t\t} else {\n\t\t\treturn n1 * (x -= 2.625 / d1) * x + 0.984375\n\t\t}\n\t},\n\teaseInOutBounce: (x) => {\n\t\treturn x < 0.5\n\t\t\t? (1 - easings.easeOutBounce(1 - 2 * x)) / 2\n\t\t\t: (1 + easings.easeOutBounce(2 * x - 1)) / 2\n\t},\n}\n\nexport default easings\n", "import type {\n\tImageSource,\n} from \"./types\"\n\nimport {\n\tGfxCtx,\n\tTexture,\n} from \"./gfx\"\n\nimport {\n\tVec2,\n\tQuad,\n} from \"./math\"\n\nexport default class TexPacker {\n\tprivate textures: Texture[] = []\n\tprivate canvas: HTMLCanvasElement\n\tprivate c2d: CanvasRenderingContext2D\n\tprivate x: number = 0\n\tprivate y: number = 0\n\tprivate curHeight: number = 0\n\tprivate gfx: GfxCtx\n\tconstructor(gfx: GfxCtx, w: number, h: number) {\n\t\tthis.gfx = gfx\n\t\tthis.canvas = document.createElement(\"canvas\")\n\t\tthis.canvas.width = w\n\t\tthis.canvas.height = h\n\t\tthis.textures = [Texture.fromImage(gfx, this.canvas)]\n\t\tthis.c2d = this.canvas.getContext(\"2d\")\n\t}\n\tadd(img: ImageSource): [Texture, Quad] {\n\t\tif (img.width > this.canvas.width || img.height > this.canvas.height) {\n\t\t\tthrow new Error(`Texture size (${img.width} x ${img.height}) exceeds limit (${this.canvas.width} x ${this.canvas.height})`)\n\t\t}\n\t\t// next row\n\t\tif (this.x + img.width > this.canvas.width) {\n\t\t\tthis.x = 0\n\t\t\tthis.y += this.curHeight\n\t\t\tthis.curHeight = 0\n\t\t}\n\t\t// next texture\n\t\tif (this.y + img.height > this.canvas.height) {\n\t\t\tthis.c2d.clearRect(0, 0, this.canvas.width, this.canvas.height)\n\t\t\tthis.textures.push(Texture.fromImage(this.gfx, this.canvas))\n\t\t\tthis.x = 0\n\t\t\tthis.y = 0\n\t\t\tthis.curHeight = 0\n\t\t}\n\t\tconst curTex = this.textures[this.textures.length - 1]\n\t\tconst pos = new Vec2(this.x, this.y)\n\t\tthis.x += img.width\n\t\tif (img.height > this.curHeight) {\n\t\t\tthis.curHeight = img.height\n\t\t}\n\t\tif (img instanceof ImageData) {\n\t\t\tthis.c2d.putImageData(img, pos.x, pos.y)\n\t\t} else {\n\t\t\tthis.c2d.drawImage(img, pos.x, pos.y)\n\t\t}\n\t\tcurTex.update(this.canvas)\n\t\treturn [curTex, new Quad(\n\t\t\tpos.x / this.canvas.width,\n\t\t\tpos.y / this.canvas.height,\n\t\t\timg.width / this.canvas.width,\n\t\t\timg.height / this.canvas.height,\n\t\t)]\n\t}\n\tfree() {\n\t\tfor (const tex of this.textures) {\n\t\t\ttex.free()\n\t\t}\n\t}\n}\n", "const VERSION = \"3000.1.17\"\n\nimport initApp from \"./app\"\nimport initGfx, {\n\tTexture,\n\tFrameBuffer,\n\tShader,\n\tBatchRenderer,\n} from \"./gfx\"\n\nimport {\n\tAsset,\n\tAssetBucket,\n\tfetchArrayBuffer,\n\tfetchJSON,\n\tfetchText,\n\tloadImg,\n} from \"./assets\"\n\nimport {\n\tsat,\n\tvec2,\n\tRect,\n\tPolygon,\n\tLine,\n\tCircle,\n\tColor,\n\tVec2,\n\tMat4,\n\tQuad,\n\tRNG,\n\tquad,\n\trgb,\n\thsl2rgb,\n\trand,\n\trandi,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\ttestLinePoint,\n\ttestLineLine,\n\ttestLineCircle,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestCirclePolygon,\n\tdeg2rad,\n\trad2deg,\n} from \"./math\"\n\nimport easings from \"./easings\"\nimport TexPacker from \"./texPacker\"\n\nimport {\n\tRegistry,\n\tEvent,\n\tEventHandler,\n\tdownload,\n\tdownloadText,\n\tdownloadJSON,\n\tdownloadBlob,\n\tuid,\n\tisDataURL,\n\tgetFileName,\n\toverload2,\n\tdataURLToArrayBuffer,\n\tEventController,\n\tgetErrorMessage,\n\t// eslint-disable-next-line\n\twarn,\n\t// eslint-disable-next-line\n\tbenchmark,\n\t// eslint-disable-next-line\n\tcomparePerf,\n\tBinaryHeap,\n\trunes,\n} from \"./utils\"\n\nimport type {\n\tGfxFont,\n\tRenderProps,\n\tCharTransform,\n\tImageSource,\n\tFormattedText,\n\tFormattedChar,\n\tDrawRectOpt,\n\tDrawLineOpt,\n\tDrawLinesOpt,\n\tDrawTriangleOpt,\n\tDrawPolygonOpt,\n\tDrawCircleOpt,\n\tDrawEllipseOpt,\n\tDrawUVQuadOpt,\n\tVertex,\n\tBitmapFontData,\n\tShaderData,\n\tAsepriteData,\n\tLoadSpriteSrc,\n\tLoadSpriteOpt,\n\tSpriteAtlasData,\n\tLoadBitmapFontOpt,\n\tKaboomCtx,\n\tKaboomOpt,\n\tAudioPlay,\n\tAudioPlayOpt,\n\tDrawSpriteOpt,\n\tDrawTextOpt,\n\tTextAlign,\n\tGameObj,\n\tSceneName,\n\tSceneDef,\n\tCompList,\n\tComp,\n\tTag,\n\tKey,\n\tMouseButton,\n\tPosComp,\n\tScaleComp,\n\tRotateComp,\n\tColorComp,\n\tOpacityComp,\n\tAnchor,\n\tAnchorComp,\n\tZComp,\n\tFollowComp,\n\tOffScreenCompOpt,\n\tOffScreenComp,\n\tAreaCompOpt,\n\tAreaComp,\n\tSpriteComp,\n\tSpriteCompOpt,\n\tSpriteAnimPlayOpt,\n\tSpriteAnims,\n\tTextComp,\n\tTextCompOpt,\n\tRectComp,\n\tRectCompOpt,\n\tUVQuadComp,\n\tCircleCompOpt,\n\tCircleComp,\n\tOutlineComp,\n\tTimerComp,\n\tBodyComp,\n\tBodyCompOpt,\n\tUniform,\n\tShaderComp,\n\tFixedComp,\n\tStayComp,\n\tHealthComp,\n\tLifespanCompOpt,\n\tStateComp,\n\tDebug,\n\tKaboomPlugin,\n\tEmptyComp,\n\tLevelComp,\n\tEdge,\n\tTileComp,\n\tTileCompOpt,\n\tLevelOpt,\n\tRecording,\n\tBoomOpt,\n\tPeditFile,\n\tShape,\n\tDoubleJumpComp,\n\tTimerController,\n\tTweenController,\n\tLoadFontOpt,\n\tAgentComp,\n\tAgentCompOpt,\n\tPathFindOpt,\n\tGetOpt,\n\tVec2Args,\n\tNineSlice,\n\tLerpValue,\n\tTexFilter,\n\tMaskComp,\n\tMask,\n\tOutline,\n\tPolygonComp,\n\tPolygonCompOpt,\n} from \"./types\"\n\nimport beanSpriteSrc from \"./assets/bean.png\"\nimport burpSoundSrc from \"./assets/burp.mp3\"\nimport kaSpriteSrc from \"./assets/ka.png\"\nimport boomSpriteSrc from \"./assets/boom.png\"\n\ninterface SpriteCurAnim {\n\tname: string,\n\ttimer: number,\n\tloop: boolean,\n\tspeed: number,\n\tpingpong: boolean,\n\tonEnd: () => void,\n}\n\n// some default charsets for loading bitmap fonts\nconst ASCII_CHARS = \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\"\n\nconst DEF_ANCHOR = \"topleft\"\nconst BG_GRID_SIZE = 64\n\nconst DEF_FONT = \"monospace\"\nconst DBG_FONT = \"monospace\"\nconst DEF_TEXT_SIZE = 36\nconst DEF_TEXT_CACHE_SIZE = 64\nconst MAX_TEXT_CACHE_SIZE = 256\nconst FONT_ATLAS_WIDTH = 2048\nconst FONT_ATLAS_HEIGHT = 2048\nconst SPRITE_ATLAS_WIDTH = 2048\nconst SPRITE_ATLAS_HEIGHT = 2048\n// 0.1 pixel padding to texture coordinates to prevent artifact\nconst UV_PAD = 0.1\nconst DEF_HASH_GRID_SIZE = 64\nconst DEF_FONT_FILTER = \"linear\"\n\nconst LOG_MAX = 8\nconst LOG_TIME = 4\n\nconst VERTEX_FORMAT = [\n\t{ name: \"a_pos\", size: 2 },\n\t{ name: \"a_uv\", size: 2 },\n\t{ name: \"a_color\", size: 4 },\n]\n\nconst STRIDE = VERTEX_FORMAT.reduce((sum, f) => sum + f.size, 0)\n\nconst MAX_BATCHED_QUAD = 2048\nconst MAX_BATCHED_VERTS = MAX_BATCHED_QUAD * 4 * STRIDE\nconst MAX_BATCHED_INDICES = MAX_BATCHED_QUAD * 6\n\n// vertex shader template, replace {{user}} with user vertex shader code\nconst VERT_TEMPLATE = `\nattribute vec2 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec2 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 0.0, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`\n\n// fragment shader template, replace {{user}} with user fragment shader code\nconst FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec2 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`\n\n// default {{user}} vertex shader code\nconst DEF_VERT = `\nvec4 vert(vec2 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`\n\n// default {{user}} fragment shader code\nconst DEF_FRAG = `\nvec4 frag(vec2 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`\n\nconst COMP_DESC = new Set([\n\t\"id\",\n\t\"require\",\n])\n\nconst COMP_EVENTS = new Set([\n\t\"add\",\n\t\"update\",\n\t\"draw\",\n\t\"destroy\",\n\t\"inspect\",\n\t\"drawInspect\",\n])\n\n// convert anchor string to a vec2 offset\nfunction anchorPt(orig: Anchor | Vec2): Vec2 {\n\tswitch (orig) {\n\t\tcase \"topleft\": return new Vec2(-1, -1)\n\t\tcase \"top\": return new Vec2(0, -1)\n\t\tcase \"topright\": return new Vec2(1, -1)\n\t\tcase \"left\": return new Vec2(-1, 0)\n\t\tcase \"center\": return new Vec2(0, 0)\n\t\tcase \"right\": return new Vec2(1, 0)\n\t\tcase \"botleft\": return new Vec2(-1, 1)\n\t\tcase \"bot\": return new Vec2(0, 1)\n\t\tcase \"botright\": return new Vec2(1, 1)\n\t\tdefault: return orig\n\t}\n}\n\nfunction alignPt(align: TextAlign): number {\n\tswitch (align) {\n\t\tcase \"left\": return 0\n\t\tcase \"center\": return 0.5\n\t\tcase \"right\": return 1\n\t\tdefault: return 0\n\t}\n}\n\nfunction createEmptyAudioBuffer(ctx: AudioContext) {\n\treturn ctx.createBuffer(1, 1, 44100)\n}\n\n// only exports one kaboom() which contains all the state\nexport default (gopt: KaboomOpt = {}): KaboomCtx => {\n\n\tconst root = gopt.root ?? document.body\n\n\t// if root is not defined (which falls back to <body>) we assume user is using kaboom on a clean page, and modify <body> to better fit a full screen canvas\n\tif (root === document.body) {\n\t\tdocument.body.style[\"width\"] = \"100%\"\n\t\tdocument.body.style[\"height\"] = \"100%\"\n\t\tdocument.body.style[\"margin\"] = \"0px\"\n\t\tdocument.documentElement.style[\"width\"] = \"100%\"\n\t\tdocument.documentElement.style[\"height\"] = \"100%\"\n\t}\n\n\t// create a <canvas> if user didn't provide one\n\tconst canvas = gopt.canvas ?? (() => {\n\t\tconst canvas = document.createElement(\"canvas\")\n\t\troot.appendChild(canvas)\n\t\treturn canvas\n\t})()\n\n\t// global pixel scale\n\tconst gscale = gopt.scale ?? 1\n\tconst fixedSize = gopt.width && gopt.height && !gopt.stretch && !gopt.letterbox\n\n\t// adjust canvas size according to user size / viewport settings\n\tif (fixedSize) {\n\t\tcanvas.width = gopt.width * gscale\n\t\tcanvas.height = gopt.height * gscale\n\t} else {\n\t\tcanvas.width = canvas.parentElement.offsetWidth\n\t\tcanvas.height = canvas.parentElement.offsetHeight\n\t}\n\n\t// canvas css styles\n\tconst styles = [\n\t\t\"outline: none\",\n\t\t\"cursor: default\",\n\t]\n\n\tif (fixedSize) {\n\t\tconst cw = canvas.width\n\t\tconst ch = canvas.height\n\t\tstyles.push(`width: ${cw}px`)\n\t\tstyles.push(`height: ${ch}px`)\n\t} else {\n\t\tstyles.push(\"width: 100%\")\n\t\tstyles.push(\"height: 100%\")\n\t}\n\n\tif (gopt.crisp) {\n\t\t// chrome only supports pixelated and firefox only supports crisp-edges\n\t\tstyles.push(\"image-rendering: pixelated\")\n\t\tstyles.push(\"image-rendering: crisp-edges\")\n\t}\n\n\tcanvas.style.cssText = styles.join(\";\")\n\n\tconst pixelDensity = gopt.pixelDensity || window.devicePixelRatio\n\n\tcanvas.width *= pixelDensity\n\tcanvas.height *= pixelDensity\n\t// make canvas focusable\n\tcanvas.tabIndex = 0\n\n\tconst fontCacheCanvas = document.createElement(\"canvas\")\n\tfontCacheCanvas.width = MAX_TEXT_CACHE_SIZE\n\tfontCacheCanvas.height = MAX_TEXT_CACHE_SIZE\n\tconst fontCacheC2d = fontCacheCanvas.getContext(\"2d\", {\n\t\twillReadFrequently: true,\n\t})\n\n\tconst app = initApp({\n\t\tcanvas: canvas,\n\t\ttouchToMouse: gopt.touchToMouse,\n\t\tgamepads: gopt.gamepads,\n\t\tpixelDensity: gopt.pixelDensity,\n\t\tmaxFPS: gopt.maxFPS,\n\t})\n\n\tconst gc: Array<() => void> = []\n\n\tconst gl = app.canvas\n\t\t.getContext(\"webgl\", {\n\t\t\tantialias: true,\n\t\t\tdepth: true,\n\t\t\tstencil: true,\n\t\t\talpha: true,\n\t\t\tpreserveDrawingBuffer: true,\n\t\t})\n\n\tconst ggl = initGfx(gl, {\n\t\ttexFilter: gopt.texFilter,\n\t})\n\n\tconst gfx = (() => {\n\n\t\tconst defShader = makeShader(DEF_VERT, DEF_FRAG)\n\n\t\t// a 1x1 white texture to draw raw shapes like rectangles and polygons\n\t\t// we use a texture for those so we can use only 1 pipeline for drawing sprites + shapes\n\t\tconst emptyTex = Texture.fromImage(\n\t\t\tggl,\n\t\t\tnew ImageData(new Uint8ClampedArray([ 255, 255, 255, 255 ]), 1, 1),\n\t\t)\n\n\t\tconst frameBuffer = (gopt.width && gopt.height)\n\t\t\t? new FrameBuffer(ggl, gopt.width * pixelDensity * gscale, gopt.height * pixelDensity * gscale)\n\t\t\t: new FrameBuffer(ggl, gl.drawingBufferWidth, gl.drawingBufferHeight)\n\n\t\tlet bgColor: null | Color = null\n\t\tlet bgAlpha = 1\n\n\t\tif (gopt.background) {\n\t\t\tbgColor = rgb(gopt.background)\n\t\t\tbgAlpha = Array.isArray(gopt.background) ? gopt.background[3] : 1\n\t\t\tgl.clearColor(\n\t\t\t\tbgColor.r / 255,\n\t\t\t\tbgColor.g / 255,\n\t\t\t\tbgColor.b / 255,\n\t\t\t\tbgAlpha ?? 1,\n\t\t\t)\n\t\t}\n\n\t\tgl.enable(gl.BLEND)\n\t\tgl.blendFuncSeparate(\n\t\t\tgl.SRC_ALPHA,\n\t\t\tgl.ONE_MINUS_SRC_ALPHA,\n\t\t\tgl.ONE,\n\t\t\tgl.ONE_MINUS_SRC_ALPHA,\n\t\t)\n\n\t\tconst renderer = new BatchRenderer(ggl, VERTEX_FORMAT, MAX_BATCHED_VERTS, MAX_BATCHED_INDICES)\n\n\t\t// a checkerboard texture used for the default background\n\t\tconst bgTex = Texture.fromImage(\n\t\t\tggl,\n\t\t\tnew ImageData(new Uint8ClampedArray([\n\t\t\t\t128, 128, 128, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t128, 128, 128, 255,\n\t\t\t]), 2, 2), {\n\t\t\t\twrap: \"repeat\",\n\t\t\t\tfilter: \"nearest\",\n\t\t\t},\n\t\t)\n\n\t\treturn {\n\n\t\t\t// how many draw calls we're doing last frame, this is the number we give to users\n\t\t\tlastDrawCalls: 0,\n\n\t\t\t// gfx states\n\t\t\tdefShader: defShader,\n\t\t\tdefTex: emptyTex,\n\t\t\tframeBuffer: frameBuffer,\n\t\t\tpostShader: null,\n\t\t\tpostShaderUniform: null,\n\t\t\trenderer: renderer,\n\n\t\t\ttransform: new Mat4(),\n\t\t\ttransformStack: [],\n\n\t\t\tbgTex: bgTex,\n\t\t\tbgColor: bgColor,\n\t\t\tbgAlpha: bgAlpha,\n\n\t\t\twidth: gopt.width ?? gl.drawingBufferWidth / pixelDensity / gscale,\n\t\t\theight: gopt.height ?? gl.drawingBufferHeight / pixelDensity / gscale,\n\n\t\t\tviewport: {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\twidth: gl.drawingBufferWidth,\n\t\t\t\theight: gl.drawingBufferHeight,\n\t\t\t},\n\n\t\t\tfixed: false,\n\n\t\t}\n\n\t})()\n\n\tclass SpriteData {\n\n\t\ttex: Texture\n\t\tframes: Quad[] = [ new Quad(0, 0, 1, 1) ]\n\t\tanims: SpriteAnims = {}\n\t\tslice9: NineSlice | null = null\n\n\t\tconstructor(\n\t\t\ttex: Texture,\n\t\t\tframes?: Quad[],\n\t\t\tanims: SpriteAnims = {},\n\t\t\tslice9: NineSlice = null,\n\t\t) {\n\t\t\tthis.tex = tex\n\t\t\tif (frames) this.frames = frames\n\t\t\tthis.anims = anims\n\t\t\tthis.slice9 = slice9\n\t\t}\n\n\t\tget width() {\n\t\t\treturn this.tex.width * this.frames[0].w\n\t\t}\n\n\t\tget height() {\n\t\t\treturn this.tex.height * this.frames[0].h\n\t\t}\n\n\t\tstatic from(src: LoadSpriteSrc, opt: LoadSpriteOpt = {}): Promise<SpriteData> {\n\t\t\treturn typeof src === \"string\"\n\t\t\t\t? SpriteData.fromURL(src, opt)\n\t\t\t\t: Promise.resolve(SpriteData.fromImage(src, opt))\n\t\t}\n\n\t\tstatic fromImage(data: ImageSource, opt: LoadSpriteOpt = {}): SpriteData {\n\t\t\tconst [tex, quad] = assets.packer.add(data)\n\t\t\tconst frames = opt.frames ? opt.frames.map((f) => new Quad(\n\t\t\t\tquad.x + f.x * quad.w,\n\t\t\t\tquad.y + f.y * quad.h,\n\t\t\t\tf.w * quad.w,\n\t\t\t\tf.h * quad.h,\n\t\t\t)) : slice(opt.sliceX || 1, opt.sliceY || 1, quad.x, quad.y, quad.w, quad.h)\n\t\t\treturn new SpriteData(tex, frames, opt.anims, opt.slice9)\n\t\t}\n\n\t\tstatic fromURL(url: string, opt: LoadSpriteOpt = {}): Promise<SpriteData> {\n\t\t\treturn loadImg(url).then((img) => SpriteData.fromImage(img, opt))\n\t\t}\n\n\t}\n\n\tclass SoundData {\n\n\t\tbuf: AudioBuffer\n\n\t\tconstructor(buf: AudioBuffer) {\n\t\t\tthis.buf = buf\n\t\t}\n\n\t\tstatic fromArrayBuffer(buf: ArrayBuffer): Promise<SoundData> {\n\t\t\treturn new Promise((resolve, reject) =>\n\t\t\t\taudio.ctx.decodeAudioData(buf, resolve, reject),\n\t\t\t).then((buf: AudioBuffer) => new SoundData(buf))\n\t\t}\n\n\t\tstatic fromURL(url: string): Promise<SoundData> {\n\t\t\tif (isDataURL(url)) {\n\t\t\t\treturn SoundData.fromArrayBuffer(dataURLToArrayBuffer(url))\n\t\t\t} else {\n\t\t\t\treturn fetchArrayBuffer(url).then((buf) => SoundData.fromArrayBuffer(buf))\n\t\t\t}\n\t\t}\n\n\t}\n\n\tconst audio = (() => {\n\n\t\tconst ctx = new (\n\t\t\twindow.AudioContext || (window as any).webkitAudioContext\n\t\t)() as AudioContext\n\n\t\tconst masterNode = ctx.createGain()\n\t\tmasterNode.connect(ctx.destination)\n\n\t\t// by default browsers can only load audio async, we don't deal with that and just start with an empty audio buffer\n\t\tconst burpSnd = new SoundData(createEmptyAudioBuffer(ctx))\n\n\t\t// load that burp sound\n\t\tctx.decodeAudioData(burpSoundSrc.buffer.slice(0)).then((buf) => {\n\t\t\tburpSnd.buf = buf\n\t\t}).catch((err) => {\n\t\t\tconsole.error(\"Failed to load burp: \", err)\n\t\t})\n\n\t\treturn {\n\t\t\tctx,\n\t\t\tmasterNode,\n\t\t\tburpSnd,\n\t\t}\n\n\t})()\n\n\tconst assets = {\n\t\turlPrefix: \"\",\n\t\t// asset holders\n\t\tsprites: new AssetBucket<SpriteData>(),\n\t\tfonts: new AssetBucket<FontData>(),\n\t\tbitmapFonts: new AssetBucket<BitmapFontData>(),\n\t\tsounds: new AssetBucket<SoundData>(),\n\t\tshaders: new AssetBucket<ShaderData>(),\n\t\tcustom: new AssetBucket<any>(),\n\t\tpacker: new TexPacker(ggl, SPRITE_ATLAS_WIDTH, SPRITE_ATLAS_HEIGHT),\n\t\t// if we finished initially loading all assets\n\t\tloaded: false,\n\t}\n\n\tfunction fixURL<D>(url: D): D {\n\t\tif (typeof url !== \"string\" || isDataURL(url)) return url\n\t\treturn assets.urlPrefix + url as D\n\t}\n\n\tconst game = {\n\n\t\t// general events\n\t\tevents: new EventHandler<{\n\t\t\tmouseMove: [],\n\t\t\tmouseDown: [MouseButton],\n\t\t\tmousePress: [MouseButton],\n\t\t\tmouseRelease: [MouseButton],\n\t\t\tcharInput: [string],\n\t\t\tkeyPress: [Key],\n\t\t\tkeyDown: [Key],\n\t\t\tkeyPressRepeat: [Key],\n\t\t\tkeyRelease: [Key],\n\t\t\ttouchStart: [Vec2, Touch],\n\t\t\ttouchMove: [Vec2, Touch],\n\t\t\ttouchEnd: [Vec2, Touch],\n\t\t\tgamepadButtonDown: [string],\n\t\t\tgamepadButtonPress: [string],\n\t\t\tgamepadButtonRelease: [string],\n\t\t\tgamepadStick: [string, Vec2],\n\t\t\tgamepadConnect: [Gamepad],\n\t\t\tgamepadDisconnect: [Gamepad],\n\t\t\tscroll: [Vec2],\n\t\t\tadd: [GameObj],\n\t\t\tdestroy: [GameObj],\n\t\t\tload: [],\n\t\t\tloading: [number],\n\t\t\terror: [Error],\n\t\t\tinput: [],\n\t\t\tframeEnd: [],\n\t\t\tresize: [],\n\t\t\tsceneLeave: [string],\n\t\t}>(),\n\n\t\t// object events\n\t\tobjEvents: new EventHandler(),\n\n\t\t// root game object\n\t\troot: make([]),\n\n\t\t// misc\n\t\tgravity: 0,\n\t\tscenes: {},\n\n\t\t// on screen log\n\t\tlogs: [],\n\n\t\t// camera\n\t\tcam: {\n\t\t\tpos: null,\n\t\t\tscale: new Vec2(1),\n\t\t\tangle: 0,\n\t\t\tshake: 0,\n\t\t\ttransform: new Mat4(),\n\t\t},\n\n\t}\n\n\tgame.root.use(timer())\n\n\t// wrap individual loaders with global loader counter, for stuff like progress bar\n\tfunction load<T>(prom: Promise<T>): Asset<T> {\n\t\treturn assets.custom.add(null, prom)\n\t}\n\n\t// get current load progress\n\tfunction loadProgress(): number {\n\t\tconst buckets = [\n\t\t\tassets.sprites,\n\t\t\tassets.sounds,\n\t\t\tassets.shaders,\n\t\t\tassets.fonts,\n\t\t\tassets.bitmapFonts,\n\t\t\tassets.custom,\n\t\t]\n\t\treturn buckets.reduce((n, bucket) => n + bucket.progress(), 0) / buckets.length\n\t}\n\n\t// global load path prefix\n\tfunction loadRoot(path?: string): string {\n\t\tif (path !== undefined) {\n\t\t\tassets.urlPrefix = path\n\t\t}\n\t\treturn assets.urlPrefix\n\t}\n\n\tfunction loadJSON(name, url) {\n\t\treturn assets.custom.add(name, fetchJSON(url))\n\t}\n\n\tclass FontData {\n\t\tfontface: FontFace\n\t\tfilter: TexFilter = DEF_FONT_FILTER\n\t\toutline: Outline | null = null\n\t\tsize: number = DEF_TEXT_CACHE_SIZE\n\t\tconstructor(face: FontFace, opt: LoadFontOpt = {}) {\n\t\t\tthis.fontface = face\n\t\t\tthis.filter = opt.filter ?? DEF_FONT_FILTER\n\t\t\tthis.size = opt.size ?? DEF_TEXT_CACHE_SIZE\n\t\t\tif (this.size > MAX_TEXT_CACHE_SIZE) {\n\t\t\t\tthrow new Error(`Max font size: ${MAX_TEXT_CACHE_SIZE}`)\n\t\t\t}\n\t\t\tif (opt.outline) {\n\t\t\t\tthis.outline = {\n\t\t\t\t\twidth: 1,\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t}\n\t\t\t\tif (typeof opt.outline === \"number\") {\n\t\t\t\t\tthis.outline.width = opt.outline\n\t\t\t\t} else if (typeof opt.outline === \"object\") {\n\t\t\t\t\tif (opt.outline.width) this.outline.width = opt.outline.width\n\t\t\t\t\tif (opt.outline.color) this.outline.color = opt.outline.color\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// TODO: pass in null src to store opt for default fonts like \"monospace\"\n\tfunction loadFont(\n\t\tname: string,\n\t\tsrc: string | BinaryData,\n\t\topt: LoadFontOpt = {},\n\t): Asset<FontData> {\n\t\tconst font = new FontFace(name, typeof src === \"string\" ? `url(${src})` : src)\n\t\tdocument.fonts.add(font)\n\t\treturn assets.fonts.add(name, font.load().catch((err) => {\n\t\t\tthrow new Error(`Failed to load font from \"${src}\": ${err}`)\n\t\t}).then((face) => new FontData(face, opt)))\n\t}\n\n\t// TODO: support outline\n\t// TODO: support LoadSpriteSrc\n\tfunction loadBitmapFont(\n\t\tname: string | null,\n\t\tsrc: string,\n\t\tgw: number,\n\t\tgh: number,\n\t\topt: LoadBitmapFontOpt = {},\n\t): Asset<BitmapFontData> {\n\t\treturn assets.bitmapFonts.add(name, loadImg(src)\n\t\t\t.then((img) => {\n\t\t\t\treturn makeFont(\n\t\t\t\t\tTexture.fromImage(ggl, img, opt),\n\t\t\t\t\tgw,\n\t\t\t\t\tgh,\n\t\t\t\t\topt.chars ?? ASCII_CHARS,\n\t\t\t\t)\n\t\t\t}),\n\t\t)\n\t}\n\n\t// get an array of frames based on configuration on how to slice the image\n\tfunction slice(x = 1, y = 1, dx = 0, dy = 0, w = 1, h = 1): Quad[] {\n\t\tconst frames = []\n\t\tconst qw = w / x\n\t\tconst qh = h / y\n\t\tfor (let j = 0; j < y; j++) {\n\t\t\tfor (let i = 0; i < x; i++) {\n\t\t\t\tframes.push(new Quad(\n\t\t\t\t\tdx + i * qw,\n\t\t\t\t\tdy + j * qh,\n\t\t\t\t\tqw,\n\t\t\t\t\tqh,\n\t\t\t\t))\n\t\t\t}\n\t\t}\n\t\treturn frames\n\t}\n\n\t// TODO: load synchronously if passed ImageSource\n\tfunction loadSpriteAtlas(\n\t\tsrc: LoadSpriteSrc,\n\t\tdata: SpriteAtlasData | string,\n\t): Asset<Record<string, SpriteData>> {\n\t\tsrc = fixURL(src)\n\t\tif (typeof data === \"string\") {\n\t\t\treturn load(new Promise((res, rej) => {\n\t\t\t\tfetchJSON(data).then((json) => {\n\t\t\t\t\tloadSpriteAtlas(src, json).then(res).catch(rej)\n\t\t\t\t})\n\t\t\t}))\n\t\t}\n\t\treturn load(SpriteData.from(src).then((atlas) => {\n\t\t\tconst map = {}\n\t\t\tfor (const name in data) {\n\t\t\t\tconst info = data[name]\n\t\t\t\tconst quad = atlas.frames[0]\n\t\t\t\tconst w = SPRITE_ATLAS_WIDTH * quad.w\n\t\t\t\tconst h = SPRITE_ATLAS_HEIGHT * quad.h\n\t\t\t\tconst frames = info.frames ? info.frames.map((f) => new Quad(\n\t\t\t\t\tquad.x + (info.x + f.x) / w * quad.w,\n\t\t\t\t\tquad.y + (info.y + f.y) / h * quad.h,\n\t\t\t\t\tf.w / w * quad.w,\n\t\t\t\t\tf.h / h * quad.h,\n\t\t\t\t)) : slice(\n\t\t\t\t\tinfo.sliceX || 1,\n\t\t\t\t\tinfo.sliceY || 1,\n\t\t\t\t\tquad.x + info.x / w * quad.w,\n\t\t\t\t\tquad.y + info.y / h * quad.h,\n\t\t\t\t\tinfo.width / w * quad.w,\n\t\t\t\t\tinfo.height / h * quad.h,\n\t\t\t\t)\n\t\t\t\tconst spr = new SpriteData(atlas.tex, frames, info.anims)\n\t\t\t\tassets.sprites.addLoaded(name, spr)\n\t\t\t\tmap[name] = spr\n\t\t\t}\n\t\t\treturn map\n\t\t}))\n\t}\n\n\tfunction createSpriteSheet(\n\t\timages: ImageSource[],\n\t\topt: LoadSpriteOpt = {},\n\t): SpriteData {\n\t\tconst canvas = document.createElement(\"canvas\")\n\t\tconst width = images[0].width\n\t\tconst height = images[0].height\n\t\tcanvas.width = width * images.length\n\t\tcanvas.height = height\n\t\tconst c2d = canvas.getContext(\"2d\")\n\t\timages.forEach((img, i) => {\n\t\t\tif (img instanceof ImageData) {\n\t\t\t\tc2d.putImageData(img, i * width, 0)\n\t\t\t} else {\n\t\t\t\tc2d.drawImage(img, i * width, 0)\n\t\t\t}\n\t\t})\n\t\tconst merged = c2d.getImageData(0, 0, images.length * width, height)\n\t\treturn SpriteData.fromImage(merged, {\n\t\t\t...opt,\n\t\t\tsliceX: images.length,\n\t\t\tsliceY: 1,\n\t\t})\n\t}\n\n\t// load a sprite to asset manager\n\tfunction loadSprite(\n\t\tname: string | null,\n\t\tsrc: LoadSpriteSrc | LoadSpriteSrc[],\n\t\topt: LoadSpriteOpt = {\n\t\t\tsliceX: 1,\n\t\t\tsliceY: 1,\n\t\t\tanims: {},\n\t\t},\n\t): Asset<SpriteData> {\n\t\tsrc = fixURL(src)\n\t\tif (Array.isArray(src)) {\n\t\t\tif (src.some((s) => typeof s === \"string\")) {\n\t\t\t\treturn assets.sprites.add(\n\t\t\t\t\tname,\n\t\t\t\t\tPromise.all(src.map((s) => {\n\t\t\t\t\t\treturn typeof s === \"string\" ? loadImg(s) : Promise.resolve(s)\n\t\t\t\t\t})).then((images) => createSpriteSheet(images, opt)),\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\treturn assets.sprites.addLoaded(name, createSpriteSheet(src as ImageSource[], opt))\n\t\t\t}\n\t\t} else {\n\t\t\tif (typeof src === \"string\") {\n\t\t\t\treturn assets.sprites.add(name, SpriteData.from(src, opt))\n\t\t\t} else {\n\t\t\t\treturn assets.sprites.addLoaded(name, SpriteData.fromImage(src, opt))\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction loadPedit(name: string | null, src: string | PeditFile): Asset<SpriteData> {\n\n\t\tsrc = fixURL(src)\n\n\t\t// eslint-disable-next-line\n\t\treturn assets.sprites.add(name, new Promise(async (resolve) => {\n\n\t\t\tconst data = typeof src === \"string\" ? await fetchJSON(src) : src\n\t\t\tconst images = await Promise.all(data.frames.map(loadImg))\n\t\t\tconst canvas = document.createElement(\"canvas\")\n\t\t\tcanvas.width = data.width\n\t\t\tcanvas.height = data.height * data.frames.length\n\n\t\t\tconst c2d = canvas.getContext(\"2d\")\n\n\t\t\timages.forEach((img: HTMLImageElement, i) => {\n\t\t\t\tc2d.drawImage(img, 0, i * data.height)\n\t\t\t})\n\n\t\t\tconst spr = await loadSprite(null, canvas, {\n\t\t\t\tsliceY: data.frames.length,\n\t\t\t\tanims: data.anims,\n\t\t\t})\n\n\t\t\tresolve(spr)\n\n\t\t}))\n\n\t}\n\n\tfunction loadAseprite(\n\t\tname: string | null,\n\t\timgSrc: LoadSpriteSrc,\n\t\tjsonSrc: string | AsepriteData,\n\t): Asset<SpriteData> {\n\n\t\timgSrc = fixURL(imgSrc)\n\t\tjsonSrc = fixURL(jsonSrc)\n\n\t\tif (typeof imgSrc === \"string\" && !jsonSrc) {\n\t\t\tjsonSrc = getFileName(imgSrc) + \".json\"\n\t\t}\n\n\t\tconst resolveJSON = typeof jsonSrc === \"string\"\n\t\t\t? fetchJSON(jsonSrc)\n\t\t\t: Promise.resolve(jsonSrc)\n\n\t\treturn assets.sprites.add(name, resolveJSON.then((data: AsepriteData) => {\n\t\t\tconst size = data.meta.size\n\t\t\tconst frames = data.frames.map((f: any) => {\n\t\t\t\treturn new Quad(\n\t\t\t\t\tf.frame.x / size.w,\n\t\t\t\t\tf.frame.y / size.h,\n\t\t\t\t\tf.frame.w / size.w,\n\t\t\t\t\tf.frame.h / size.h,\n\t\t\t\t)\n\t\t\t})\n\t\t\tconst anims = {}\n\t\t\tfor (const anim of data.meta.frameTags) {\n\t\t\t\tif (anim.from === anim.to) {\n\t\t\t\t\tanims[anim.name] = anim.from\n\t\t\t\t} else {\n\t\t\t\t\tanims[anim.name] = {\n\t\t\t\t\t\tfrom: anim.from,\n\t\t\t\t\t\tto: anim.to,\n\t\t\t\t\t\tspeed: 10,\n\t\t\t\t\t\tloop: true,\n\t\t\t\t\t\tpingpong: anim.direction === \"pingpong\",\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn SpriteData.from(imgSrc, {\n\t\t\t\tframes: frames,\n\t\t\t\tanims: anims,\n\t\t\t})\n\t\t}))\n\n\t}\n\n\tfunction loadShader(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t) {\n\t\treturn assets.shaders.addLoaded(name, makeShader(vert, frag))\n\t}\n\n\tfunction loadShaderURL(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t): Asset<ShaderData> {\n\t\tvert = fixURL(vert)\n\t\tfrag = fixURL(frag)\n\t\tconst resolveUrl = (url?: string) =>\n\t\t\turl\n\t\t\t\t? fetchText(url)\n\t\t\t\t: Promise.resolve(null)\n\t\tconst load = Promise.all([resolveUrl(vert), resolveUrl(frag)])\n\t\t\t.then(([vcode, fcode]: [string | null, string | null]) => {\n\t\t\t\treturn makeShader(vcode, fcode)\n\t\t\t})\n\t\treturn assets.shaders.add(name, load)\n\t}\n\n\t// TODO: allow stream big audio\n\t// load a sound to asset manager\n\tfunction loadSound(\n\t\tname: string | null,\n\t\tsrc: string | ArrayBuffer,\n\t): Asset<SoundData> {\n\t\tsrc = fixURL(src)\n\t\treturn assets.sounds.add(\n\t\t\tname,\n\t\t\ttypeof src === \"string\"\n\t\t\t\t? SoundData.fromURL(src)\n\t\t\t\t: SoundData.fromArrayBuffer(src),\n\t\t)\n\t}\n\n\tfunction loadBean(name: string = \"bean\"): Asset<SpriteData> {\n\t\treturn loadSprite(name, beanSpriteSrc)\n\t}\n\n\tfunction getSprite(name: string): Asset<SpriteData> | void {\n\t\treturn assets.sprites.get(name)\n\t}\n\n\tfunction getSound(name: string): Asset<SoundData> | void {\n\t\treturn assets.sounds.get(name)\n\t}\n\n\tfunction getFont(name: string): Asset<FontData> | void {\n\t\treturn assets.fonts.get(name)\n\t}\n\n\tfunction getBitmapFont(name: string): Asset<BitmapFontData> | void {\n\t\treturn assets.bitmapFonts.get(name)\n\t}\n\n\tfunction getShader(name: string): Asset<ShaderData> | void {\n\t\treturn assets.shaders.get(name)\n\t}\n\n\tfunction getAsset(name: string): Asset<any> | void {\n\t\treturn assets.custom.get(name)\n\t}\n\n\tfunction resolveSprite(\n\t\tsrc: DrawSpriteOpt[\"sprite\"],\n\t): Asset<SpriteData> | null {\n\t\tif (typeof src === \"string\") {\n\t\t\tconst spr = getSprite(src)\n\t\t\tif (spr) {\n\t\t\t\t// if it's already loaded or being loading, return it\n\t\t\t\treturn spr\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\t// if there's any other ongoing loading task we return empty and don't error yet\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\t// if all other assets are loaded and we still haven't found this sprite, throw\n\t\t\t\tthrow new Error(`Sprite not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof SpriteData) {\n\t\t\treturn Asset.loaded(src)\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src\n\t\t} else {\n\t\t\tthrow new Error(`Invalid sprite: ${src}`)\n\t\t}\n\t}\n\n\tfunction resolveSound(\n\t\tsrc: Parameters<typeof play>[0],\n\t): Asset<SoundData> | null {\n\t\tif (typeof src === \"string\") {\n\t\t\tconst snd = getSound(src)\n\t\t\tif (snd) {\n\t\t\t\treturn snd\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Sound not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof SoundData) {\n\t\t\treturn Asset.loaded(src)\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src\n\t\t} else {\n\t\t\tthrow new Error(`Invalid sound: ${src}`)\n\t\t}\n\t}\n\n\tfunction resolveShader(\n\t\tsrc: RenderProps[\"shader\"],\n\t): ShaderData | Asset<ShaderData> | null {\n\t\tif (!src) {\n\t\t\treturn gfx.defShader\n\t\t}\n\t\tif (typeof src === \"string\") {\n\t\t\tconst shader = getShader(src)\n\t\t\tif (shader) {\n\t\t\t\treturn shader.data ?? shader\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Shader not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src.data ? src.data : src\n\t\t}\n\t\t// TODO: check type\n\t\t// @ts-ignore\n\t\treturn src\n\t}\n\n\tfunction resolveFont(\n\t\tsrc: DrawTextOpt[\"font\"],\n\t):\n\t\t| FontData\n\t\t| Asset<FontData>\n\t\t| BitmapFontData\n\t\t| Asset<BitmapFontData>\n\t\t| string\n\t\t| void\n\t{\n\t\tif (!src) {\n\t\t\treturn resolveFont(gopt.font ?? DEF_FONT)\n\t\t}\n\t\tif (typeof src === \"string\") {\n\t\t\tconst bfont = getBitmapFont(src)\n\t\t\tconst font = getFont(src)\n\t\t\tif (bfont) {\n\t\t\t\treturn bfont.data ?? bfont\n\t\t\t} else if (font) {\n\t\t\t\treturn font.data ?? font\n\t\t\t} else if (document.fonts.check(`${DEF_TEXT_CACHE_SIZE}px ${src}`)) {\n\t\t\t\treturn src\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Font not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src.data ? src.data : src\n\t\t}\n\t\t// TODO: check type\n\t\t// @ts-ignore\n\t\treturn src\n\t}\n\n\t// get / set master volume\n\tfunction volume(v?: number): number {\n\t\tif (v !== undefined) {\n\t\t\taudio.masterNode.gain.value = v\n\t\t}\n\t\treturn audio.masterNode.gain.value\n\t}\n\n\t// TODO: method to completely destory audio?\n\t// TODO: time() not correct when looped over or ended\n\t// TODO: onEnd() not working\n\t// plays a sound, returns a control handle\n\tfunction play(\n\t\tsrc: string | SoundData | Asset<SoundData>,\n\t\topt: AudioPlayOpt = {},\n\t): AudioPlay {\n\n\t\tconst ctx = audio.ctx\n\t\tlet paused = opt.paused ?? false\n\t\tlet srcNode = ctx.createBufferSource()\n\t\tconst onEndEvents = new Event()\n\t\tconst gainNode = ctx.createGain()\n\t\tconst pos = opt.seek ?? 0\n\t\tlet startTime = 0\n\t\tlet stopTime = 0\n\t\tlet started = false\n\n\t\tsrcNode.loop = Boolean(opt.loop)\n\t\tsrcNode.detune.value = opt.detune ?? 0\n\t\tsrcNode.playbackRate.value = opt.speed ?? 1\n\t\tsrcNode.connect(gainNode)\n\t\tsrcNode.onended = () => {\n\t\t\tif (getTime() >= srcNode.buffer?.duration ?? Number.POSITIVE_INFINITY) {\n\t\t\t\tonEndEvents.trigger()\n\t\t\t}\n\t\t}\n\t\tgainNode.connect(audio.masterNode)\n\t\tgainNode.gain.value = opt.volume ?? 1\n\n\t\tconst start = (data: SoundData) => {\n\t\t\tsrcNode.buffer = data.buf\n\t\t\tif (!paused) {\n\t\t\t\tstartTime = ctx.currentTime\n\t\t\t\tsrcNode.start(0, pos)\n\t\t\t\tstarted = true\n\t\t\t}\n\t\t}\n\n\t\tconst snd = resolveSound(src)\n\n\t\tif (snd instanceof Asset) {\n\t\t\tsnd.onLoad(start)\n\t\t}\n\n\t\tconst getTime = () => {\n\t\t\tif (!srcNode.buffer) return 0\n\t\t\tconst t = paused\n\t\t\t\t? stopTime - startTime\n\t\t\t\t: ctx.currentTime - startTime\n\t\t\tconst d = srcNode.buffer.duration\n\t\t\treturn srcNode.loop ? t % d : Math.min(t, d)\n\t\t}\n\n\t\tconst cloneNode = (oldNode: AudioBufferSourceNode) => {\n\t\t\tconst newNode = ctx.createBufferSource()\n\t\t\tnewNode.buffer = oldNode.buffer\n\t\t\tnewNode.loop = oldNode.loop\n\t\t\tnewNode.playbackRate.value = oldNode.playbackRate.value\n\t\t\tnewNode.detune.value = oldNode.detune.value\n\t\t\tnewNode.onended = oldNode.onended\n\t\t\tnewNode.connect(gainNode)\n\t\t\treturn newNode\n\t\t}\n\n\t\treturn {\n\n\t\t\tstop() {\n\t\t\t\tthis.paused = true\n\t\t\t\tthis.seek(0)\n\t\t\t},\n\n\t\t\tset paused(p: boolean) {\n\t\t\t\tif (paused === p) return\n\t\t\t\tpaused = p\n\t\t\t\tif (p) {\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsrcNode.stop()\n\t\t\t\t\t\tstarted = false\n\t\t\t\t\t}\n\t\t\t\t\tstopTime = ctx.currentTime\n\t\t\t\t} else {\n\t\t\t\t\tsrcNode = cloneNode(srcNode)\n\t\t\t\t\tconst pos = stopTime - startTime\n\t\t\t\t\tsrcNode.start(0, pos)\n\t\t\t\t\tstarted = true\n\t\t\t\t\tstartTime = ctx.currentTime - pos\n\t\t\t\t\tstopTime = 0\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tget paused() {\n\t\t\t\treturn paused\n\t\t\t},\n\n\t\t\tplay(time: number = 0) {\n\t\t\t\tthis.seek(time)\n\t\t\t\tthis.paused = false\n\t\t\t},\n\n\t\t\tseek(time: number) {\n\t\t\t\tif (!srcNode.buffer?.duration) return\n\t\t\t\tif (time > srcNode.buffer.duration) return\n\t\t\t\tif (paused) {\n\t\t\t\t\tsrcNode = cloneNode(srcNode)\n\t\t\t\t\tstartTime = stopTime - time\n\t\t\t\t} else {\n\t\t\t\t\tsrcNode.stop()\n\t\t\t\t\tsrcNode = cloneNode(srcNode)\n\t\t\t\t\tstartTime = ctx.currentTime - time\n\t\t\t\t\tsrcNode.start(0, time)\n\t\t\t\t\tstarted = true\n\t\t\t\t\tstopTime = 0\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// TODO: affect time()\n\t\t\tset speed(val: number) {\n\t\t\t\tsrcNode.playbackRate.value = val\n\t\t\t},\n\n\t\t\tget speed() {\n\t\t\t\treturn srcNode.playbackRate.value\n\t\t\t},\n\n\t\t\tset detune(val: number) {\n\t\t\t\tsrcNode.detune.value = val\n\t\t\t},\n\n\t\t\tget detune() {\n\t\t\t\treturn srcNode.detune.value\n\t\t\t},\n\n\t\t\tset volume(val: number) {\n\t\t\t\tgainNode.gain.value = Math.max(val, 0)\n\t\t\t},\n\n\t\t\tget volume() {\n\t\t\t\treturn gainNode.gain.value\n\t\t\t},\n\n\t\t\tset loop(l: boolean) {\n\t\t\t\tsrcNode.loop = l\n\t\t\t},\n\n\t\t\tget loop() {\n\t\t\t\treturn srcNode.loop\n\t\t\t},\n\n\t\t\tduration(): number {\n\t\t\t\treturn srcNode.buffer?.duration ?? 0\n\t\t\t},\n\n\t\t\ttime(): number {\n\t\t\t\treturn getTime() % this.duration()\n\t\t\t},\n\n\t\t\tonEnd(action: () => void) {\n\t\t\t\treturn onEndEvents.add(action)\n\t\t\t},\n\n\t\t\tthen(action: () => void) {\n\t\t\t\treturn this.onEnd(action)\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\t// core kaboom logic\n\tfunction burp(opt?: AudioPlayOpt): AudioPlay {\n\t\treturn play(audio.burpSnd, opt)\n\t}\n\n\ttype DrawTextureOpt = RenderProps & {\n\t\ttex: Texture,\n\t\twidth?: number,\n\t\theight?: number,\n\t\ttiled?: boolean,\n\t\tflipX?: boolean,\n\t\tflipY?: boolean,\n\t\tquad?: Quad,\n\t\tanchor?: Anchor | Vec2,\n\t}\n\n\tfunction makeCanvas(w: number, h: number) {\n\t\treturn new FrameBuffer(ggl, w, h)\n\t}\n\n\tfunction makeShader(\n\t\tvertSrc: string | null = DEF_VERT,\n\t\tfragSrc: string | null = DEF_FRAG,\n\t): Shader {\n\t\tconst vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc ?? DEF_VERT)\n\t\tconst fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc ?? DEF_FRAG)\n\t\ttry {\n\t\t\treturn new Shader(ggl, vcode, fcode, VERTEX_FORMAT.map((vert) => vert.name))\n\t\t} catch (e) {\n\t\t\tconst lineOffset = 14\n\t\t\tconst fmt = /(?<type>^\\w+) SHADER ERROR: 0:(?<line>\\d+): (?<msg>.+)/\n\t\t\tconst match = getErrorMessage(e).match(fmt)\n\t\t\tconst line = Number(match.groups.line) - lineOffset\n\t\t\tconst msg = match.groups.msg.trim()\n\t\t\tconst ty = match.groups.type.toLowerCase()\n\t\t\tthrow new Error(`${ty} shader line ${line}: ${msg}`)\n\t\t}\n\t}\n\n\tfunction makeFont(\n\t\ttex: Texture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont {\n\n\t\tconst cols = tex.width / gw\n\t\tconst map: Record<string, Quad> = {}\n\t\tconst charMap = chars.split(\"\").entries()\n\n\t\tfor (const [i, ch] of charMap) {\n\t\t\tmap[ch] = new Quad(\n\t\t\t\t(i % cols) * gw,\n\t\t\t\tMath.floor(i / cols) * gh,\n\t\t\t\tgw,\n\t\t\t\tgh,\n\t\t\t)\n\t\t}\n\n\t\treturn {\n\t\t\ttex: tex,\n\t\t\tmap: map,\n\t\t\tsize: gh,\n\t\t}\n\n\t}\n\n\t// TODO: expose\n\tfunction drawRaw(\n\t\tverts: Vertex[],\n\t\tindices: number[],\n\t\tfixed: boolean,\n\t\ttex: Texture = gfx.defTex,\n\t\tshaderSrc: RenderProps[\"shader\"] = gfx.defShader,\n\t\tuniform: Uniform = {},\n\t) {\n\n\t\tconst shader = resolveShader(shaderSrc)\n\n\t\tif (!shader || shader instanceof Asset) {\n\t\t\treturn\n\t\t}\n\n\t\tconst transform = (gfx.fixed || fixed)\n\t\t\t? gfx.transform\n\t\t\t: game.cam.transform.mult(gfx.transform)\n\n\t\tconst vv = []\n\n\t\tfor (const v of verts) {\n\t\t\t// normalized world space coordinate [-1.0 ~ 1.0]\n\t\t\tconst pt = screen2ndc(transform.multVec2(v.pos))\n\t\t\tvv.push(\n\t\t\t\tpt.x, pt.y,\n\t\t\t\tv.uv.x, v.uv.y,\n\t\t\t\tv.color.r / 255, v.color.g / 255, v.color.b / 255, v.opacity,\n\t\t\t)\n\t\t}\n\n\t\tgfx.renderer.push(gl.TRIANGLES, vv, indices, shader, tex, uniform)\n\n\t}\n\n\t// draw all batched shapes\n\tfunction flush() {\n\t\tgfx.renderer.flush()\n\t}\n\n\t// start a rendering frame, reset some states\n\tfunction frameStart() {\n\n\t\t// clear backbuffer\n\t\tgl.clear(gl.COLOR_BUFFER_BIT)\n\t\tgfx.frameBuffer.bind()\n\t\t// clear framebuffer\n\t\tgl.clear(gl.COLOR_BUFFER_BIT)\n\n\t\tif (!gfx.bgColor) {\n\t\t\tdrawUnscaled(() => {\n\t\t\t\tdrawUVQuad({\n\t\t\t\t\twidth: width(),\n\t\t\t\t\theight: height(),\n\t\t\t\t\tquad: new Quad(\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\twidth() / BG_GRID_SIZE,\n\t\t\t\t\t\theight() / BG_GRID_SIZE,\n\t\t\t\t\t),\n\t\t\t\t\ttex: gfx.bgTex,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tgfx.renderer.numDraws = 0\n\t\tgfx.fixed = false\n\t\tgfx.transformStack.length = 0\n\t\tgfx.transform = new Mat4()\n\n\t}\n\n\tfunction usePostEffect(name: string, uniform?: Uniform | (() => Uniform)) {\n\t\tgfx.postShader = name\n\t\tgfx.postShaderUniform = uniform ?? null\n\t}\n\n\tfunction frameEnd() {\n\n\t\t// TODO: don't render debug UI with framebuffer\n\t\t// TODO: polish framebuffer rendering / sizing issues\n\t\tflush()\n\t\tgfx.lastDrawCalls = gfx.renderer.numDraws\n\t\tgfx.frameBuffer.unbind()\n\t\tgl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight)\n\n\t\tconst ow = gfx.width\n\t\tconst oh = gfx.height\n\t\tgfx.width = gl.drawingBufferWidth / pixelDensity\n\t\tgfx.height = gl.drawingBufferHeight / pixelDensity\n\n\t\tdrawTexture({\n\t\t\tflipY: true,\n\t\t\ttex: gfx.frameBuffer.tex,\n\t\t\tpos: new Vec2(gfx.viewport.x, gfx.viewport.y),\n\t\t\twidth: gfx.viewport.width,\n\t\t\theight: gfx.viewport.height,\n\t\t\tshader: gfx.postShader,\n\t\t\tuniform: typeof gfx.postShaderUniform === \"function\"\n\t\t\t\t? gfx.postShaderUniform()\n\t\t\t\t: gfx.postShaderUniform,\n\t\t\tfixed: true,\n\t\t})\n\n\t\tflush()\n\t\tgfx.width = ow\n\t\tgfx.height = oh\n\n\t}\n\n\t// convert a screen space coordinate to webgl normalized device coordinate\n\tfunction screen2ndc(pt: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tpt.x / width() * 2 - 1,\n\t\t\t-pt.y / height() * 2 + 1,\n\t\t)\n\t}\n\n\tfunction pushMatrix(m: Mat4) {\n\t\tgfx.transform = m.clone()\n\t}\n\n\tfunction pushTranslate(...args: Vec2Args) {\n\t\tif (args[0] === undefined) return\n\t\tconst p = vec2(...args)\n\t\tif (p.x === 0 && p.y === 0) return\n\t\tgfx.transform.translate(p)\n\t}\n\n\tfunction pushScale(...args: Vec2Args) {\n\t\tif (args[0] === undefined) return\n\t\tconst p = vec2(...args)\n\t\tif (p.x === 1 && p.y === 1) return\n\t\tgfx.transform.scale(p)\n\t}\n\n\tfunction pushRotate(a: number) {\n\t\tif (!a) return\n\t\tgfx.transform.rotate(a)\n\t}\n\n\tfunction pushTransform() {\n\t\tgfx.transformStack.push(gfx.transform.clone())\n\t}\n\n\tfunction popTransform() {\n\t\tif (gfx.transformStack.length > 0) {\n\t\t\tgfx.transform = gfx.transformStack.pop()\n\t\t}\n\t}\n\n\t// draw a uv textured quad\n\tfunction drawUVQuad(opt: DrawUVQuadOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new Error(\"drawUVQuad() requires property \\\"width\\\" and \\\"height\\\".\")\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn\n\t\t}\n\n\t\tconst w = opt.width\n\t\tconst h = opt.height\n\t\tconst anchor = anchorPt(opt.anchor || DEF_ANCHOR)\n\t\tconst offset = anchor.scale(new Vec2(w, h).scale(-0.5))\n\t\tconst q = opt.quad || new Quad(0, 0, 1, 1)\n\t\tconst color = opt.color || rgb(255, 255, 255)\n\t\tconst opacity = opt.opacity ?? 1\n\n\t\t// apply uv padding to avoid artifacts\n\t\tconst uvPadX = opt.tex ? UV_PAD / opt.tex.width : 0\n\t\tconst uvPadY = opt.tex ? UV_PAD / opt.tex.height : 0\n\t\tconst qx = q.x + uvPadX\n\t\tconst qy = q.y + uvPadY\n\t\tconst qw = q.w - uvPadX * 2\n\t\tconst qh = q.h - uvPadY * 2\n\n\t\tpushTransform()\n\t\tpushTranslate(opt.pos)\n\t\tpushRotate(opt.angle)\n\t\tpushScale(opt.scale)\n\t\tpushTranslate(offset)\n\n\t\tdrawRaw([\n\t\t\t{\n\t\t\t\tpos: new Vec2(-w / 2, h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx + qw : qx, opt.flipY ? qy : qy + qh),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: new Vec2(-w / 2, -h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx + qw : qx, opt.flipY ? qy + qh : qy),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: new Vec2(w / 2, -h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx : qx + qw, opt.flipY ? qy + qh : qy),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: new Vec2(w / 2, h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx : qx + qw, opt.flipY ? qy : qy + qh),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t], [0, 1, 3, 1, 2, 3], opt.fixed, opt.tex, opt.shader, opt.uniform)\n\n\t\tpopTransform()\n\n\t}\n\n\t// TODO: clean\n\tfunction drawTexture(opt: DrawTextureOpt) {\n\n\t\tif (!opt.tex) {\n\t\t\tthrow new Error(\"drawTexture() requires property \\\"tex\\\".\")\n\t\t}\n\n\t\tconst q = opt.quad ?? new Quad(0, 0, 1, 1)\n\t\tconst w = opt.tex.width * q.w\n\t\tconst h = opt.tex.height * q.h\n\t\tconst scale = new Vec2(1)\n\n\t\tif (opt.tiled) {\n\n\t\t\t// TODO: draw fract\n\t\t\tconst repX = Math.ceil((opt.width || w) / w)\n\t\t\tconst repY = Math.ceil((opt.height || h) / h)\n\t\t\tconst anchor = anchorPt(opt.anchor || DEF_ANCHOR).add(new Vec2(1, 1)).scale(0.5)\n\t\t\tconst offset = anchor.scale(repX * w, repY * h)\n\n\t\t\t// TODO: rotation\n\t\t\tfor (let i = 0; i < repX; i++) {\n\t\t\t\tfor (let j = 0; j < repY; j++) {\n\t\t\t\t\tdrawUVQuad(Object.assign({}, opt, {\n\t\t\t\t\t\tpos: (opt.pos || new Vec2(0)).add(new Vec2(w * i, h * j)).sub(offset),\n\t\t\t\t\t\tscale: scale.scale(opt.scale || new Vec2(1)),\n\t\t\t\t\t\ttex: opt.tex,\n\t\t\t\t\t\tquad: q,\n\t\t\t\t\t\twidth: w,\n\t\t\t\t\t\theight: h,\n\t\t\t\t\t\tanchor: \"topleft\",\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\n\t\t\t// TODO: should this ignore scale?\n\t\t\tif (opt.width && opt.height) {\n\t\t\t\tscale.x = opt.width / w\n\t\t\t\tscale.y = opt.height / h\n\t\t\t} else if (opt.width) {\n\t\t\t\tscale.x = opt.width / w\n\t\t\t\tscale.y = scale.x\n\t\t\t} else if (opt.height) {\n\t\t\t\tscale.y = opt.height / h\n\t\t\t\tscale.x = scale.y\n\t\t\t}\n\n\t\t\tdrawUVQuad(Object.assign({}, opt, {\n\t\t\t\tscale: scale.scale(opt.scale || new Vec2(1)),\n\t\t\t\ttex: opt.tex,\n\t\t\t\tquad: q,\n\t\t\t\twidth: w,\n\t\t\t\theight: h,\n\t\t\t}))\n\n\t\t}\n\n\t}\n\n\tfunction drawSprite(opt: DrawSpriteOpt) {\n\n\t\tif (!opt.sprite) {\n\t\t\tthrow new Error(\"drawSprite() requires property \\\"sprite\\\"\")\n\t\t}\n\n\t\t// TODO: slow\n\t\tconst spr = resolveSprite(opt.sprite)\n\n\t\tif (!spr || !spr.data) {\n\t\t\treturn\n\t\t}\n\n\t\tconst q = spr.data.frames[opt.frame ?? 0]\n\n\t\tif (!q) {\n\t\t\tthrow new Error(`Frame not found: ${opt.frame ?? 0}`)\n\t\t}\n\n\t\tdrawTexture(Object.assign({}, opt, {\n\t\t\ttex: spr.data.tex,\n\t\t\tquad: q.scale(opt.quad ?? new Quad(0, 0, 1, 1)),\n\t\t}))\n\n\t}\n\n\t// generate vertices to form an arc\n\tfunction getArcPts(\n\t\tpos: Vec2,\n\t\tradiusX: number,\n\t\tradiusY: number,\n\t\tstart: number,\n\t\tend: number,\n\t\tres: number = 1,\n\t): Vec2[] {\n\n\t\t// normalize and turn start and end angles to radians\n\t\tstart = deg2rad(start % 360)\n\t\tend = deg2rad(end % 360)\n\t\tif (end <= start) end += Math.PI * 2\n\n\t\tconst pts = []\n\t\tconst nverts = Math.ceil((end - start) / deg2rad(8) * res)\n\t\tconst step = (end - start) / nverts\n\n\t\t// calculate vertices\n\t\tfor (let a = start; a < end; a += step) {\n\t\t\tpts.push(pos.add(radiusX * Math.cos(a), radiusY * Math.sin(a)))\n\t\t}\n\n\t\tpts.push(pos.add(radiusX * Math.cos(end), radiusY * Math.sin(end)))\n\n\t\treturn pts\n\n\t}\n\n\tfunction drawRect(opt: DrawRectOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new Error(\"drawRect() requires property \\\"width\\\" and \\\"height\\\".\")\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn\n\t\t}\n\n\t\tconst w = opt.width\n\t\tconst h = opt.height\n\t\tconst anchor = anchorPt(opt.anchor || DEF_ANCHOR).add(1, 1)\n\t\tconst offset = anchor.scale(new Vec2(w, h).scale(-0.5))\n\n\t\tlet pts = [\n\t\t\tnew Vec2(0, 0),\n\t\t\tnew Vec2(w, 0),\n\t\t\tnew Vec2(w, h),\n\t\t\tnew Vec2(0, h),\n\t\t]\n\n\t\t// TODO: gradient for rounded rect\n\t\t// TODO: drawPolygon should handle generic rounded corners\n\t\tif (opt.radius) {\n\n\t\t\t// maxium radius is half the shortest side\n\t\t\tconst r = Math.min(Math.min(w, h) / 2, opt.radius)\n\n\t\t\tpts = [\n\t\t\t\tnew Vec2(r, 0),\n\t\t\t\tnew Vec2(w - r, 0),\n\t\t\t\t...getArcPts(new Vec2(w - r, r), r, r, 270, 360),\n\t\t\t\tnew Vec2(w, r),\n\t\t\t\tnew Vec2(w, h - r),\n\t\t\t\t...getArcPts(new Vec2(w - r, h - r), r, r, 0, 90),\n\t\t\t\tnew Vec2(w - r, h),\n\t\t\t\tnew Vec2(r, h),\n\t\t\t\t...getArcPts(new Vec2(r, h - r), r, r, 90, 180),\n\t\t\t\tnew Vec2(0, h - r),\n\t\t\t\tnew Vec2(0, r),\n\t\t\t\t...getArcPts(new Vec2(r, r), r, r, 180, 270),\n\t\t\t]\n\n\t\t}\n\n\t\tdrawPolygon(Object.assign({}, opt, {\n\t\t\toffset,\n\t\t\tpts,\n\t\t\t...(opt.gradient ? {\n\t\t\t\tcolors: opt.horizontal ? [\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t] : [\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t],\n\t\t\t} : {}),\n\t\t}))\n\n\t}\n\n\tfunction drawLine(opt: DrawLineOpt) {\n\n\t\tconst { p1, p2 } = opt\n\n\t\tif (!p1 || !p2) {\n\t\t\tthrow new Error(\"drawLine() requires properties \\\"p1\\\" and \\\"p2\\\".\")\n\t\t}\n\n\t\tconst w = opt.width || 1\n\n\t\t// the displacement from the line end point to the corner point\n\t\tconst dis = p2.sub(p1).unit().normal().scale(w * 0.5)\n\n\t\t// calculate the 4 corner points of the line polygon\n\t\tconst verts = [\n\t\t\tp1.sub(dis),\n\t\t\tp1.add(dis),\n\t\t\tp2.add(dis),\n\t\t\tp2.sub(dis),\n\t\t].map((p) => ({\n\t\t\tpos: new Vec2(p.x, p.y),\n\t\t\tuv: new Vec2(0),\n\t\t\tcolor: opt.color ?? Color.WHITE,\n\t\t\topacity: opt.opacity ?? 1,\n\t\t}))\n\n\t\tdrawRaw(verts, [0, 1, 3, 1, 2, 3], opt.fixed, gfx.defTex, opt.shader, opt.uniform)\n\n\t}\n\n\tfunction drawLines(opt: DrawLinesOpt) {\n\n\t\tconst pts = opt.pts\n\n\t\tif (!pts) {\n\t\t\tthrow new Error(\"drawLines() requires property \\\"pts\\\".\")\n\t\t}\n\n\t\tif (pts.length < 2) {\n\t\t\treturn\n\t\t}\n\n\t\tif (opt.radius && pts.length >= 3) {\n\n\t\t\t// TODO: line joines\n\t\t\t// TODO: rounded vertices for arbitury polygonic shape\n\t\t\tlet minSLen = pts[0].sdist(pts[1])\n\n\t\t\tfor (let i = 1; i < pts.length - 1; i++) {\n\t\t\t\tminSLen = Math.min(pts[i].sdist(pts[i + 1]), minSLen)\n\t\t\t}\n\n\t\t\t// eslint-disable-next-line\n\t\t\tconst radius = Math.min(opt.radius, Math.sqrt(minSLen) / 2)\n\n\t\t\tdrawLine(Object.assign({}, opt, { p1: pts[0], p2: pts[1] }))\n\n\t\t\tfor (let i = 1; i < pts.length - 2; i++) {\n\t\t\t\tconst p1 = pts[i]\n\t\t\t\tconst p2 = pts[i + 1]\n\t\t\t\tdrawLine(Object.assign({}, opt, {\n\t\t\t\t\tp1: p1,\n\t\t\t\t\tp2: p2,\n\t\t\t\t}))\n\t\t\t}\n\n\t\t\tdrawLine(Object.assign({}, opt, {\n\t\t\t\tp1: pts[pts.length - 2],\n\t\t\t\tp2: pts[pts.length - 1],\n\t\t\t}))\n\n\t\t} else {\n\n\t\t\tfor (let i = 0; i < pts.length - 1; i++) {\n\t\t\t\tdrawLine(Object.assign({}, opt, {\n\t\t\t\t\tp1: pts[i],\n\t\t\t\t\tp2: pts[i + 1],\n\t\t\t\t}))\n\t\t\t\t// TODO: other line join types\n\t\t\t\tif (opt.join !== \"none\") {\n\t\t\t\t\tdrawCircle(Object.assign({}, opt, {\n\t\t\t\t\t\tpos: pts[i],\n\t\t\t\t\t\tradius: opt.width / 2,\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction drawTriangle(opt: DrawTriangleOpt) {\n\t\tif (!opt.p1 || !opt.p2 || !opt.p3) {\n\t\t\tthrow new Error(\"drawTriangle() requires properties \\\"p1\\\", \\\"p2\\\" and \\\"p3\\\".\")\n\t\t}\n\t\treturn drawPolygon(Object.assign({}, opt, {\n\t\t\tpts: [opt.p1, opt.p2, opt.p3],\n\t\t}))\n\t}\n\n\tfunction drawCircle(opt: DrawCircleOpt) {\n\n\t\tif (typeof opt.radius !== \"number\") {\n\t\t\tthrow new Error(\"drawCircle() requires property \\\"radius\\\".\")\n\t\t}\n\n\t\tif (opt.radius === 0) {\n\t\t\treturn\n\t\t}\n\n\t\tdrawEllipse(Object.assign({}, opt, {\n\t\t\tradiusX: opt.radius,\n\t\t\tradiusY: opt.radius,\n\t\t\tangle: 0,\n\t\t}))\n\n\t}\n\n\tfunction drawEllipse(opt: DrawEllipseOpt) {\n\n\t\tif (opt.radiusX === undefined || opt.radiusY === undefined) {\n\t\t\tthrow new Error(\"drawEllipse() requires properties \\\"radiusX\\\" and \\\"radiusY\\\".\")\n\t\t}\n\n\t\tif (opt.radiusX === 0 || opt.radiusY === 0) {\n\t\t\treturn\n\t\t}\n\n\t\tconst start = opt.start ?? 0\n\t\tconst end = opt.end ?? 360\n\t\tconst offset = anchorPt(opt.anchor ?? \"center\").scale(new Vec2(-opt.radiusX, -opt.radiusY))\n\n\t\tconst pts = getArcPts(\n\t\t\toffset,\n\t\t\topt.radiusX,\n\t\t\topt.radiusY,\n\t\t\tstart,\n\t\t\tend,\n\t\t\topt.resolution,\n\t\t)\n\n\t\t// center\n\t\tpts.unshift(offset)\n\n\t\tconst polyOpt = Object.assign({}, opt, {\n\t\t\tpts,\n\t\t\tradius: 0,\n\t\t\t...(opt.gradient ? {\n\t\t\t\tcolors: [\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\t...Array(pts.length - 1).fill(opt.gradient[1]),\n\t\t\t\t],\n\t\t\t} : {}),\n\t\t})\n\n\t\t// full circle with outline shouldn't have the center point\n\t\tif (end - start >= 360 && opt.outline) {\n\t\t\tif (opt.fill !== false) {\n\t\t\t\tdrawPolygon(Object.assign(polyOpt, {\n\t\t\t\t\toutline: null,\n\t\t\t\t}))\n\t\t\t}\n\t\t\tdrawPolygon(Object.assign(polyOpt, {\n\t\t\t\tpts: pts.slice(1),\n\t\t\t\tfill: false,\n\t\t\t}))\n\t\t\treturn\n\t\t}\n\n\t\tdrawPolygon(polyOpt)\n\n\t}\n\n\tfunction drawPolygon(opt: DrawPolygonOpt) {\n\n\t\tif (!opt.pts) {\n\t\t\tthrow new Error(\"drawPolygon() requires property \\\"pts\\\".\")\n\t\t}\n\n\t\tconst npts = opt.pts.length\n\n\t\tif (npts < 3) {\n\t\t\treturn\n\t\t}\n\n\t\tpushTransform()\n\t\tpushTranslate(opt.pos)\n\t\tpushScale(opt.scale)\n\t\tpushRotate(opt.angle)\n\t\tpushTranslate(opt.offset)\n\n\t\tif (opt.fill !== false) {\n\n\t\t\tconst color = opt.color ?? Color.WHITE\n\n\t\t\tconst verts = opt.pts.map((pt, i) => ({\n\t\t\t\tpos: new Vec2(pt.x, pt.y),\n\t\t\t\tuv: new Vec2(0, 0),\n\t\t\t\tcolor: opt.colors ? (opt.colors[i] ? opt.colors[i].mult(color) : color) : color,\n\t\t\t\topacity: opt.opacity ?? 1,\n\t\t\t}))\n\n\t\t\t// TODO: better triangulation\n\t\t\tconst indices = [...Array(npts - 2).keys()]\n\t\t\t\t.map((n) => [0, n + 1, n + 2])\n\t\t\t\t.flat()\n\n\t\t\tdrawRaw(verts, opt.indices ?? indices, opt.fixed, gfx.defTex, opt.shader, opt.uniform)\n\n\t\t}\n\n\t\tif (opt.outline) {\n\t\t\tdrawLines({\n\t\t\t\tpts: [ ...opt.pts, opt.pts[0] ],\n\t\t\t\tradius: opt.radius,\n\t\t\t\twidth: opt.outline.width,\n\t\t\t\tcolor: opt.outline.color,\n\t\t\t\tjoin: opt.outline.join,\n\t\t\t\tuniform: opt.uniform,\n\t\t\t\tfixed: opt.fixed,\n\t\t\t\topacity: opt.opacity,\n\t\t\t})\n\t\t}\n\n\t\tpopTransform()\n\n\t}\n\n\tfunction drawStenciled(content: () => void, mask: () => void, test: number) {\n\n\t\tflush()\n\t\tgl.clear(gl.STENCIL_BUFFER_BIT)\n\t\tgl.enable(gl.STENCIL_TEST)\n\n\t\t// don't perform test, pure write\n\t\tgl.stencilFunc(\n\t\t\tgl.NEVER,\n\t\t\t1,\n\t\t\t0xFF,\n\t\t)\n\n\t\t// always replace since we're writing to the buffer\n\t\tgl.stencilOp(\n\t\t\tgl.REPLACE,\n\t\t\tgl.REPLACE,\n\t\t\tgl.REPLACE,\n\t\t)\n\n\t\tmask()\n\t\tflush()\n\n\t\t// perform test\n\t\tgl.stencilFunc(\n\t\t\ttest,\n\t\t\t1,\n\t\t\t0xFF,\n\t\t)\n\n\t\t// don't write since we're only testing\n\t\tgl.stencilOp(\n\t\t\tgl.KEEP,\n\t\t\tgl.KEEP,\n\t\t\tgl.KEEP,\n\t\t)\n\n\t\tcontent()\n\t\tflush()\n\t\tgl.disable(gl.STENCIL_TEST)\n\n\t}\n\n\tfunction drawMasked(content: () => void, mask: () => void) {\n\t\tdrawStenciled(content, mask, gl.EQUAL)\n\t}\n\n\tfunction drawSubtracted(content: () => void, mask: () => void) {\n\t\tdrawStenciled(content, mask, gl.NOTEQUAL)\n\t}\n\n\tfunction getViewportScale() {\n\t\treturn (gfx.viewport.width + gfx.viewport.height) / (gfx.width + gfx.height)\n\t}\n\n\tfunction drawUnscaled(content: () => void) {\n\t\tflush()\n\t\tconst ow = gfx.width\n\t\tconst oh = gfx.height\n\t\tgfx.width = gfx.viewport.width\n\t\tgfx.height = gfx.viewport.height\n\t\tcontent()\n\t\tflush()\n\t\tgfx.width = ow\n\t\tgfx.height = oh\n\t}\n\n\tfunction applyCharTransform(fchar: FormattedChar, tr: CharTransform) {\n\t\tif (tr.pos) fchar.pos = fchar.pos.add(tr.pos)\n\t\tif (tr.scale) fchar.scale = fchar.scale.scale(vec2(tr.scale))\n\t\tif (tr.angle) fchar.angle += tr.angle\n\t\tif (tr.color && fchar.ch.length === 1) fchar.color = fchar.color.mult(tr.color)\n\t\tif (tr.opacity) fchar.opacity *= tr.opacity\n\t}\n\n\t// TODO: escape\n\t// eslint-disable-next-line\n\tconst TEXT_STYLE_RE = /\\[(?<style>\\w+)\\](?<text>.*?)\\[\\/\\k<style>\\]/g\n\n\t// TODO: handle nested\n\tfunction compileStyledText(text: string): {\n\t\tcharStyleMap: Record<number, string[]>,\n\t\ttext: string,\n\t} {\n\n\t\tconst charStyleMap = {}\n\t\t// get the text without the styling syntax\n\t\tconst renderText = text.replace(TEXT_STYLE_RE, \"$2\")\n\t\tlet idxOffset = 0\n\n\t\t// put each styled char index into a map for easy access when iterating each char\n\t\tfor (const match of text.matchAll(TEXT_STYLE_RE)) {\n\t\t\tconst origIdx = match.index - idxOffset\n\t\t\tfor (let i = 0; i < match.groups.text.length; i++) {\n\t\t\t\tcharStyleMap[i + origIdx] = [match.groups.style]\n\t\t\t}\n\t\t\t// omit the style syntax in format string when calculating index\n\t\t\tidxOffset += match[0].length - match.groups.text.length\n\t\t}\n\n\t\treturn {\n\t\t\tcharStyleMap: charStyleMap,\n\t\t\ttext: renderText,\n\t\t}\n\n\t}\n\n\ttype FontAtlas = {\n\t\tfont: BitmapFontData,\n\t\tcursor: Vec2,\n\t\toutline: Outline | null,\n\t}\n\n\tconst fontAtlases: Record<string, FontAtlas> = {}\n\n\t// TODO: cache formatted text\n\t// format text and return a list of chars with their calculated position\n\tfunction formatText(opt: DrawTextOpt): FormattedText {\n\n\t\tif (opt.text === undefined) {\n\t\t\tthrow new Error(\"formatText() requires property \\\"text\\\".\")\n\t\t}\n\n\t\tlet font = resolveFont(opt.font)\n\n\t\t// if it's still loading\n\t\tif (opt.text === \"\" || font instanceof Asset || !font) {\n\t\t\treturn {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tchars: [],\n\t\t\t\topt: opt,\n\t\t\t}\n\t\t}\n\n\t\tconst { charStyleMap, text } = compileStyledText(opt.text + \"\")\n\t\tconst chars = runes(text)\n\n\t\t// if it's not bitmap font, we draw it with 2d canvas or use cached image\n\t\tif (font instanceof FontData || typeof font === \"string\") {\n\n\t\t\tconst fontName = font instanceof FontData ? font.fontface.family : font\n\t\t\tconst opts: {\n\t\t\t\toutline: Outline | null,\n\t\t\t\tfilter: TexFilter,\n\t\t\t} = font instanceof FontData ? {\n\t\t\t\toutline: font.outline,\n\t\t\t\tfilter: font.filter,\n\t\t\t} : {\n\t\t\t\toutline: null,\n\t\t\t\tfilter: DEF_FONT_FILTER,\n\t\t\t}\n\n\t\t\t// TODO: customizable font tex filter\n\t\t\tconst atlas: FontAtlas = fontAtlases[fontName] ?? {\n\t\t\t\tfont: {\n\t\t\t\t\ttex: new Texture(ggl, FONT_ATLAS_WIDTH, FONT_ATLAS_HEIGHT, {\n\t\t\t\t\t\tfilter: opts.filter,\n\t\t\t\t\t}),\n\t\t\t\t\tmap: {},\n\t\t\t\t\tsize: DEF_TEXT_CACHE_SIZE,\n\t\t\t\t},\n\t\t\t\tcursor: new Vec2(0),\n\t\t\t\toutline: opts.outline,\n\t\t\t}\n\n\t\t\tif (!fontAtlases[fontName]) {\n\t\t\t\tfontAtlases[fontName] = atlas\n\t\t\t}\n\n\t\t\tfont = atlas.font\n\n\t\t\tfor (const ch of chars) {\n\n\t\t\t\tif (!atlas.font.map[ch]) {\n\n\t\t\t\t\t// TODO: use assets.packer to pack font texture\n\t\t\t\t\tconst c2d = fontCacheC2d\n\t\t\t\t\tc2d.clearRect(0, 0, fontCacheCanvas.width, fontCacheCanvas.height)\n\t\t\t\t\tc2d.font = `${font.size}px ${fontName}`\n\t\t\t\t\tc2d.textBaseline = \"top\"\n\t\t\t\t\tc2d.textAlign = \"left\"\n\t\t\t\t\tc2d.fillStyle = \"#ffffff\"\n\t\t\t\t\tconst m = c2d.measureText(ch)\n\t\t\t\t\tlet w = Math.ceil(m.width)\n\t\t\t\t\tlet h = font.size\n\t\t\t\t\tif (atlas.outline) {\n\t\t\t\t\t\tc2d.lineJoin = \"round\"\n\t\t\t\t\t\tc2d.lineWidth = atlas.outline.width * 2\n\t\t\t\t\t\tc2d.strokeStyle = atlas.outline.color.toHex()\n\t\t\t\t\t\tc2d.strokeText(ch, atlas.outline.width, atlas.outline.width)\n\t\t\t\t\t\tw += atlas.outline.width * 2\n\t\t\t\t\t\th += atlas.outline.width * 3\n\t\t\t\t\t}\n\t\t\t\t\tc2d.fillText(ch, atlas.outline?.width ?? 0, atlas.outline?.width ?? 0)\n\n\t\t\t\t\tconst img = c2d.getImageData(0, 0, w, h)\n\n\t\t\t\t\t// if we are about to exceed the X axis of the texture, go to another line\n\t\t\t\t\tif (atlas.cursor.x + w > FONT_ATLAS_WIDTH) {\n\t\t\t\t\t\tatlas.cursor.x = 0\n\t\t\t\t\t\tatlas.cursor.y += h\n\t\t\t\t\t\tif (atlas.cursor.y > FONT_ATLAS_HEIGHT) {\n\t\t\t\t\t\t\t// TODO: create another atlas\n\t\t\t\t\t\t\tthrow new Error(\"Font atlas exceeds character limit\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfont.tex.update(img, atlas.cursor.x, atlas.cursor.y)\n\t\t\t\t\tfont.map[ch] = new Quad(atlas.cursor.x, atlas.cursor.y, w, h)\n\t\t\t\t\tatlas.cursor.x += w\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst size = opt.size || font.size\n\t\tconst scale = vec2(opt.scale ?? 1).scale(size / font.size)\n\t\tconst lineSpacing = opt.lineSpacing ?? 0\n\t\tconst letterSpacing = opt.letterSpacing ?? 0\n\t\tlet curX = 0\n\t\tlet tw = 0\n\t\tlet th = 0\n\t\tconst lines: Array<{\n\t\t\twidth: number,\n\t\t\tchars: FormattedChar[],\n\t\t}> = []\n\t\tlet curLine: FormattedChar[] = []\n\t\tlet cursor = 0\n\t\tlet lastSpace = null\n\t\tlet lastSpaceWidth = null\n\n\t\t// TODO: word break\n\t\twhile (cursor < chars.length) {\n\n\t\t\tlet ch = chars[cursor]\n\n\t\t\t// always new line on '\\n'\n\t\t\tif (ch === \"\\n\") {\n\n\t\t\t\tth += size + lineSpacing\n\n\t\t\t\tlines.push({\n\t\t\t\t\twidth: curX - letterSpacing,\n\t\t\t\t\tchars: curLine,\n\t\t\t\t})\n\n\t\t\t\tlastSpace = null\n\t\t\t\tlastSpaceWidth = null\n\t\t\t\tcurX = 0\n\t\t\t\tcurLine = []\n\n\t\t\t} else {\n\n\t\t\t\tlet q = font.map[ch]\n\n\t\t\t\t// TODO: leave space if character not found?\n\t\t\t\tif (q) {\n\n\t\t\t\t\tlet gw = q.w * scale.x\n\n\t\t\t\t\tif (opt.width && curX + gw > opt.width) {\n\t\t\t\t\t\t// new line on last word if width exceeds\n\t\t\t\t\t\tth += size + lineSpacing\n\t\t\t\t\t\tif (lastSpace != null) {\n\t\t\t\t\t\t\tcursor -= curLine.length - lastSpace\n\t\t\t\t\t\t\tch = chars[cursor]\n\t\t\t\t\t\t\tq = font.map[ch]\n\t\t\t\t\t\t\tgw = q.w * scale.x\n\t\t\t\t\t\t\t// omit trailing space\n\t\t\t\t\t\t\tcurLine = curLine.slice(0, lastSpace - 1)\n\t\t\t\t\t\t\tcurX = lastSpaceWidth\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSpace = null\n\t\t\t\t\t\tlastSpaceWidth = null\n\t\t\t\t\t\tlines.push({\n\t\t\t\t\t\t\twidth: curX - letterSpacing,\n\t\t\t\t\t\t\tchars: curLine,\n\t\t\t\t\t\t})\n\t\t\t\t\t\tcurX = 0\n\t\t\t\t\t\tcurLine = []\n\t\t\t\t\t}\n\n\t\t\t\t\t// push char\n\t\t\t\t\tcurLine.push({\n\t\t\t\t\t\ttex: font.tex,\n\t\t\t\t\t\twidth: q.w,\n\t\t\t\t\t\theight: q.h,\n\t\t\t\t\t\t// without some padding there'll be visual artifacts on edges\n\t\t\t\t\t\tquad: new Quad(\n\t\t\t\t\t\t\tq.x / font.tex.width,\n\t\t\t\t\t\t\tq.y / font.tex.height,\n\t\t\t\t\t\t\tq.w / font.tex.width,\n\t\t\t\t\t\t\tq.h / font.tex.height,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tch: ch,\n\t\t\t\t\t\tpos: new Vec2(curX, th),\n\t\t\t\t\t\topacity: opt.opacity ?? 1,\n\t\t\t\t\t\tcolor: opt.color ?? Color.WHITE,\n\t\t\t\t\t\tscale: vec2(scale),\n\t\t\t\t\t\tangle: 0,\n\t\t\t\t\t})\n\n\t\t\t\t\tif (ch === \" \") {\n\t\t\t\t\t\tlastSpace = curLine.length\n\t\t\t\t\t\tlastSpaceWidth = curX\n\t\t\t\t\t}\n\n\t\t\t\t\tcurX += gw\n\t\t\t\t\ttw = Math.max(tw, curX)\n\t\t\t\t\tcurX += letterSpacing\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcursor++\n\n\t\t}\n\n\t\tlines.push({\n\t\t\twidth: curX - letterSpacing,\n\t\t\tchars: curLine,\n\t\t})\n\n\t\tth += size\n\n\t\tif (opt.width) {\n\t\t\ttw = opt.width\n\t\t}\n\n\t\tconst fchars: FormattedChar[] = []\n\n\t\tfor (const line of lines) {\n\n\t\t\tconst ox = (tw - line.width) * alignPt(opt.align ?? \"left\")\n\n\t\t\tfor (const fchar of line.chars) {\n\n\t\t\t\tconst q = font.map[fchar.ch]\n\t\t\t\tconst idx = fchars.length\n\n\t\t\t\tfchar.pos = fchar.pos.add(ox, 0).add(\n\t\t\t\t\tq.w * scale.x * 0.5,\n\t\t\t\t\tq.h * scale.y * 0.5,\n\t\t\t\t)\n\n\t\t\t\tif (opt.transform) {\n\t\t\t\t\tconst tr = typeof opt.transform === \"function\"\n\t\t\t\t\t\t? opt.transform(idx, fchar.ch)\n\t\t\t\t\t\t: opt.transform\n\t\t\t\t\tif (tr) {\n\t\t\t\t\t\tapplyCharTransform(fchar, tr)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (charStyleMap[idx]) {\n\t\t\t\t\tconst styles = charStyleMap[idx]\n\t\t\t\t\tfor (const name of styles) {\n\t\t\t\t\t\tconst style = opt.styles[name]\n\t\t\t\t\t\tconst tr = typeof style === \"function\"\n\t\t\t\t\t\t\t? style(idx, fchar.ch)\n\t\t\t\t\t\t\t: style\n\t\t\t\t\t\tif (tr) {\n\t\t\t\t\t\t\tapplyCharTransform(fchar, tr)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfchars.push(fchar)\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\twidth: tw,\n\t\t\theight: th,\n\t\t\tchars: fchars,\n\t\t\topt: opt,\n\t\t}\n\n\t}\n\n\tfunction drawText(opt: DrawTextOpt) {\n\t\tdrawFormattedText(formatText(opt))\n\t}\n\n\tfunction drawFormattedText(ftext: FormattedText) {\n\t\tpushTransform()\n\t\tpushTranslate(ftext.opt.pos)\n\t\tpushRotate(ftext.opt.angle)\n\t\tpushTranslate(anchorPt(ftext.opt.anchor ?? \"topleft\").add(1, 1).scale(ftext.width, ftext.height).scale(-0.5))\n\t\tftext.chars.forEach((ch) => {\n\t\t\tdrawUVQuad({\n\t\t\t\ttex: ch.tex,\n\t\t\t\twidth: ch.width,\n\t\t\t\theight: ch.height,\n\t\t\t\tpos: ch.pos,\n\t\t\t\tscale: ch.scale,\n\t\t\t\tangle: ch.angle,\n\t\t\t\tcolor: ch.color,\n\t\t\t\topacity: ch.opacity,\n\t\t\t\tquad: ch.quad,\n\t\t\t\tanchor: \"center\",\n\t\t\t\tuniform: ftext.opt.uniform,\n\t\t\t\tshader: ftext.opt.shader,\n\t\t\t\tfixed: ftext.opt.fixed,\n\t\t\t})\n\t\t})\n\t\tpopTransform()\n\t}\n\n\t// get game width\n\tfunction width(): number {\n\t\treturn gfx.width\n\t}\n\n\t// get game height\n\tfunction height(): number {\n\t\treturn gfx.height\n\t}\n\n\t// transform a point from window space to content space\n\tfunction windowToContent(pt: Vec2) {\n\t\treturn new Vec2(\n\t\t\t(pt.x - gfx.viewport.x) * width() / gfx.viewport.width,\n\t\t\t(pt.y - gfx.viewport.y) * height() / gfx.viewport.height,\n\t\t)\n\t}\n\n\t// transform a point from content space to view space\n\tfunction contentToView(pt: Vec2) {\n\t\treturn new Vec2(\n\t\t\tpt.x * gfx.viewport.width / gfx.width,\n\t\t\tpt.y * gfx.viewport.height / gfx.height,\n\t\t)\n\t}\n\n\tfunction mousePos() {\n\t\treturn windowToContent(app.mousePos())\n\t}\n\n\tlet debugPaused = false\n\n\tconst debug: Debug = {\n\t\tinspect: false,\n\t\ttimeScale: 1,\n\t\tshowLog: true,\n\t\tfps: () => app.fps(),\n\t\tnumFrames: () => app.numFrames(),\n\t\tstepFrame: updateFrame,\n\t\tdrawCalls: () => gfx.lastDrawCalls,\n\t\tclearLog: () => game.logs = [],\n\t\tlog: (msg) => {\n\t\t\tconst max = gopt.logMax ?? LOG_MAX\n\t\t\tgame.logs.unshift({\n\t\t\t\tmsg: msg,\n\t\t\t\ttime: app.time(),\n\t\t\t})\n\t\t\tif (game.logs.length > max) {\n\t\t\t\tgame.logs = game.logs.slice(0, max)\n\t\t\t}\n\t\t},\n\t\terror: (msg) => debug.log(new Error(msg.toString ? msg.toString() : msg as string)),\n\t\tcurRecording: null,\n\t\tnumObjects: () => get(\"*\", { recursive: true }).length,\n\t\tget paused() {\n\t\t\treturn debugPaused\n\t\t},\n\t\tset paused(v) {\n\t\t\tdebugPaused = v\n\t\t\tif (v) {\n\t\t\t\taudio.ctx.suspend()\n\t\t\t} else {\n\t\t\t\taudio.ctx.resume()\n\t\t\t}\n\t\t},\n\t}\n\n\tfunction dt() {\n\t\treturn app.dt() * debug.timeScale\n\t}\n\n\tfunction camPos(...pos: Vec2Args): Vec2 {\n\t\tif (pos.length > 0) {\n\t\t\tgame.cam.pos = vec2(...pos)\n\t\t}\n\t\treturn game.cam.pos ? game.cam.pos.clone() : center()\n\t}\n\n\tfunction camScale(...scale: Vec2Args): Vec2 {\n\t\tif (scale.length > 0) {\n\t\t\tgame.cam.scale = vec2(...scale)\n\t\t}\n\t\treturn game.cam.scale.clone()\n\t}\n\n\tfunction camRot(angle: number): number {\n\t\tif (angle !== undefined) {\n\t\t\tgame.cam.angle = angle\n\t\t}\n\t\treturn game.cam.angle\n\t}\n\n\tfunction shake(intensity: number = 12) {\n\t\tgame.cam.shake += intensity\n\t}\n\n\tfunction toScreen(p: Vec2): Vec2 {\n\t\treturn game.cam.transform.multVec2(p)\n\t}\n\n\tfunction toWorld(p: Vec2): Vec2 {\n\t\treturn game.cam.transform.invert().multVec2(p)\n\t}\n\n\tfunction calcTransform(obj: GameObj): Mat4 {\n\t\tconst tr = new Mat4()\n\t\tif (obj.pos) tr.translate(obj.pos)\n\t\tif (obj.scale) tr.scale(obj.scale)\n\t\tif (obj.angle) tr.rotate(obj.angle)\n\t\treturn obj.parent ? tr.mult(obj.parent.transform) : tr\n\t}\n\n\tfunction make<T>(comps: CompList<T> = []): GameObj<T> {\n\n\t\tconst compStates = new Map()\n\t\tconst cleanups = {}\n\t\tconst events = new EventHandler()\n\t\tconst inputEvents: EventController[] = []\n\t\tlet onCurCompCleanup = null\n\t\tlet paused = false\n\n\t\t// @ts-ignore\n\t\tconst obj: GameObj = {\n\n\t\t\tid: uid(),\n\t\t\t// TODO: a nice way to hide / pause when add()-ing\n\t\t\thidden: false,\n\t\t\ttransform: new Mat4(),\n\t\t\tchildren: [],\n\t\t\tparent: null,\n\n\t\t\tset paused(p) {\n\t\t\t\tif (p === paused) return\n\t\t\t\tpaused = p\n\t\t\t\tfor (const e of inputEvents) {\n\t\t\t\t\te.paused = p\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tget paused() {\n\t\t\t\treturn paused\n\t\t\t},\n\n\t\t\tadd<T2>(a: CompList<T2> | GameObj<T2> = []): GameObj<T2> {\n\t\t\t\tconst obj = Array.isArray(a) ? make(a) : a\n\t\t\t\tif (obj.parent) {\n\t\t\t\t\tthrow new Error(\"Cannot add a game obj that already has a parent.\")\n\t\t\t\t}\n\t\t\t\tobj.parent = this\n\t\t\t\tobj.transform = calcTransform(obj)\n\t\t\t\tthis.children.push(obj)\n\t\t\t\t// TODO: trigger add for children\n\t\t\t\tobj.trigger(\"add\", obj)\n\t\t\t\tgame.events.trigger(\"add\", obj)\n\t\t\t\treturn obj\n\t\t\t},\n\n\t\t\treadd(obj: GameObj): GameObj {\n\t\t\t\tconst idx = this.children.indexOf(obj)\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tthis.children.splice(idx, 1)\n\t\t\t\t\tthis.children.push(obj)\n\t\t\t\t}\n\t\t\t\treturn obj\n\t\t\t},\n\n\t\t\tremove(obj: GameObj): void {\n\t\t\t\tconst idx = this.children.indexOf(obj)\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tobj.parent = null\n\t\t\t\t\tthis.children.splice(idx, 1)\n\t\t\t\t\tconst trigger = (o) => {\n\t\t\t\t\t\to.trigger(\"destroy\")\n\t\t\t\t\t\tgame.events.trigger(\"destroy\", o)\n\t\t\t\t\t\to.children.forEach((child) => trigger(child))\n\t\t\t\t\t}\n\t\t\t\t\ttrigger(obj)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// TODO: recursive\n\t\t\tremoveAll(tag?: Tag) {\n\t\t\t\tif (tag) {\n\t\t\t\t\tthis.get(tag).forEach((obj) => this.remove(obj))\n\t\t\t\t} else {\n\t\t\t\t\tfor (const child of [...this.children]) this.remove(child)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tupdate() {\n\t\t\t\tif (this.paused) return\n\t\t\t\tthis.children\n\t\t\t\t\t.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))\n\t\t\t\t\t.forEach((child) => child.update())\n\t\t\t\tthis.trigger(\"update\")\n\t\t\t},\n\n\t\t\tdraw(this: GameObj<PosComp | ScaleComp | RotateComp | FixedComp | MaskComp>) {\n\t\t\t\tif (this.hidden) return\n\t\t\t\tif (this.canvas) this.canvas.bind()\n\t\t\t\tconst f = gfx.fixed\n\t\t\t\tif (this.fixed) gfx.fixed = true\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(this.pos)\n\t\t\t\tpushScale(this.scale)\n\t\t\t\tpushRotate(this.angle)\n\t\t\t\tconst children = this.children.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))\n\t\t\t\t// TODO: automatically don't draw if offscreen\n\t\t\t\tif (this.mask) {\n\t\t\t\t\tconst maskFunc = {\n\t\t\t\t\t\tintersect: drawMasked,\n\t\t\t\t\t\tsubtract: drawSubtracted,\n\t\t\t\t\t}[this.mask]\n\t\t\t\t\tif (!maskFunc) {\n\t\t\t\t\t\tthrow new Error(`Invalid mask func: \"${this.mask}\"`)\n\t\t\t\t\t}\n\t\t\t\t\tmaskFunc(() => {\n\t\t\t\t\t\tchildren.forEach((child) => child.draw())\n\t\t\t\t\t}, () => {\n\t\t\t\t\t\tthis.trigger(\"draw\")\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tthis.trigger(\"draw\")\n\t\t\t\t\tchildren.forEach((child) => child.draw())\n\t\t\t\t}\n\t\t\t\tpopTransform()\n\t\t\t\tgfx.fixed = f\n\t\t\t\tif (this.canvas) this.canvas.unbind()\n\t\t\t},\n\n\t\t\tdrawInspect(this: GameObj<PosComp | ScaleComp | RotateComp>) {\n\t\t\t\tif (this.hidden) return\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(this.pos)\n\t\t\t\tpushScale(this.scale)\n\t\t\t\tpushRotate(this.angle)\n\t\t\t\tthis.children\n\t\t\t\t\t.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))\n\t\t\t\t\t.forEach((child) => child.drawInspect())\n\t\t\t\tthis.trigger(\"drawInspect\")\n\t\t\t\tpopTransform()\n\t\t\t},\n\n\t\t\t// use a comp, or tag\n\t\t\tuse(comp: Comp | Tag) {\n\n\t\t\t\tif (!comp) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\t// tag\n\t\t\t\tif (typeof comp === \"string\") {\n\t\t\t\t\treturn this.use({\n\t\t\t\t\t\tid: comp,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tlet gc = []\n\n\t\t\t\t// clear if overwrite\n\t\t\t\tif (comp.id) {\n\t\t\t\t\tthis.unuse(comp.id)\n\t\t\t\t\tcleanups[comp.id] = []\n\t\t\t\t\tgc = cleanups[comp.id]\n\t\t\t\t\tcompStates.set(comp.id, comp)\n\t\t\t\t}\n\n\t\t\t\tfor (const k in comp) {\n\n\t\t\t\t\tif (COMP_DESC.has(k)) {\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\n\t\t\t\t\tconst prop = Object.getOwnPropertyDescriptor(comp, k)\n\n\t\t\t\t\tif (typeof prop.value === \"function\") {\n\t\t\t\t\t\tcomp[k] = comp[k].bind(this)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (prop.set) {\n\t\t\t\t\t\tObject.defineProperty(comp, k, {\n\t\t\t\t\t\t\tset: prop.set.bind(this),\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tif (prop.get) {\n\t\t\t\t\t\tObject.defineProperty(comp, k, {\n\t\t\t\t\t\t\tget: prop.get.bind(this),\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tif (COMP_EVENTS.has(k)) {\n\t\t\t\t\t\t// automatically clean up events created by components in add() stage\n\t\t\t\t\t\tconst func = k === \"add\" ? () => {\n\t\t\t\t\t\t\tonCurCompCleanup = (c) => gc.push(c)\n\t\t\t\t\t\t\tcomp[k]()\n\t\t\t\t\t\t\tonCurCompCleanup = null\n\t\t\t\t\t\t} : comp[k]\n\t\t\t\t\t\tgc.push(this.on(k, func).cancel)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (this[k] === undefined) {\n\t\t\t\t\t\t\t// assign comp fields to game obj\n\t\t\t\t\t\t\tObject.defineProperty(this, k, {\n\t\t\t\t\t\t\t\tget: () => comp[k],\n\t\t\t\t\t\t\t\tset: (val) => comp[k] = val,\n\t\t\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tgc.push(() => delete this[k])\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(`Duplicate component property: \"${k}\"`)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// check for component dependencies\n\t\t\t\tconst checkDeps = () => {\n\t\t\t\t\tif (!comp.require) return\n\t\t\t\t\tfor (const dep of comp.require) {\n\t\t\t\t\t\tif (!this.c(dep)) {\n\t\t\t\t\t\t\tthrow new Error(`Component \"${comp.id}\" requires component \"${dep}\"`)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (comp.destroy) {\n\t\t\t\t\tgc.push(comp.destroy.bind(this))\n\t\t\t\t}\n\n\t\t\t\t// manually trigger add event if object already exist\n\t\t\t\tif (this.exists()) {\n\t\t\t\t\tcheckDeps()\n\t\t\t\t\tif (comp.add) {\n\t\t\t\t\t\tonCurCompCleanup = (c) => gc.push(c)\n\t\t\t\t\t\tcomp.add.call(this)\n\t\t\t\t\t\tonCurCompCleanup = null\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (comp.require) {\n\t\t\t\t\t\tgc.push(this.on(\"add\", checkDeps).cancel)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tunuse(id: Tag) {\n\t\t\t\tif (cleanups[id]) {\n\t\t\t\t\tcleanups[id].forEach((e) => e())\n\t\t\t\t\tdelete cleanups[id]\n\t\t\t\t}\n\t\t\t\tif (compStates.has(id)) {\n\t\t\t\t\tcompStates.delete(id)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tc(id: Tag): Comp {\n\t\t\t\treturn compStates.get(id)\n\t\t\t},\n\n\t\t\tget(t: Tag | Tag[], opts: GetOpt = {}): GameObj[] {\n\t\t\t\tlet list: GameObj[] = opts.recursive\n\t\t\t\t\t? this.children.flatMap(function recurse(child) {\n\t\t\t\t\t\treturn [child, ...child.children.flatMap(recurse)]\n\t\t\t\t\t})\n\t\t\t\t\t: this.children\n\t\t\t\tlist = list.filter((child) => t ? child.is(t) : true)\n\t\t\t\tif (opts.liveUpdate) {\n\t\t\t\t\tconst isChild = (obj) => {\n\t\t\t\t\t\treturn opts.recursive\n\t\t\t\t\t\t\t? this.isAncestorOf(obj)\n\t\t\t\t\t\t\t: obj.parent === this\n\t\t\t\t\t}\n\t\t\t\t\tconst events = []\n\t\t\t\t\t// TODO: handle when object add / remove tags\n\t\t\t\t\t// TODO: clean up when obj destroyed\n\t\t\t\t\tevents.push(onAdd((obj) => {\n\t\t\t\t\t\tif (isChild(obj) && obj.is(t)) {\n\t\t\t\t\t\t\tlist.push(obj)\n\t\t\t\t\t\t}\n\t\t\t\t\t}))\n\t\t\t\t\tevents.push(onDestroy((obj) => {\n\t\t\t\t\t\tif (isChild(obj) && obj.is(t)) {\n\t\t\t\t\t\t\tconst idx = list.findIndex((o) => o.id === obj.id)\n\t\t\t\t\t\t\tif (idx !== -1) {\n\t\t\t\t\t\t\t\tlist.splice(idx, 1)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}))\n\t\t\t\t\tthis.onDestroy(() => {\n\t\t\t\t\t\tfor (const ev of events) {\n\t\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\treturn list\n\t\t\t},\n\n\t\t\tisAncestorOf(obj: GameObj) {\n\t\t\t\tif (!obj.parent) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\treturn obj.parent === this || this.isAncestorOf(obj.parent)\n\t\t\t},\n\n\t\t\texists(): boolean {\n\t\t\t\treturn game.root.isAncestorOf(this)\n\t\t\t},\n\n\t\t\tis(tag: Tag | Tag[]): boolean {\n\t\t\t\tif (tag === \"*\") {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(tag)) {\n\t\t\t\t\tfor (const t of tag) {\n\t\t\t\t\t\tif (!this.c(t)) {\n\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn true\n\t\t\t\t} else {\n\t\t\t\t\treturn this.c(tag) != null\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ton(name: string, action: (...args) => void): EventController {\n\t\t\t\tconst ctrl = events.on(name, action.bind(this))\n\t\t\t\tif (onCurCompCleanup) {\n\t\t\t\t\tonCurCompCleanup(() => ctrl.cancel())\n\t\t\t\t}\n\t\t\t\treturn ctrl\n\t\t\t},\n\n\t\t\ttrigger(name: string, ...args): void {\n\t\t\t\tevents.trigger(name, ...args)\n\t\t\t\tgame.objEvents.trigger(name, this, ...args)\n\t\t\t},\n\n\t\t\tdestroy() {\n\t\t\t\tif (this.parent) {\n\t\t\t\t\tthis.parent.remove(this)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\tconst info = {}\n\t\t\t\tfor (const [tag, comp] of compStates) {\n\t\t\t\t\tinfo[tag] = comp.inspect ? comp.inspect() : null\n\t\t\t\t}\n\t\t\t\treturn info\n\t\t\t},\n\n\t\t\tonAdd(cb: () => void): EventController {\n\t\t\t\treturn this.on(\"add\", cb)\n\t\t\t},\n\n\t\t\tonUpdate(cb: () => void): EventController {\n\t\t\t\treturn this.on(\"update\", cb)\n\t\t\t},\n\n\t\t\tonDraw(cb: () => void): EventController {\n\t\t\t\treturn this.on(\"draw\", cb)\n\t\t\t},\n\n\t\t\tonDestroy(action: () => void): EventController {\n\t\t\t\treturn this.on(\"destroy\", action)\n\t\t\t},\n\n\t\t\tclearEvents() {\n\t\t\t\tevents.clear()\n\t\t\t},\n\n\t\t}\n\n\t\t// TODO: type with as const\n\t\tconst evs = [\n\t\t\t\"onKeyPress\",\n\t\t\t\"onKeyPressRepeat\",\n\t\t\t\"onKeyDown\",\n\t\t\t\"onKeyRelease\",\n\t\t\t\"onMousePress\",\n\t\t\t\"onMouseDown\",\n\t\t\t\"onMouseRelease\",\n\t\t\t\"onMouseMove\",\n\t\t\t\"onCharInput\",\n\t\t\t\"onMouseMove\",\n\t\t\t\"onTouchStart\",\n\t\t\t\"onTouchMove\",\n\t\t\t\"onTouchEnd\",\n\t\t\t\"onScroll\",\n\t\t\t\"onGamepadButtonPress\",\n\t\t\t\"onGamepadButtonDown\",\n\t\t\t\"onGamepadButtonRelease\",\n\t\t\t\"onGamepadStick\",\n\t\t]\n\n\t\tfor (const e of evs) {\n\t\t\tobj[e] = (...args) => {\n\t\t\t\tconst ev = app[e](...args)\n\t\t\t\tinputEvents.push(ev)\n\t\t\t\t// TODO: what if the game object is destroy and re-added\n\t\t\t\tobj.onDestroy(() => ev.cancel())\n\t\t\t\treturn ev\n\t\t\t}\n\t\t}\n\n\t\tfor (const comp of comps) {\n\t\t\tobj.use(comp)\n\t\t}\n\n\t\treturn obj as unknown as GameObj<T>\n\n\t}\n\n\t// add an event to a tag\n\tfunction on(event: string, tag: Tag, cb: (obj: GameObj, ...args) => void): EventController {\n\t\tif (!game.objEvents[event]) {\n\t\t\tgame.objEvents[event] = new Registry()\n\t\t}\n\t\treturn game.objEvents.on(event, (obj, ...args) => {\n\t\t\tif (obj.is(tag)) {\n\t\t\t\tcb(obj, ...args)\n\t\t\t}\n\t\t})\n\t}\n\n\tconst onUpdate = overload2((action: () => void): EventController => {\n\t\tconst obj = add([{ update: action }])\n\t\treturn {\n\t\t\tget paused() {\n\t\t\t\treturn obj.paused\n\t\t\t},\n\t\t\tset paused(p) {\n\t\t\t\tobj.paused = p\n\t\t\t},\n\t\t\tcancel: () => obj.destroy(),\n\t\t}\n\t}, (tag: Tag, action: (obj: GameObj) => void) => {\n\t\treturn on(\"update\", tag, action)\n\t})\n\n\tconst onDraw = overload2((action: () => void): EventController => {\n\t\tconst obj = add([{ draw: action }])\n\t\treturn {\n\t\t\tget paused() {\n\t\t\t\treturn obj.hidden\n\t\t\t},\n\t\t\tset paused(p) {\n\t\t\t\tobj.hidden = p\n\t\t\t},\n\t\t\tcancel: () => obj.destroy(),\n\t\t}\n\t}, (tag: Tag, action: (obj: GameObj) => void) => {\n\t\treturn on(\"draw\", tag, action)\n\t})\n\n\tconst onAdd = overload2((action: (obj: GameObj) => void) => {\n\t\treturn game.events.on(\"add\", action)\n\t}, (tag: Tag, action: (obj: GameObj) => void) => {\n\t\treturn on(\"add\", tag, action)\n\t})\n\n\tconst onDestroy = overload2((action: (obj: GameObj) => void) => {\n\t\treturn game.events.on(\"destroy\", action)\n\t}, (tag: Tag, action: (obj: GameObj) => void) => {\n\t\treturn on(\"destroy\", tag, action)\n\t})\n\n\t// add an event that runs with objs with t1 collides with objs with t2\n\tfunction onCollide(\n\t\tt1: Tag,\n\t\tt2: Tag,\n\t\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n\t): EventController {\n\t\treturn on(\"collide\", t1, (a, b, col) => b.is(t2) && f(a, b, col))\n\t}\n\n\tfunction onCollideUpdate(\n\t\tt1: Tag,\n\t\tt2: Tag,\n\t\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n\t): EventController {\n\t\treturn on(\"collideUpdate\", t1, (a, b, col) => b.is(t2) && f(a, b, col))\n\t}\n\n\tfunction onCollideEnd(\n\t\tt1: Tag,\n\t\tt2: Tag,\n\t\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n\t): EventController {\n\t\treturn on(\"collideEnd\", t1, (a, b, col) => b.is(t2) && f(a, b, col))\n\t}\n\n\tfunction forAllCurrentAndFuture(t: Tag, action: (obj: GameObj) => void) {\n\t\tget(t, { recursive: true }).forEach(action)\n\t\tonAdd(t, action)\n\t}\n\n\tconst onClick = overload2((action: () => void) => {\n\t\treturn app.onMousePress(action)\n\t}, (tag: Tag, action: (obj: GameObj) => void) => {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(tag, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new Error(\"onClick() requires the object to have area() component\")\n\t\t\tevents.push(obj.onClick(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t})\n\n\t// add an event that runs once when objs with tag t is hovered\n\tfunction onHover(t: Tag, action: (obj: GameObj) => void): EventController {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(t, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new Error(\"onHover() requires the object to have area() component\")\n\t\t\tevents.push(obj.onHover(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t}\n\n\t// add an event that runs once when objs with tag t is hovered\n\tfunction onHoverUpdate(t: Tag, action: (obj: GameObj) => void): EventController {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(t, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new Error(\"onHoverUpdate() requires the object to have area() component\")\n\t\t\tevents.push(obj.onHoverUpdate(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t}\n\n\t// add an event that runs once when objs with tag t is unhovered\n\tfunction onHoverEnd(t: Tag, action: (obj: GameObj) => void): EventController {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(t, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new Error(\"onHoverEnd() requires the object to have area() component\")\n\t\t\tevents.push(obj.onHoverEnd(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t}\n\n\tfunction setGravity(g: number) {\n\t\tgame.gravity = g\n\t}\n\n\tfunction getGravity() {\n\t\treturn game.gravity\n\t}\n\n\tfunction setBackground(...args) {\n\t\tif (args.length === 1 || args.length === 2) {\n\t\t\tgfx.bgColor = rgb(args[0])\n\t\t\tif (args[1]) gfx.bgAlpha = args[1]\n\t\t} else if (args.length === 3 || args.length === 4) {\n\t\t\tgfx.bgColor = rgb(args[0], args[1], args[2])\n\t\t\tif (args[3]) gfx.bgAlpha = args[3]\n\t\t}\n\t\tgl.clearColor(\n\t\t\tgfx.bgColor.r / 255,\n\t\t\tgfx.bgColor.g / 255,\n\t\t\tgfx.bgColor.b / 255,\n\t\t\tgfx.bgAlpha,\n\t\t)\n\t}\n\n\tfunction getBackground() {\n\t\treturn gfx.bgColor.clone()\n\t}\n\n\t// TODO: manage global velocity here?\n\tfunction pos(...args: Vec2Args): PosComp {\n\n\t\treturn {\n\n\t\t\tid: \"pos\",\n\t\t\tpos: vec2(...args),\n\n\t\t\tmoveBy(...args: Vec2Args) {\n\t\t\t\tthis.pos = this.pos.add(vec2(...args))\n\t\t\t},\n\n\t\t\t// move with velocity (pixels per second)\n\t\t\tmove(...args: Vec2Args) {\n\t\t\t\tthis.moveBy(vec2(...args).scale(dt()))\n\t\t\t},\n\n\t\t\t// move to a destination, with optional speed\n\t\t\tmoveTo(...args) {\n\t\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\t\treturn this.moveTo(vec2(args[0], args[1]), args[2])\n\t\t\t\t}\n\t\t\t\tconst dest = args[0]\n\t\t\t\tconst speed = args[1]\n\t\t\t\tif (speed === undefined) {\n\t\t\t\t\tthis.pos = vec2(dest)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst diff = dest.sub(this.pos)\n\t\t\t\tif (diff.len() <= speed * dt()) {\n\t\t\t\t\tthis.pos = vec2(dest)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tthis.move(diff.unit().scale(speed))\n\t\t\t},\n\n\t\t\tworldPos(this: GameObj<PosComp>): Vec2 {\n\t\t\t\treturn this.parent\n\t\t\t\t\t? this.parent.transform.multVec2(this.pos)\n\t\t\t\t\t: this.pos\n\t\t\t},\n\n\t\t\t// get the screen position (transformed by camera)\n\t\t\tscreenPos(this: GameObj<PosComp | FixedComp>): Vec2 {\n\t\t\t\tconst pos = this.worldPos()\n\t\t\t\treturn isFixed(this)\n\t\t\t\t\t? pos\n\t\t\t\t\t: toScreen(pos)\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\treturn `(${Math.round(this.pos.x)}, ${Math.round(this.pos.y)})`\n\t\t\t},\n\n\t\t\tdrawInspect() {\n\t\t\t\tdrawCircle({\n\t\t\t\t\tcolor: rgb(255, 0, 0),\n\t\t\t\t\tradius: 4 / getViewportScale(),\n\t\t\t\t})\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\t// TODO: allow single number assignment\n\tfunction scale(...args: Vec2Args): ScaleComp {\n\t\tif (args.length === 0) {\n\t\t\treturn scale(1)\n\t\t}\n\t\treturn {\n\t\t\tid: \"scale\",\n\t\t\tscale: vec2(...args),\n\t\t\tscaleTo(...args: Vec2Args) {\n\t\t\t\tthis.scale = vec2(...args)\n\t\t\t},\n\t\t\tscaleBy(...args: Vec2Args) {\n\t\t\t\tthis.scale.scale(vec2(...args))\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `(${toFixed(this.scale.x, 2)}, ${toFixed(this.scale.y, 2)})`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction rotate(r: number): RotateComp {\n\t\treturn {\n\t\t\tid: \"rotate\",\n\t\t\tangle: r ?? 0,\n\t\t\trotateBy(angle: number) {\n\t\t\t\tthis.angle += angle\n\t\t\t},\n\t\t\trotateTo(angle: number) {\n\t\t\t\tthis.angle = angle\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.round(this.angle)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction color(...args): ColorComp {\n\t\treturn {\n\t\t\tid: \"color\",\n\t\t\tcolor: rgb(...args),\n\t\t\tinspect() {\n\t\t\t\treturn this.color.toString()\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction toFixed(n: number, f: number) {\n\t\treturn Number(n.toFixed(f))\n\t}\n\n\t// TODO: fadeIn here?\n\tfunction opacity(a: number): OpacityComp {\n\t\treturn {\n\t\t\tid: \"opacity\",\n\t\t\topacity: a ?? 1,\n\t\t\tinspect() {\n\t\t\t\treturn `${toFixed(this.opacity, 1)}`\n\t\t\t},\n\t\t\tfadeOut(time = 1, easeFunc = easings.linear): TweenController {\n\t\t\t\treturn tween(this.opacity, 0, time, (a) => this.opacity = a, easeFunc)\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction anchor(o: Anchor | Vec2): AnchorComp {\n\t\tif (!o) {\n\t\t\tthrow new Error(\"Please define an anchor\")\n\t\t}\n\t\treturn {\n\t\t\tid: \"anchor\",\n\t\t\tanchor: o,\n\t\t\tinspect() {\n\t\t\t\tif (typeof this.anchor === \"string\") {\n\t\t\t\t\treturn this.anchor\n\t\t\t\t} else {\n\t\t\t\t\treturn this.anchor.toString()\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction z(z: number): ZComp {\n\t\treturn {\n\t\t\tid: \"z\",\n\t\t\tz: z,\n\t\t\tinspect() {\n\t\t\t\treturn `${this.z}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction follow(obj: GameObj, offset?: Vec2): FollowComp {\n\t\treturn {\n\t\t\tid: \"follow\",\n\t\t\trequire: [ \"pos\" ],\n\t\t\tfollow: {\n\t\t\t\tobj: obj,\n\t\t\t\toffset: offset ?? vec2(0),\n\t\t\t},\n\t\t\tadd(this: GameObj<FollowComp | PosComp>) {\n\t\t\t\tif (obj.exists()) {\n\t\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset)\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate(this: GameObj<FollowComp | PosComp>) {\n\t\t\t\tif (obj.exists()) {\n\t\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset)\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction move(dir: number | Vec2, speed: number): EmptyComp {\n\t\tconst d = typeof dir === \"number\" ? Vec2.fromAngle(dir) : dir.unit()\n\t\treturn {\n\t\t\tid: \"move\",\n\t\t\trequire: [ \"pos\" ],\n\t\t\tupdate(this: GameObj<PosComp>) {\n\t\t\t\tthis.move(d.scale(speed))\n\t\t\t},\n\t\t}\n\t}\n\n\tconst DEF_OFFSCREEN_DIS = 200\n\n\tfunction offscreen(opt: OffScreenCompOpt = {}): OffScreenComp {\n\t\tconst distance = opt.distance ?? DEF_OFFSCREEN_DIS\n\t\tlet isOut = false\n\t\treturn {\n\t\t\tid: \"offscreen\",\n\t\t\trequire: [ \"pos\" ],\n\t\t\tisOffScreen(this: GameObj<PosComp>): boolean {\n\t\t\t\tconst pos = this.screenPos()\n\t\t\t\tconst screenRect = new Rect(vec2(0), width(), height())\n\t\t\t\treturn !testRectPoint(screenRect, pos)\n\t\t\t\t\t&& screenRect.sdistToPoint(pos) > distance * distance\n\t\t\t},\n\t\t\tonExitScreen(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"exitView\", action)\n\t\t\t},\n\t\t\tonEnterScreen(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"enterView\", action)\n\t\t\t},\n\t\t\tupdate(this: GameObj) {\n\t\t\t\tif (this.isOffScreen()) {\n\t\t\t\t\tif (!isOut) {\n\t\t\t\t\t\tthis.trigger(\"exitView\")\n\t\t\t\t\t\tisOut = true\n\t\t\t\t\t}\n\t\t\t\t\tif (opt.hide) this.hidden = true\n\t\t\t\t\tif (opt.pause) this.paused = true\n\t\t\t\t\tif (opt.destroy) this.destroy()\n\t\t\t\t} else {\n\t\t\t\t\tif (isOut) {\n\t\t\t\t\t\tthis.trigger(\"enterView\")\n\t\t\t\t\t\tisOut = false\n\t\t\t\t\t}\n\t\t\t\t\tif (opt.hide) this.hidden = false\n\t\t\t\t\tif (opt.pause) this.paused = false\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction isFixed(obj: GameObj) {\n\t\tif (obj.fixed) return true\n\t\treturn obj.parent ? isFixed(obj.parent) : false\n\t}\n\n\tfunction area(opt: AreaCompOpt = {}): AreaComp {\n\n\t\tconst colliding = {}\n\t\tconst collidingThisFrame = new Set()\n\n\t\treturn {\n\n\t\t\tid: \"area\",\n\t\t\tcollisionIgnore: opt.collisionIgnore ?? [],\n\n\t\t\tadd(this: GameObj<AreaComp>) {\n\n\t\t\t\tif (this.area.cursor) {\n\t\t\t\t\tthis.onHover(() => app.setCursor(this.area.cursor))\n\t\t\t\t}\n\n\t\t\t\tthis.onCollideUpdate((obj, col) => {\n\t\t\t\t\tif (!colliding[obj.id]) {\n\t\t\t\t\t\tthis.trigger(\"collide\", obj, col)\n\t\t\t\t\t}\n\t\t\t\t\tcolliding[obj.id] = col\n\t\t\t\t\tcollidingThisFrame.add(obj.id)\n\t\t\t\t})\n\n\t\t\t},\n\n\t\t\tupdate(this: GameObj<AreaComp>) {\n\t\t\t\tfor (const id in colliding) {\n\t\t\t\t\tif (!collidingThisFrame.has(Number(id))) {\n\t\t\t\t\t\tthis.trigger(\"collideEnd\", colliding[id].target)\n\t\t\t\t\t\tdelete colliding[id]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcollidingThisFrame.clear()\n\t\t\t},\n\n\t\t\tdrawInspect(this: GameObj<AreaComp | AnchorComp | FixedComp>) {\n\n\t\t\t\tconst a = this.localArea()\n\n\t\t\t\tpushTransform()\n\t\t\t\tpushScale(this.area.scale)\n\t\t\t\tpushTranslate(this.area.offset)\n\n\t\t\t\tconst opts = {\n\t\t\t\t\toutline: {\n\t\t\t\t\t\twidth: 4 / getViewportScale(),\n\t\t\t\t\t\tcolor: rgb(0, 0, 255),\n\t\t\t\t\t},\n\t\t\t\t\tanchor: this.anchor,\n\t\t\t\t\tfill: false,\n\t\t\t\t\tfixed: isFixed(this),\n\t\t\t\t}\n\n\t\t\t\tif (a instanceof Rect) {\n\t\t\t\t\tdrawRect({\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tpos: a.pos,\n\t\t\t\t\t\twidth: a.width,\n\t\t\t\t\t\theight: a.height,\n\t\t\t\t\t})\n\t\t\t\t} else if (a instanceof Polygon) {\n\t\t\t\t\tdrawPolygon({\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tpts: a.pts,\n\t\t\t\t\t})\n\t\t\t\t} else if (a instanceof Circle) {\n\t\t\t\t\tdrawCircle({\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tpos: a.center,\n\t\t\t\t\t\tradius: a.radius,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tpopTransform()\n\n\t\t\t},\n\n\t\t\tarea: {\n\t\t\t\tshape: opt.shape ?? null,\n\t\t\t\tscale: opt.scale ? vec2(opt.scale) : vec2(1),\n\t\t\t\toffset: opt.offset ?? vec2(0),\n\t\t\t\tcursor: opt.cursor ?? null,\n\t\t\t},\n\n\t\t\tisClicked(): boolean {\n\t\t\t\treturn app.isMousePressed() && this.isHovering()\n\t\t\t},\n\n\t\t\tisHovering(this: GameObj) {\n\t\t\t\tconst mpos = isFixed(this) ? mousePos() : toWorld(mousePos())\n\t\t\t\treturn this.hasPoint(mpos)\n\t\t\t},\n\n\t\t\tcheckCollision(this: GameObj, other: GameObj<AreaComp>) {\n\t\t\t\treturn colliding[other.id] ?? null\n\t\t\t},\n\n\t\t\tgetCollisions() {\n\t\t\t\treturn Object.values(colliding)\n\t\t\t},\n\n\t\t\t// TODO: perform check instead of use cache\n\t\t\tisColliding(other: GameObj<AreaComp>) {\n\t\t\t\treturn Boolean(colliding[other.id])\n\t\t\t},\n\n\t\t\tisOverlapping(other) {\n\t\t\t\tconst col = colliding[other.id]\n\t\t\t\treturn col && col.hasOverlap()\n\t\t\t},\n\n\t\t\tonClick(this: GameObj<AreaComp>, f: () => void): EventController {\n\t\t\t\tconst e = app.onMousePress(\"left\", () => {\n\t\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\t\tf()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tthis.onDestroy(() => e.cancel())\n\t\t\t\treturn e\n\t\t\t},\n\n\t\t\tonHover(this: GameObj, action: () => void): EventController {\n\t\t\t\tlet hovering = false\n\t\t\t\treturn this.onUpdate(() => {\n\t\t\t\t\tif (!hovering) {\n\t\t\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\t\t\thovering = true\n\t\t\t\t\t\t\taction()\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\thovering = this.isHovering()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonHoverUpdate(this: GameObj, onHover: () => void): EventController {\n\t\t\t\treturn this.onUpdate(() => {\n\t\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\t\tonHover()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonHoverEnd(this: GameObj, action: () => void): EventController {\n\t\t\t\tlet hovering = false\n\t\t\t\treturn this.onUpdate(() => {\n\t\t\t\t\tif (hovering) {\n\t\t\t\t\t\tif (!this.isHovering()) {\n\t\t\t\t\t\t\thovering = false\n\t\t\t\t\t\t\taction()\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\thovering = this.isHovering()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonCollide(\n\t\t\t\tthis: GameObj,\n\t\t\t\ttag: Tag | ((obj: GameObj, col?: Collision) => void),\n\t\t\t\tcb?: (obj: GameObj, col?: Collision) => void,\n\t\t\t): EventController {\n\t\t\t\tif (typeof tag === \"function\" && cb === undefined) {\n\t\t\t\t\treturn this.on(\"collide\", tag)\n\t\t\t\t} else if (typeof tag === \"string\") {\n\t\t\t\t\treturn this.onCollide((obj, col) => {\n\t\t\t\t\t\tif (obj.is(tag)) {\n\t\t\t\t\t\t\tcb(obj, col)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonCollideUpdate(\n\t\t\t\tthis: GameObj<AreaComp>,\n\t\t\t\ttag: Tag | ((obj: GameObj, col?: Collision) => void),\n\t\t\t\tcb?: (obj: GameObj, col?: Collision) => void,\n\t\t\t): EventController {\n\t\t\t\tif (typeof tag === \"function\" && cb === undefined) {\n\t\t\t\t\treturn this.on(\"collideUpdate\", tag)\n\t\t\t\t} else if (typeof tag === \"string\") {\n\t\t\t\t\treturn this.on(\"collideUpdate\", (obj, col) => obj.is(tag) && cb(obj, col))\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonCollideEnd(\n\t\t\t\tthis: GameObj<AreaComp>,\n\t\t\t\ttag: Tag | ((obj: GameObj) => void),\n\t\t\t\tcb?: (obj: GameObj) => void,\n\t\t\t): EventController {\n\t\t\t\tif (typeof tag === \"function\" && cb === undefined) {\n\t\t\t\t\treturn this.on(\"collideEnd\", tag)\n\t\t\t\t} else if (typeof tag === \"string\") {\n\t\t\t\t\treturn this.on(\"collideEnd\", (obj) => obj.is(tag) && cb(obj))\n\t\t\t\t}\n\t\t\t},\n\n\t\t\thasPoint(pt: Vec2): boolean {\n\t\t\t\t// TODO: convert to pt to local space instead\n\t\t\t\treturn testPolygonPoint(this.worldArea(), pt)\n\t\t\t},\n\n\t\t\t// push an obj out of another if they're overlapped\n\t\t\tresolveCollision(this: GameObj<AreaComp | PosComp>, obj: GameObj<AreaComp>) {\n\t\t\t\tconst col = this.checkCollision(obj)\n\t\t\t\tif (col && !col.resolved) {\n\t\t\t\t\tthis.pos = this.pos.add(col.displacement)\n\t\t\t\t\tcol.resolved = true\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tlocalArea(this: GameObj<AreaComp | { renderArea(): Shape }>): Shape {\n\t\t\t\treturn this.area.shape\n\t\t\t\t\t? this.area.shape\n\t\t\t\t\t: this.renderArea()\n\t\t\t},\n\n\t\t\t// TODO: cache\n\t\t\tworldArea(this: GameObj<AreaComp | AnchorComp>): Polygon {\n\n\t\t\t\tconst localArea = this.localArea()\n\n\t\t\t\tif (!(localArea instanceof Polygon || localArea instanceof Rect)) {\n\t\t\t\t\tthrow new Error(\"Only support polygon and rect shapes for now\")\n\t\t\t\t}\n\n\t\t\t\tconst transform = this.transform\n\t\t\t\t\t.clone()\n\t\t\t\t\t.scale(vec2(this.area.scale ?? 1))\n\t\t\t\t\t.translate(this.area.offset)\n\n\t\t\t\tif (localArea instanceof Rect) {\n\t\t\t\t\tconst offset = anchorPt(this.anchor || DEF_ANCHOR)\n\t\t\t\t\t\t.add(1, 1)\n\t\t\t\t\t\t.scale(-0.5)\n\t\t\t\t\t\t.scale(localArea.width, localArea.height)\n\t\t\t\t\ttransform.translate(offset)\n\t\t\t\t}\n\n\t\t\t\treturn localArea.transform(transform) as Polygon\n\n\t\t\t},\n\n\t\t\tscreenArea(this: GameObj<AreaComp | FixedComp>): Polygon {\n\t\t\t\tconst area = this.worldArea()\n\t\t\t\tif (isFixed(this)) {\n\t\t\t\t\treturn area\n\t\t\t\t} else {\n\t\t\t\t\treturn area.transform(game.cam.transform)\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction getRenderProps(obj: GameObj<any>) {\n\t\treturn {\n\t\t\tcolor: obj.color,\n\t\t\topacity: obj.opacity,\n\t\t\tanchor: obj.anchor,\n\t\t\toutline: obj.outline,\n\t\t\tshader: obj.shader,\n\t\t\tuniform: obj.uniform,\n\t\t}\n\t}\n\n\t// TODO: clean\n\tfunction sprite(\n\t\tsrc: string | SpriteData | Asset<SpriteData>,\n\t\topt: SpriteCompOpt = {},\n\t): SpriteComp {\n\n\t\tlet spriteData: SpriteData | null = null\n\t\tlet curAnim: SpriteCurAnim | null = null\n\t\t// 1  - from small index to large index\n\t\t// -1 - reverse\n\t\tlet curAnimDir: -1 | 1 | null = null\n\t\tconst spriteLoadedEvent = new Event<[SpriteData]>()\n\n\t\tif (!src) {\n\t\t\tthrow new Error(\"Please pass the resource name or data to sprite()\")\n\t\t}\n\n\t\tconst calcTexScale = (tex: Texture, q: Quad, w?: number, h?: number): Vec2 => {\n\t\t\tconst scale = vec2(1, 1)\n\t\t\tif (w && h) {\n\t\t\t\tscale.x = w / (tex.width * q.w)\n\t\t\t\tscale.y = h / (tex.height * q.h)\n\t\t\t} else if (w) {\n\t\t\t\tscale.x = w / (tex.width * q.w)\n\t\t\t\tscale.y = scale.x\n\t\t\t} else if (h) {\n\t\t\t\tscale.y = h / (tex.height * q.h)\n\t\t\t\tscale.x = scale.y\n\t\t\t}\n\t\t\treturn scale\n\t\t}\n\n\t\treturn {\n\n\t\t\tid: \"sprite\",\n\t\t\t// TODO: allow update\n\t\t\twidth: 0,\n\t\t\theight: 0,\n\t\t\tframe: opt.frame || 0,\n\t\t\tquad: opt.quad || new Quad(0, 0, 1, 1),\n\t\t\tanimSpeed: opt.animSpeed ?? 1,\n\t\t\tflipX: opt.flipX ?? false,\n\t\t\tflipY: opt.flipY ?? false,\n\n\t\t\tdraw(this: GameObj<SpriteComp>) {\n\n\t\t\t\tif (!spriteData) return\n\n\t\t\t\tconst q = spriteData.frames[this.frame ?? 0]\n\n\t\t\t\tif (!q) {\n\t\t\t\t\tthrow new Error(`Frame not found: ${this.frame ?? 0}`)\n\t\t\t\t}\n\n\t\t\t\tif (spriteData.slice9) {\n\t\t\t\t\t// TODO: tile\n\t\t\t\t\t// TODO: use scale or width / height, or both?\n\t\t\t\t\tconst { left, right, top, bottom } = spriteData.slice9\n\t\t\t\t\tconst tw = spriteData.tex.width * q.w\n\t\t\t\t\tconst th = spriteData.tex.height * q.h\n\t\t\t\t\tconst iw = this.width - left - right\n\t\t\t\t\tconst ih = this.height - top - bottom\n\t\t\t\t\tconst w1 = left / tw\n\t\t\t\t\tconst w3 = right / tw\n\t\t\t\t\tconst w2 = 1 - w1 - w3\n\t\t\t\t\tconst h1 = top / th\n\t\t\t\t\tconst h3 = bottom / th\n\t\t\t\t\tconst h2 = 1 - h1 - h3\n\t\t\t\t\tconst quads = [\n\t\t\t\t\t\t// uv\n\t\t\t\t\t\tquad(0,       0,       w1, h1),\n\t\t\t\t\t\tquad(w1,      0,       w2, h1),\n\t\t\t\t\t\tquad(w1 + w2, 0,       w3, h1),\n\t\t\t\t\t\tquad(0,       h1,      w1, h2),\n\t\t\t\t\t\tquad(w1,      h1,      w2, h2),\n\t\t\t\t\t\tquad(w1 + w2, h1,      w3, h2),\n\t\t\t\t\t\tquad(0,       h1 + h2, w1, h3),\n\t\t\t\t\t\tquad(w1,      h1 + h2, w2, h3),\n\t\t\t\t\t\tquad(w1 + w2, h1 + h2, w3, h3),\n\t\t\t\t\t\t// transform\n\t\t\t\t\t\tquad(0,         0,        left,  top),\n\t\t\t\t\t\tquad(left,      0,        iw,    top),\n\t\t\t\t\t\tquad(left + iw, 0,        right, top),\n\t\t\t\t\t\tquad(0,         top,      left,  ih),\n\t\t\t\t\t\tquad(left,      top,      iw,    ih),\n\t\t\t\t\t\tquad(left + iw, top,      right, ih),\n\t\t\t\t\t\tquad(0,         top + ih, left,  bottom),\n\t\t\t\t\t\tquad(left,      top + ih, iw,    bottom),\n\t\t\t\t\t\tquad(left + iw, top + ih, right, bottom),\n\t\t\t\t\t]\n\t\t\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\t\t\tconst uv = quads[i]\n\t\t\t\t\t\tconst transform = quads[i + 9]\n\t\t\t\t\t\tdrawTexture(Object.assign(getRenderProps(this), {\n\t\t\t\t\t\t\tpos: transform.pos(),\n\t\t\t\t\t\t\ttex: spriteData.tex,\n\t\t\t\t\t\t\tquad: q.scale(uv),\n\t\t\t\t\t\t\tflipX: this.flipX,\n\t\t\t\t\t\t\tflipY: this.flipY,\n\t\t\t\t\t\t\ttiled: opt.tiled,\n\t\t\t\t\t\t\twidth: transform.w,\n\t\t\t\t\t\t\theight: transform.h,\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tdrawTexture(Object.assign(getRenderProps(this), {\n\t\t\t\t\t\ttex: spriteData.tex,\n\t\t\t\t\t\tquad: q.scale(this.quad ?? new Quad(0, 0, 1, 1)),\n\t\t\t\t\t\tflipX: this.flipX,\n\t\t\t\t\t\tflipY: this.flipY,\n\t\t\t\t\t\ttiled: opt.tiled,\n\t\t\t\t\t\twidth: this.width,\n\t\t\t\t\t\theight: this.height,\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tadd(this: GameObj<SpriteComp>) {\n\n\t\t\t\tconst setSpriteData = (spr) => {\n\n\t\t\t\t\tlet q = spr.frames[0].clone()\n\n\t\t\t\t\tif (opt.quad) {\n\t\t\t\t\t\tq = q.scale(opt.quad)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst scale = calcTexScale(spr.tex, q, opt.width, opt.height)\n\n\t\t\t\t\tthis.width = spr.tex.width * q.w * scale.x\n\t\t\t\t\tthis.height = spr.tex.height * q.h * scale.y\n\n\t\t\t\t\tif (opt.anim) {\n\t\t\t\t\t\tthis.play(opt.anim)\n\t\t\t\t\t}\n\n\t\t\t\t\tspriteData = spr\n\t\t\t\t\tspriteLoadedEvent.trigger(spriteData)\n\n\t\t\t\t}\n\n\t\t\t\tconst spr = resolveSprite(src)\n\n\t\t\t\tif (spr) {\n\t\t\t\t\tspr.onLoad(setSpriteData)\n\t\t\t\t} else {\n\t\t\t\t\tonLoad(() => setSpriteData(resolveSprite(src).data))\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tupdate(this: GameObj<SpriteComp>) {\n\n\t\t\t\tif (!curAnim) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst anim = spriteData.anims[curAnim.name]\n\n\t\t\t\tif (typeof anim === \"number\") {\n\t\t\t\t\tthis.frame = anim\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (anim.speed === 0) {\n\t\t\t\t\tthrow new Error(\"Sprite anim speed cannot be 0\")\n\t\t\t\t}\n\n\t\t\t\tcurAnim.timer += dt() * this.animSpeed\n\n\t\t\t\tif (curAnim.timer >= (1 / curAnim.speed)) {\n\n\t\t\t\t\tcurAnim.timer = 0\n\t\t\t\t\tthis.frame += curAnimDir\n\n\t\t\t\t\tif (this.frame < Math.min(anim.from, anim.to) ||\n\t\t\t\t\t\tthis.frame > Math.max(anim.from, anim.to)) {\n\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\tif (curAnim.pingpong) {\n\t\t\t\t\t\t\t\tthis.frame -= curAnimDir\n\t\t\t\t\t\t\t\tcurAnimDir *= -1\n\t\t\t\t\t\t\t\tthis.frame += curAnimDir\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.frame = anim.from\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.frame = anim.to\n\t\t\t\t\t\t\tcurAnim.onEnd()\n\t\t\t\t\t\t\tthis.stop()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tplay(this: GameObj<SpriteComp>, name: string, opt: SpriteAnimPlayOpt = {}) {\n\n\t\t\t\tif (!spriteData) {\n\t\t\t\t\tspriteLoadedEvent.add(() => this.play(name, opt))\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst anim = spriteData.anims[name]\n\n\t\t\t\tif (anim === undefined) {\n\t\t\t\t\tthrow new Error(`Anim not found: ${name}`)\n\t\t\t\t}\n\n\t\t\t\tif (curAnim) {\n\t\t\t\t\tthis.stop()\n\t\t\t\t}\n\n\t\t\t\tcurAnim = typeof anim === \"number\"\n\t\t\t\t\t? {\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\ttimer: 0,\n\t\t\t\t\t\tloop: false,\n\t\t\t\t\t\tpingpong: false,\n\t\t\t\t\t\tspeed: 0,\n\t\t\t\t\t\tonEnd: () => {},\n\t\t\t\t\t}\n\t\t\t\t\t: {\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\ttimer: 0,\n\t\t\t\t\t\tloop: opt.loop ?? anim.loop ?? false,\n\t\t\t\t\t\tpingpong: opt.pingpong ?? anim.pingpong ?? false,\n\t\t\t\t\t\tspeed: opt.speed ?? anim.speed ?? 10,\n\t\t\t\t\t\tonEnd: opt.onEnd ?? (() => {}),\n\t\t\t\t\t}\n\n\t\t\t\tcurAnimDir = typeof anim === \"number\"\n\t\t\t\t\t? null\n\t\t\t\t\t: anim.from < anim.to ? 1 : -1\n\n\t\t\t\tthis.frame = typeof anim === \"number\"\n\t\t\t\t\t? anim\n\t\t\t\t\t: anim.from\n\n\t\t\t\tthis.trigger(\"animStart\", name)\n\n\t\t\t},\n\n\t\t\tstop(this: GameObj<SpriteComp>) {\n\t\t\t\tif (!curAnim) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst prevAnim = curAnim.name\n\t\t\t\tcurAnim = null\n\t\t\t\tthis.trigger(\"animEnd\", prevAnim)\n\t\t\t},\n\n\t\t\tnumFrames() {\n\t\t\t\treturn spriteData?.frames.length ?? 0\n\t\t\t},\n\n\t\t\tcurAnim() {\n\t\t\t\treturn curAnim?.name\n\t\t\t},\n\n\t\t\tonAnimEnd(\n\t\t\t\tthis: GameObj<SpriteComp>,\n\t\t\t\taction: (name: string) => void,\n\t\t\t): EventController {\n\t\t\t\treturn this.on(\"animEnd\", action)\n\t\t\t},\n\n\t\t\tonAnimStart(\n\t\t\t\tthis: GameObj<SpriteComp>,\n\t\t\t\taction: (name: string) => void,\n\t\t\t): EventController {\n\t\t\t\treturn this.on(\"animStart\", action)\n\t\t\t},\n\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\tif (typeof src === \"string\") {\n\t\t\t\t\treturn `\"${src}\"`\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction text(t: string, opt: TextCompOpt = {}): TextComp {\n\n\t\tfunction update(obj: GameObj<TextComp | any>) {\n\n\t\t\tconst ftext = formatText(Object.assign(getRenderProps(obj), {\n\t\t\t\ttext: obj.text + \"\",\n\t\t\t\tsize: obj.textSize,\n\t\t\t\tfont: obj.font,\n\t\t\t\twidth: opt.width && obj.width,\n\t\t\t\talign: obj.align,\n\t\t\t\tletterSpacing: obj.letterSpacing,\n\t\t\t\tlineSpacing: obj.lineSpacing,\n\t\t\t\t// TODO: shouldn't run when object / ancestor is paused\n\t\t\t\ttransform: obj.textTransform,\n\t\t\t\tstyles: obj.textStyles,\n\t\t\t}))\n\n\t\t\tif (!opt.width) {\n\t\t\t\tobj.width = ftext.width / (obj.scale?.x || 1)\n\t\t\t}\n\n\t\t\tobj.height = ftext.height / (obj.scale?.y || 1)\n\n\t\t\treturn ftext\n\n\t\t}\n\n\t\tconst obj = {\n\n\t\t\tid: \"text\",\n\t\t\tset text(nt) {\n\t\t\t\tt = nt\n\t\t\t\t// @ts-ignore\n\t\t\t\tupdate(this)\n\t\t\t},\n\t\t\tget text() {\n\t\t\t\treturn t\n\t\t\t},\n\t\t\ttextSize: opt.size ?? DEF_TEXT_SIZE,\n\t\t\tfont: opt.font,\n\t\t\twidth: opt.width ?? 0,\n\t\t\theight: 0,\n\t\t\talign: opt.align,\n\t\t\tlineSpacing: opt.lineSpacing,\n\t\t\tletterSpacing: opt.letterSpacing,\n\t\t\ttextTransform: opt.transform,\n\t\t\ttextStyles: opt.styles,\n\n\t\t\tadd(this: GameObj<TextComp>) {\n\t\t\t\tonLoad(() => update(this))\n\t\t\t},\n\n\t\t\tdraw(this: GameObj<TextComp>) {\n\t\t\t\tdrawFormattedText(update(this))\n\t\t\t},\n\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\n\t\t}\n\n\t\t// @ts-ignore\n\t\tupdate(obj)\n\n\t\treturn obj\n\n\t}\n\n\tfunction polygon(pts: Vec2[], opt: PolygonCompOpt = {}): PolygonComp {\n\t\tif(pts.length < 3) throw new Error(`Polygon's need more than two points, ${pts.length} points provided`)\n\t\treturn {\n\t\t\tid: \"polygon\",\n\t\t\tpts,\n\t\t\tcolors: opt.colors,\n\t\t\tradius: opt.radius,\n\t\t\tdraw(this: GameObj<PolygonComp>) {\n\t\t\t\tdrawPolygon(Object.assign(getRenderProps(this), {\n\t\t\t\t\tpts: this.pts,\n\t\t\t\t\tcolors: this.colors,\n\t\t\t\t\tradius: this.radius,\n\t\t\t\t\tfill: opt.fill,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea(this: GameObj<PolygonComp>) {\n\t\t\t\treturn new Polygon(this.pts)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn this.pts.map(p => `[${p.x},${p.y}]`).join(\",\")\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction rect(w: number, h: number, opt: RectCompOpt = {}): RectComp {\n\t\treturn {\n\t\t\tid: \"rect\",\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tradius: opt.radius || 0,\n\t\t\tdraw(this: GameObj<RectComp>) {\n\t\t\t\tdrawRect(Object.assign(getRenderProps(this), {\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\tradius: this.radius,\n\t\t\t\t\tfill: opt.fill,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction uvquad(w: number, h: number): UVQuadComp {\n\t\treturn {\n\t\t\tid: \"rect\",\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tdraw(this: GameObj<UVQuadComp>) {\n\t\t\t\tdrawUVQuad(Object.assign(getRenderProps(this), {\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\theight: this.height,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction circle(radius: number, opt: CircleCompOpt = {}): CircleComp {\n\t\treturn {\n\t\t\tid: \"circle\",\n\t\t\tradius: radius,\n\t\t\tdraw(this: GameObj<CircleComp>) {\n\t\t\t\tdrawCircle(Object.assign(getRenderProps(this), {\n\t\t\t\t\tradius: this.radius,\n\t\t\t\t\tfill: opt.fill,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea(this: GameObj<AnchorComp | CircleComp>) {\n\t\t\t\treturn new Rect(new Vec2(this.anchor ? 0 : -this.radius), this.radius * 2, this.radius * 2)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.ceil(this.radius)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction outline(width: number = 1, color: Color = rgb(0, 0, 0)): OutlineComp {\n\t\treturn {\n\t\t\tid: \"outline\",\n\t\t\toutline: {\n\t\t\t\twidth,\n\t\t\t\tcolor,\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction timer(): TimerComp {\n\t\treturn {\n\t\t\tid: \"timer\",\n\t\t\twait(this: GameObj<TimerComp>, time: number, action?: () => void): TimerController {\n\t\t\t\tconst actions = []\n\t\t\t\tif (action) actions.push(action)\n\t\t\t\tlet t = 0\n\t\t\t\tconst ev = this.onUpdate(() => {\n\t\t\t\t\tt += dt()\n\t\t\t\t\tif (t >= time) {\n\t\t\t\t\t\tactions.forEach((f) => f())\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn {\n\t\t\t\t\tget paused() {\n\t\t\t\t\t\treturn ev.paused\n\t\t\t\t\t},\n\t\t\t\t\tset paused(p) {\n\t\t\t\t\t\tev.paused = p\n\t\t\t\t\t},\n\t\t\t\t\tcancel: ev.cancel,\n\t\t\t\t\tonEnd(action) {\n\t\t\t\t\t\tactions.push(action)\n\t\t\t\t\t},\n\t\t\t\t\tthen(action) {\n\t\t\t\t\t\tthis.onEnd(action)\n\t\t\t\t\t\treturn this\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t\tloop(t: number, action: () => void): EventController {\n\t\t\t\tlet curTimer: null | TimerController = null\n\t\t\t\tconst newAction = () => {\n\t\t\t\t\t// TODO: should f be execute right away as loop() is called?\n\t\t\t\t\tcurTimer = this.wait(t, newAction)\n\t\t\t\t\taction()\n\t\t\t\t}\n\t\t\t\tcurTimer = this.wait(0, newAction)\n\t\t\t\treturn {\n\t\t\t\t\tget paused() {\n\t\t\t\t\t\treturn curTimer.paused\n\t\t\t\t\t},\n\t\t\t\t\tset paused(p) {\n\t\t\t\t\t\tcurTimer.paused = p\n\t\t\t\t\t},\n\t\t\t\t\tcancel: () => curTimer.cancel(),\n\t\t\t\t}\n\t\t\t},\n\t\t\ttween<V extends LerpValue>(\n\t\t\t\tthis: GameObj<TimerComp>,\n\t\t\t\tfrom: V,\n\t\t\t\tto: V,\n\t\t\t\tduration: number,\n\t\t\t\tsetValue: (value: V) => void,\n\t\t\t\teaseFunc = easings.linear,\n\t\t\t) {\n\t\t\t\tlet curTime = 0\n\t\t\t\tconst onEndEvents: Array<() => void> = []\n\t\t\t\tconst ev = this.onUpdate(() => {\n\t\t\t\t\tcurTime += dt()\n\t\t\t\t\tconst t = Math.min(curTime / duration, 1)\n\t\t\t\t\tsetValue(lerp(from, to, easeFunc(t)))\n\t\t\t\t\tif (t === 1) {\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t\tsetValue(to)\n\t\t\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn {\n\t\t\t\t\tget paused() {\n\t\t\t\t\t\treturn ev.paused\n\t\t\t\t\t},\n\t\t\t\t\tset paused(p) {\n\t\t\t\t\t\tev.paused = p\n\t\t\t\t\t},\n\t\t\t\t\tonEnd(action: () => void) {\n\t\t\t\t\t\tonEndEvents.push(action)\n\t\t\t\t\t},\n\t\t\t\t\tthen(action: () => void) {\n\t\t\t\t\t\tthis.onEnd(action)\n\t\t\t\t\t\treturn this\n\t\t\t\t\t},\n\t\t\t\t\tcancel() {\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t},\n\t\t\t\t\tfinish() {\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t\tsetValue(to)\n\t\t\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\t// maximum y velocity with body()\n\tconst DEF_JUMP_FORCE = 640\n\tconst MAX_VEL = 65536\n\n\t// TODO: land on wall\n\tfunction body(opt: BodyCompOpt = {}): BodyComp {\n\n\t\tlet curPlatform: GameObj<PosComp | AreaComp | BodyComp> | null = null\n\t\tlet lastPlatformPos = null\n\t\tlet wantFall = false\n\n\t\treturn {\n\n\t\t\tid: \"body\",\n\t\t\trequire: [ \"pos\", \"area\" ],\n\t\t\tvel: new Vec2(0),\n\t\t\tjumpForce: opt.jumpForce ?? DEF_JUMP_FORCE,\n\t\t\tgravityScale: opt.gravityScale ?? 1,\n\t\t\tisStatic: opt.isStatic ?? false,\n\t\t\t// TODO: prefer density * area()\n\t\t\tmass: opt.mass ?? 1,\n\n\t\t\tadd(this: GameObj<PosComp | BodyComp | AreaComp>) {\n\n\t\t\t\tif (this.mass === 0) {\n\t\t\t\t\tthrow new Error(\"Can't set body mass to 0\")\n\t\t\t\t}\n\n\t\t\t\t// static vs static: don't resolve\n\t\t\t\t// static vs non-static: always resolve non-static\n\t\t\t\t// non-static vs non-static: resolve the first one\n\t\t\t\tthis.onCollideUpdate((other: GameObj<PosComp | BodyComp>, col) => {\n\n\t\t\t\t\tif (!other.is(\"body\")) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tif (col.resolved) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.trigger(\"beforePhysicsResolve\", col)\n\t\t\t\t\tother.trigger(\"beforePhysicsResolve\", col.reverse())\n\n\t\t\t\t\t// user can mark 'resolved' in beforePhysicsResolve to stop a resolution\n\t\t\t\t\tif (col.resolved) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.isStatic && other.isStatic) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t} else if (!this.isStatic && !other.isStatic) {\n\t\t\t\t\t\t// TODO: update all children transform?\n\t\t\t\t\t\tconst tmass = this.mass + other.mass\n\t\t\t\t\t\tthis.pos = this.pos.add(col.displacement.scale(other.mass / tmass))\n\t\t\t\t\t\tother.pos = other.pos.add(col.displacement.scale(-this.mass / tmass))\n\t\t\t\t\t\tthis.transform = calcTransform(this)\n\t\t\t\t\t\tother.transform = calcTransform(other)\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// if one is static and on is not, resolve the non static one\n\t\t\t\t\t\tconst col2 = (!this.isStatic && other.isStatic) ? col : col.reverse()\n\t\t\t\t\t\tcol2.source.pos = col2.source.pos.add(col2.displacement)\n\t\t\t\t\t\tcol2.source.transform = calcTransform(col2.source)\n\t\t\t\t\t}\n\n\t\t\t\t\tcol.resolved = true\n\t\t\t\t\tthis.trigger(\"physicsResolve\", col)\n\t\t\t\t\tother.trigger(\"physicsResolve\", col.reverse())\n\n\t\t\t\t})\n\n\t\t\t\tthis.onPhysicsResolve((col) => {\n\t\t\t\t\tif (game.gravity) {\n\t\t\t\t\t\tif (col.isBottom() && this.isFalling()) {\n\t\t\t\t\t\t\tthis.vel.y = 0\n\t\t\t\t\t\t\tcurPlatform = col.target as GameObj<PosComp | BodyComp | AreaComp>\n\t\t\t\t\t\t\tlastPlatformPos = col.target.pos\n\t\t\t\t\t\t\tif (wantFall) {\n\t\t\t\t\t\t\t\twantFall = false\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.trigger(\"ground\", curPlatform)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (col.isTop() && this.isJumping()) {\n\t\t\t\t\t\t\tthis.vel.y = 0\n\t\t\t\t\t\t\tthis.trigger(\"headbutt\", col.target)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t},\n\n\t\t\tupdate(this: GameObj<PosComp | BodyComp | AreaComp>) {\n\n\t\t\t\tif (!game.gravity) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (this.isStatic) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (wantFall) {\n\t\t\t\t\tcurPlatform = null\n\t\t\t\t\tlastPlatformPos = null\n\t\t\t\t\tthis.trigger(\"fallOff\")\n\t\t\t\t\twantFall = false\n\t\t\t\t}\n\n\t\t\t\tif (curPlatform) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t// TODO: this prevents from falling when on edge\n\t\t\t\t\t\t!this.isColliding(curPlatform)\n\t\t\t\t\t\t|| !curPlatform.exists()\n\t\t\t\t\t\t|| !curPlatform.is(\"body\")\n\t\t\t\t\t) {\n\t\t\t\t\t\twantFall = true\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!curPlatform.pos.eq(lastPlatformPos)\n\t\t\t\t\t\t\t&& opt.stickToPlatform !== false\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.moveBy(curPlatform.pos.sub(lastPlatformPos))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastPlatformPos = curPlatform.pos\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst prevVelY = this.vel.y\n\t\t\t\tthis.vel.y += game.gravity * this.gravityScale * dt()\n\t\t\t\tthis.vel.y = Math.min(this.vel.y, opt.maxVelocity ?? MAX_VEL)\n\t\t\t\tif (prevVelY < 0 && this.vel.y >= 0) {\n\t\t\t\t\tthis.trigger(\"fall\")\n\t\t\t\t}\n\t\t\t\tthis.move(this.vel)\n\n\t\t\t},\n\n\t\t\tonPhysicsResolve(this: GameObj, action) {\n\t\t\t\treturn this.on(\"physicsResolve\", action)\n\t\t\t},\n\n\t\t\tonBeforePhysicsResolve(this: GameObj, action) {\n\t\t\t\treturn this.on(\"beforePhysicsResolve\", action)\n\t\t\t},\n\n\t\t\tcurPlatform(): GameObj | null {\n\t\t\t\treturn curPlatform\n\t\t\t},\n\n\t\t\tisGrounded() {\n\t\t\t\treturn curPlatform !== null\n\t\t\t},\n\n\t\t\tisFalling(): boolean {\n\t\t\t\treturn this.vel.y > 0\n\t\t\t},\n\n\t\t\tisJumping(): boolean {\n\t\t\t\treturn this.vel.y < 0\n\t\t\t},\n\n\t\t\tjump(force: number) {\n\t\t\t\tcurPlatform = null\n\t\t\t\tlastPlatformPos = null\n\t\t\t\tthis.vel.y = -force || -this.jumpForce\n\t\t\t},\n\n\t\t\tonGround(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"ground\", action)\n\t\t\t},\n\n\t\t\tonFall(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"fall\", action)\n\t\t\t},\n\n\t\t\tonFallOff(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"fallOff\", action)\n\t\t\t},\n\n\t\t\tonHeadbutt(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"headbutt\", action)\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction doubleJump(numJumps: number = 2): DoubleJumpComp {\n\t\tlet jumpsLeft = numJumps\n\t\treturn {\n\t\t\tid: \"doubleJump\",\n\t\t\trequire: [ \"body\" ],\n\t\t\tnumJumps: numJumps,\n\t\t\tadd(this: GameObj<BodyComp | DoubleJumpComp>) {\n\t\t\t\tthis.onGround(() => {\n\t\t\t\t\tjumpsLeft = this.numJumps\n\t\t\t\t})\n\t\t\t},\n\t\t\tdoubleJump(this: GameObj<BodyComp | DoubleJumpComp>, force?: number) {\n\t\t\t\tif (jumpsLeft <= 0) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (jumpsLeft < this.numJumps) {\n\t\t\t\t\tthis.trigger(\"doubleJump\")\n\t\t\t\t}\n\t\t\t\tjumpsLeft--\n\t\t\t\tthis.jump(force)\n\t\t\t},\n\t\t\tonDoubleJump(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"doubleJump\", action)\n\t\t\t},\n\t\t\tinspect(this: GameObj<BodyComp | DoubleJumpComp>) {\n\t\t\t\treturn `${jumpsLeft}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction shader(id: string, uniform?: Uniform | (() => Uniform)): ShaderComp {\n\t\treturn {\n\t\t\tid: \"shader\",\n\t\t\tshader: id,\n\t\t\t...(typeof uniform === \"function\" ? {\n\t\t\t\tuniform: uniform(),\n\t\t\t\tupdate() {\n\t\t\t\t\tthis.uniform = uniform()\n\t\t\t\t},\n\t\t\t} : {\n\t\t\t\tuniform: uniform,\n\t\t\t}),\n\t\t}\n\t}\n\n\tfunction fixed(): FixedComp {\n\t\treturn {\n\t\t\tid: \"fixed\",\n\t\t\tfixed: true,\n\t\t}\n\t}\n\n\tfunction stay(scenesToStay?: string[]): StayComp {\n\t\treturn {\n\t\t\tid: \"stay\",\n\t\t\tstay: true,\n\t\t\tscenesToStay: scenesToStay,\n\t\t}\n\t}\n\n\tfunction health(hp: number, maxHP?: number): HealthComp {\n\t\tif (hp == null) {\n\t\t\tthrow new Error(\"health() requires the initial amount of hp\")\n\t\t}\n\t\treturn {\n\t\t\tid: \"health\",\n\t\t\thurt(this: GameObj, n: number = 1) {\n\t\t\t\tthis.setHP(hp - n)\n\t\t\t\tthis.trigger(\"hurt\", n)\n\t\t\t},\n\t\t\theal(this: GameObj, n: number = 1) {\n\t\t\t\tconst origHP = hp\n\t\t\t\tthis.setHP(hp + n)\n\t\t\t\tthis.trigger(\"heal\", hp - origHP)\n\t\t\t},\n\t\t\thp(): number {\n\t\t\t\treturn hp\n\t\t\t},\n\t\t\tmaxHP(): number | null {\n\t\t\t\treturn maxHP ?? null\n\t\t\t},\n\t\t\tsetMaxHP(n: number): void {\n\t\t\t\tmaxHP = n\n\t\t\t},\n\t\t\tsetHP(this: GameObj, n: number) {\n\t\t\t\thp = maxHP ? Math.min(maxHP, n) : n\n\t\t\t\tif (hp <= 0) {\n\t\t\t\t\tthis.trigger(\"death\")\n\t\t\t\t}\n\t\t\t},\n\t\t\tonHurt(this: GameObj, action: (amount?: number) => void): EventController {\n\t\t\t\treturn this.on(\"hurt\", action)\n\t\t\t},\n\t\t\tonHeal(this: GameObj, action: (amount?: number) => void): EventController {\n\t\t\t\treturn this.on(\"heal\", action)\n\t\t\t},\n\t\t\tonDeath(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"death\", action)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${hp}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction lifespan(time: number, opt: LifespanCompOpt = {}): EmptyComp {\n\t\tif (time == null) {\n\t\t\tthrow new Error(\"lifespan() requires time\")\n\t\t}\n\t\tconst fade = opt.fade ?? 0\n\t\treturn {\n\t\t\tid: \"lifespan\",\n\t\t\tasync add(this: GameObj<OpacityComp>) {\n\t\t\t\tawait wait(time)\n\t\t\t\t// TODO: this secretively requires opacity comp, make opacity on every game obj?\n\t\t\t\tif (fade > 0 && this.opacity) {\n\t\t\t\t\tawait tween(this.opacity, 0, fade, (a) => this.opacity = a, easings.linear)\n\t\t\t\t}\n\t\t\t\tthis.destroy()\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction state(\n\t\tinitState: string,\n\t\tstateList?: string[],\n\t\ttransitions?: Record<string, string | string[]>,\n\t): StateComp {\n\n\t\tif (!initState) {\n\t\t\tthrow new Error(\"state() requires an initial state\")\n\t\t}\n\n\t\tconst events = {}\n\n\t\tfunction initStateEvents(state: string) {\n\t\t\tif (!events[state]) {\n\t\t\t\tevents[state] = {\n\t\t\t\t\tenter: new Event(),\n\t\t\t\t\tend: new Event(),\n\t\t\t\t\tupdate: new Event(),\n\t\t\t\t\tdraw: new Event(),\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction on(event, state, action) {\n\t\t\tinitStateEvents(state)\n\t\t\treturn events[state][event].add(action)\n\t\t}\n\n\t\tfunction trigger(event, state, ...args) {\n\t\t\tinitStateEvents(state)\n\t\t\tevents[state][event].trigger(...args)\n\t\t}\n\n\t\tlet didFirstEnter = false\n\n\t\treturn {\n\n\t\t\tid: \"state\",\n\t\t\tstate: initState,\n\n\t\t\tenterState(state: string, ...args) {\n\n\t\t\t\tdidFirstEnter = true\n\n\t\t\t\tif (stateList && !stateList.includes(state)) {\n\t\t\t\t\tthrow new Error(`State not found: ${state}`)\n\t\t\t\t}\n\n\t\t\t\tconst oldState = this.state\n\n\t\t\t\tif (transitions) {\n\n\t\t\t\t\t// check if the transition is legal, if transition graph is defined\n\t\t\t\t\tif (!transitions?.[oldState]) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tconst available = typeof transitions[oldState] === \"string\"\n\t\t\t\t\t\t? [transitions[oldState]]\n\t\t\t\t\t\t: transitions[oldState] as string[]\n\n\t\t\t\t\tif (!available.includes(state)) {\n\t\t\t\t\t\tthrow new Error(`Cannot transition state from \"${oldState}\" to \"${state}\". Available transitions: ${available.map((s) => `\"${s}\"`).join(\", \")}`)\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttrigger(\"end\", oldState, ...args)\n\t\t\t\tthis.state = state\n\t\t\t\ttrigger(\"enter\", state, ...args)\n\t\t\t\ttrigger(\"enter\", `${oldState} -> ${state}`, ...args)\n\n\t\t\t},\n\n\t\t\tonStateTransition(from: string, to: string, action: () => void): EventController {\n\t\t\t\treturn on(\"enter\", `${from} -> ${to}`, action)\n\t\t\t},\n\n\t\t\tonStateEnter(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"enter\", state, action)\n\t\t\t},\n\n\t\t\tonStateUpdate(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"update\", state, action)\n\t\t\t},\n\n\t\t\tonStateDraw(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"draw\", state, action)\n\t\t\t},\n\n\t\t\tonStateEnd(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"end\", state, action)\n\t\t\t},\n\n\t\t\tupdate() {\n\t\t\t\t// execute the enter event for initState\n\t\t\t\tif (!didFirstEnter) {\n\t\t\t\t\ttrigger(\"enter\", initState)\n\t\t\t\t\tdidFirstEnter = true\n\t\t\t\t}\n\t\t\t\ttrigger(\"update\", this.state)\n\t\t\t},\n\n\t\t\tdraw() {\n\t\t\t\ttrigger(\"draw\", this.state)\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\treturn this.state\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction fadeIn(time: number = 1): Comp {\n\t\tlet t = 0\n\t\tlet done = false\n\t\treturn {\n\t\t\trequire: [ \"opacity\" ],\n\t\t\tadd(this: GameObj<OpacityComp>) {\n\t\t\t\tthis.opacity = 0\n\t\t\t},\n\t\t\tupdate(this: GameObj<OpacityComp>) {\n\t\t\t\tif (done) return\n\t\t\t\tt += dt()\n\t\t\t\tthis.opacity = map(t, 0, time, 0, 1)\n\t\t\t\tif (t >= time) {\n\t\t\t\t\tthis.opacity = 1\n\t\t\t\t\tdone = true\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction mask(m: Mask = \"intersect\"): MaskComp {\n\t\treturn {\n\t\t\tid: \"mask\",\n\t\t\tmask: m,\n\t\t}\n\t}\n\n\tfunction drawon(c: FrameBuffer) {\n\t\treturn {\n\t\t\tadd(this: GameObj) {\n\t\t\t\tthis.canvas = c\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction onLoad(cb: () => void): void {\n\t\tif (assets.loaded) {\n\t\t\tcb()\n\t\t} else {\n\t\t\tgame.events.on(\"load\", cb)\n\t\t}\n\t}\n\n\tfunction scene(id: SceneName, def: SceneDef) {\n\t\tgame.scenes[id] = def\n\t}\n\n\tfunction go(name: SceneName, ...args) {\n\n\t\tif (!game.scenes[name]) {\n\t\t\tthrow new Error(`Scene not found: ${name}`)\n\t\t}\n\n\t\tgame.events.onOnce(\"frameEnd\", () => {\n\n\t\t\tgame.events.trigger(\"sceneLeave\", name)\n\t\t\tapp.events.clear()\n\t\t\tgame.events.clear()\n\t\t\tgame.objEvents.clear()\n\n\t\t\t;[...game.root.children].forEach((obj) => {\n\t\t\t\tif (\n\t\t\t\t\t!obj.stay\n\t\t\t\t\t|| (obj.scenesToStay && !obj.scenesToStay.includes(name))\n\t\t\t\t) {\n\t\t\t\t\tgame.root.remove(obj)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tgame.root.clearEvents()\n\t\t\tinitEvents()\n\n\t\t\t// cam\n\t\t\tgame.cam = {\n\t\t\t\tpos: null,\n\t\t\t\tscale: vec2(1),\n\t\t\t\tangle: 0,\n\t\t\t\tshake: 0,\n\t\t\t\ttransform: new Mat4(),\n\t\t\t}\n\n\t\t\tgame.scenes[name](...args)\n\n\t\t})\n\n\t}\n\n\tfunction onSceneLeave(action: (newScene?: string) => void): EventController {\n\t\treturn game.events.on(\"sceneLeave\", action)\n\t}\n\n\tfunction getData<T>(key: string, def?: T): T {\n\t\ttry {\n\t\t\treturn JSON.parse(window.localStorage[key])\n\t\t} catch {\n\t\t\tif (def) {\n\t\t\t\tsetData(key, def)\n\t\t\t\treturn def\n\t\t\t} else {\n\t\t\t\treturn null\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction setData(key: string, data: any) {\n\t\twindow.localStorage[key] = JSON.stringify(data)\n\t}\n\n\tfunction plug<T extends Record<string, any>>(plugin: KaboomPlugin<T>, ...args: any): KaboomCtx & T {\n\t\tconst funcs = plugin(ctx)\n\t\tlet funcsObj: T\n\t\tif (typeof funcs === \"function\") {\n\t\t\tconst plugWithOptions = funcs(...args)\n\t\t\tfuncsObj = plugWithOptions(ctx)\n\t\t}\n\t\telse {\n\t\t\tfuncsObj = funcs\n\t\t}\n\t\tfor (const k in funcsObj) {\n\t\t\t// @ts-ignore\n\t\t\tctx[k] = funcsObj[k]\n\t\t\tif (gopt.global !== false) {\n\t\t\t\t// @ts-ignore\n\t\t\t\twindow[k] = funcsObj[k]\n\t\t\t}\n\t\t}\n\t\treturn ctx as KaboomCtx & T\n\t}\n\n\tfunction center(): Vec2 {\n\t\treturn vec2(width() / 2, height() / 2)\n\t}\n\n\tenum EdgeMask {\n\t\tNone = 0,\n\t\tLeft = 1,\n\t\tTop = 2,\n\t\tLeftTop = 3,\n\t\tRight = 4,\n\t\tHorizontal = 5,\n\t\tRightTop = 6,\n\t\tHorizontalTop = 7,\n\t\tBottom = 8,\n\t\tLeftBottom = 9,\n\t\tVertical = 10,\n\t\tLeftVertical = 11,\n\t\tRightBottom = 12,\n\t\tHorizontalBottom = 13,\n\t\tRightVertical = 14,\n\t\tAll = 15,\n\t}\n\n\tfunction tile(opts: TileCompOpt = {}): TileComp {\n\n\t\tlet tilePos = vec2(0)\n\t\tlet isObstacle = opts.isObstacle ?? false\n\t\tlet cost = opts.cost ?? 0\n\t\tlet edges = opts.edges ?? []\n\n\t\tconst getEdgeMask = () => {\n\t\t\tconst loopup = {\n\t\t\t\t\"left\": EdgeMask.Left,\n\t\t\t\t\"top\": EdgeMask.Top,\n\t\t\t\t\"right\": EdgeMask.Right,\n\t\t\t\t\"bottom\": EdgeMask.Bottom,\n\t\t\t}\n\t\t\treturn edges.map(s => loopup[s] || 0).reduce((mask, dir) => mask | dir, 0)\n\t\t}\n\n\t\tlet edgeMask = getEdgeMask()\n\n\t\treturn {\n\n\t\t\tid: \"tile\",\n\t\t\ttilePosOffset: opts.offset ?? vec2(0),\n\n\t\t\tset tilePos(p: Vec2) {\n\t\t\t\tconst level = this.getLevel()\n\t\t\t\ttilePos = p.clone()\n\t\t\t\t// @ts-ignore\n\t\t\t\tthis.pos = vec2(\n\t\t\t\t\tthis.tilePos.x * level.tileWidth(),\n\t\t\t\t\tthis.tilePos.y * level.tileHeight(),\n\t\t\t\t).add(this.tilePosOffset)\n\t\t\t},\n\n\t\t\tget tilePos() {\n\t\t\t\treturn tilePos\n\t\t\t},\n\n\t\t\tset isObstacle(is: boolean) {\n\t\t\t\tif (isObstacle === is) return\n\t\t\t\tisObstacle = is\n\t\t\t\tthis.getLevel().invalidateNavigationMap()\n\t\t\t},\n\n\t\t\tget isObstacle() {\n\t\t\t\treturn isObstacle\n\t\t\t},\n\n\t\t\tset cost(n: number) {\n\t\t\t\tif (cost === n) return\n\t\t\t\tcost = n\n\t\t\t\tthis.getLevel().invalidateNavigationMap()\n\t\t\t},\n\n\t\t\tget cost() {\n\t\t\t\treturn cost\n\t\t\t},\n\n\t\t\tset edges(e: Edge[]) {\n\t\t\t\tedges = e\n\t\t\t\tedgeMask = getEdgeMask()\n\t\t\t\tthis.getLevel().invalidateNavigationMap()\n\t\t\t},\n\n\t\t\tget edges() {\n\t\t\t\treturn edges\n\t\t\t},\n\n\t\t\tget edgeMask() {\n\t\t\t\treturn edgeMask\n\t\t\t},\n\n\t\t\tgetLevel(this: GameObj) {\n\t\t\t\treturn this.parent as GameObj<LevelComp>\n\t\t\t},\n\n\t\t\tmoveLeft() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(-1, 0))\n\t\t\t},\n\n\t\t\tmoveRight() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(1, 0))\n\t\t\t},\n\n\t\t\tmoveUp() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(0, -1))\n\t\t\t},\n\n\t\t\tmoveDown() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(0, 1))\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction addLevel(map: string[], opt: LevelOpt): GameObj<PosComp | LevelComp> {\n\n\t\tif (!opt.tileWidth || !opt.tileHeight) {\n\t\t\tthrow new Error(\"Must provide tileWidth and tileHeight.\")\n\t\t}\n\n\t\t// TODO: custom parent\n\t\tconst level = add([\n\t\t\tpos(opt.pos ?? vec2(0)),\n\t\t]) as GameObj<PosComp | LevelComp>\n\n\t\tconst numRows = map.length\n\t\tlet numColumns = 0\n\n\t\t// The spatial map keeps track of the objects at each location\n\t\tlet spatialMap: GameObj[][] | null = null\n\t\tlet costMap: number[] | null = null\n\t\tlet edgeMap: number[] | null = null\n\t\tlet connectivityMap: number[] | null = null\n\n\t\tconst tile2Hash = (tilePos: Vec2) => tilePos.x + tilePos.y * numColumns\n\t\tconst hash2Tile = (hash: number) => vec2(\n\t\t\tMath.floor(hash % numColumns),\n\t\t\tMath.floor(hash / numColumns),\n\t\t)\n\n\t\tconst createSpatialMap = () => {\n\t\t\tspatialMap = []\n\t\t\tfor (const child of level.children) {\n\t\t\t\tinsertIntoSpatialMap(child)\n\t\t\t}\n\t\t}\n\n\t\tconst insertIntoSpatialMap = (obj: GameObj) => {\n\t\t\tconst i = tile2Hash(obj.tilePos)\n\t\t\tif (spatialMap[i]) {\n\t\t\t\tspatialMap[i].push(obj)\n\t\t\t} else {\n\t\t\t\tspatialMap[i] = [obj]\n\t\t\t}\n\t\t}\n\n\t\tconst removeFromSpatialMap = (obj: GameObj) => {\n\t\t\tconst i = tile2Hash(obj.tilePos)\n\t\t\tif (spatialMap[i]) {\n\t\t\t\tconst index = spatialMap[i].indexOf(obj)\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tspatialMap[i].splice(index, 1)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst updateSpatialMap = () => {\n\t\t\tlet spatialMapChanged = false\n\t\t\tfor (const child of level.children) {\n\t\t\t\tconst tilePos = level.pos2Tile(child.pos)\n\t\t\t\tif (child.tilePos.x != tilePos.x || child.tilePos.y != tilePos.y) {\n\t\t\t\t\tspatialMapChanged = true\n\t\t\t\t\tremoveFromSpatialMap(child)\n\t\t\t\t\tchild.tilePos.x = tilePos.x\n\t\t\t\t\tchild.tilePos.y = tilePos.y\n\t\t\t\t\tinsertIntoSpatialMap(child)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (spatialMapChanged) {\n\t\t\t\tlevel.trigger(\"spatial_map_changed\")\n\t\t\t}\n\t\t}\n\n\t\t// The obstacle map tells which tiles are accessible\n\t\t// Cost: accessible with cost\n\t\t// Infinite: inaccessible\n\t\tconst createCostMap = () => {\n\t\t\tconst spatialMap = level.getSpatialMap()\n\t\t\tconst size = level.numRows() * level.numColumns()\n\t\t\tif (!costMap) {\n\t\t\t\tcostMap = new Array<number>(size)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcostMap.length = size\n\t\t\t}\n\t\t\tcostMap.fill(1, 0, size)\n\t\t\tfor (let i = 0; i < spatialMap.length; i++) {\n\t\t\t\tconst objects = spatialMap[i]\n\t\t\t\tif (objects) {\n\t\t\t\t\tlet cost = 0\n\t\t\t\t\tfor (const obj of objects) {\n\t\t\t\t\t\tif (obj.isObstacle) {\n\t\t\t\t\t\t\tcost = Infinity\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcost += obj.cost\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcostMap[i] = cost || 1\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// The edge map tells which edges between nodes are walkable\n\t\tconst createEdgeMap = () => {\n\t\t\tconst spatialMap = level.getSpatialMap()\n\t\t\tconst size = level.numRows() * level.numColumns()\n\t\t\tif (!edgeMap) {\n\t\t\t\tedgeMap = new Array<number>(size)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tedgeMap.length = size\n\t\t\t}\n\t\t\tedgeMap.fill(EdgeMask.All, 0, size)\n\t\t\tfor (let i = 0; i < spatialMap.length; i++) {\n\t\t\t\tconst objects = spatialMap[i]\n\t\t\t\tif (objects) {\n\t\t\t\t\tconst len = objects.length\n\t\t\t\t\tlet mask = EdgeMask.All\n\t\t\t\t\tfor (let j = 0; j < len; j++) {\n\t\t\t\t\t\tmask |= objects[j].edgeMask\n\t\t\t\t\t}\n\t\t\t\t\tedgeMap[i] = mask\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// The connectivity map is used to see whether two locations are connected\n\t\t// -1: inaccesible n: connectivity group\n\t\tconst createConnectivityMap = () => {\n\t\t\tconst size = level.numRows() * level.numColumns()\n\t\t\tconst traverse = (i: number, index: number) => {\n\t\t\t\tconst frontier: number[] = []\n\t\t\t\tfrontier.push(i)\n\t\t\t\twhile (frontier.length > 0) {\n\t\t\t\t\tconst i = frontier.pop()\n\t\t\t\t\tgetNeighbours(i).forEach((i) => {\n\t\t\t\t\t\tif (connectivityMap[i] < 0) {\n\t\t\t\t\t\t\tconnectivityMap[i] = index\n\t\t\t\t\t\t\tfrontier.push(i)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!connectivityMap) {\n\t\t\t\tconnectivityMap = new Array<number>(size)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconnectivityMap.length = size\n\t\t\t}\n\t\t\tconnectivityMap.fill(-1, 0, size)\n\t\t\tlet index = 0\n\t\t\tfor (let i = 0; i < costMap.length; i++) {\n\t\t\t\tif (connectivityMap[i] >= 0) { index++; continue }\n\t\t\t\ttraverse(i, index)\n\t\t\t\tindex++\n\t\t\t}\n\t\t}\n\n\t\tconst getCost = (node: number, neighbour: number) => {\n\t\t\t// Cost of destination tile\n\t\t\treturn costMap[neighbour]\n\t\t}\n\n\t\tconst getHeuristic = (node: number, goal: number) => {\n\t\t\t// Euclidian distance to target\n\t\t\tconst p1 = hash2Tile(node)\n\t\t\tconst p2 = hash2Tile(goal)\n\t\t\treturn p1.dist(p2)\n\t\t}\n\n\t\tconst getNeighbours = (node: number, diagonals?: boolean) => {\n\t\t\tconst n = []\n\t\t\tconst x = Math.floor(node % numColumns)\n\t\t\tconst left = x > 0 &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Left) &&\n\t\t\t\tcostMap[node - 1] !== Infinity\n\t\t\tconst top = node >= numColumns &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Top) &&\n\t\t\t\tcostMap[node - numColumns] !== Infinity\n\t\t\tconst right = x < numColumns - 1 &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Right) &&\n\t\t\t\tcostMap[node + 1] !== Infinity\n\t\t\tconst bottom = node < numColumns * numRows - numColumns - 1 &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Bottom) &&\n\t\t\t\tcostMap[node + numColumns] !== Infinity\n\t\t\tif (diagonals) {\n\t\t\t\tif (left) {\n\t\t\t\t\tif (top) { n.push(node - numColumns - 1) }\n\t\t\t\t\tn.push(node - 1)\n\t\t\t\t\tif (bottom) { n.push(node + numColumns - 1) }\n\t\t\t\t}\n\t\t\t\tif (top) {\n\t\t\t\t\tn.push(node - numColumns)\n\t\t\t\t}\n\t\t\t\tif (right) {\n\t\t\t\t\tif (top) { n.push(node - numColumns + 1) }\n\t\t\t\t\tn.push(node + 1)\n\t\t\t\t\tif (bottom) { n.push(node + numColumns + 1) }\n\t\t\t\t}\n\t\t\t\tif (bottom) {\n\t\t\t\t\tn.push(node + numColumns)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (left) {\n\t\t\t\t\tn.push(node - 1)\n\t\t\t\t}\n\t\t\t\tif (top) {\n\t\t\t\t\tn.push(node - numColumns)\n\t\t\t\t}\n\t\t\t\tif (right) {\n\t\t\t\t\tn.push(node + 1)\n\t\t\t\t}\n\t\t\t\tif (bottom) {\n\t\t\t\t\tn.push(node + numColumns)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn n\n\t\t}\n\n\t\tconst levelComp: LevelComp = {\n\n\t\t\tid: \"level\",\n\n\t\t\ttileWidth() {\n\t\t\t\treturn opt.tileWidth\n\t\t\t},\n\n\t\t\ttileHeight() {\n\t\t\t\treturn opt.tileHeight\n\t\t\t},\n\n\t\t\tspawn(this: GameObj<LevelComp>, key: string | CompList<any>, ...args: Vec2Args): GameObj | null {\n\n\t\t\t\tconst p = vec2(...args)\n\n\t\t\t\tconst comps = (() => {\n\t\t\t\t\tif (typeof key === \"string\") {\n\t\t\t\t\t\tif (opt.tiles[key]) {\n\t\t\t\t\t\t\tif (typeof opt.tiles[key] !== \"function\") {\n\t\t\t\t\t\t\t\tthrow new Error(\"Level symbol def must be a function returning a component list\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn opt.tiles[key](p)\n\t\t\t\t\t\t} else if (opt.wildcardTile) {\n\t\t\t\t\t\t\treturn opt.wildcardTile(key, p)\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (Array.isArray(key)) {\n\t\t\t\t\t\treturn key\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"Expected a symbol or a component list\")\n\t\t\t\t\t}\n\t\t\t\t})()\n\n\t\t\t\t// empty tile\n\t\t\t\tif (!comps) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\tlet hasPos = false\n\t\t\t\tlet hasTile = false\n\n\t\t\t\tfor (const comp of comps) {\n\t\t\t\t\tif (comp.id === \"tile\") hasTile = true\n\t\t\t\t\tif (comp.id === \"pos\") hasPos = true\n\t\t\t\t}\n\n\t\t\t\tif (!hasPos) comps.push(pos())\n\t\t\t\tif (!hasTile) comps.push(tile())\n\n\t\t\t\tconst obj = level.add(comps)\n\n\t\t\t\tif (hasPos) {\n\t\t\t\t\tobj.tilePosOffset = obj.pos.clone()\n\t\t\t\t}\n\n\t\t\t\tobj.tilePos = p\n\n\t\t\t\tif (spatialMap) {\n\t\t\t\t\tinsertIntoSpatialMap(obj)\n\t\t\t\t\tthis.trigger(\"spatial_map_changed\")\n\t\t\t\t\tthis.trigger(\"navigation_map_invalid\")\n\t\t\t\t}\n\n\t\t\t\treturn obj\n\n\t\t\t},\n\n\t\t\tnumColumns() {\n\t\t\t\treturn numColumns\n\t\t\t},\n\n\t\t\tnumRows() {\n\t\t\t\treturn numRows\n\t\t\t},\n\n\t\t\tlevelWidth() {\n\t\t\t\treturn numColumns * this.tileWidth()\n\t\t\t},\n\n\t\t\tlevelHeight() {\n\t\t\t\treturn numRows * this.tileHeight()\n\t\t\t},\n\n\t\t\ttile2Pos(...args: Vec2Args) {\n\t\t\t\treturn vec2(...args).scale(this.tileWidth(), this.tileHeight())\n\t\t\t},\n\n\t\t\tpos2Tile(...args: Vec2Args) {\n\t\t\t\tconst p = vec2(...args)\n\t\t\t\treturn vec2(\n\t\t\t\t\tMath.floor(p.x / this.tileWidth()),\n\t\t\t\t\tMath.floor(p.y / this.tileHeight()),\n\t\t\t\t)\n\t\t\t},\n\n\t\t\tgetSpatialMap() {\n\t\t\t\tif (!spatialMap) {\n\t\t\t\t\tcreateSpatialMap()\n\t\t\t\t}\n\t\t\t\treturn spatialMap\n\t\t\t},\n\n\t\t\tonSpatialMapChanged(this: GameObj<LevelComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"spatial_map_changed\", cb)\n\t\t\t},\n\n\t\t\tonNavigationMapInvalid(this: GameObj<LevelComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation_map_invalid\", cb)\n\t\t\t},\n\n\t\t\tgetAt(tilePos: Vec2) {\n\t\t\t\tif (!spatialMap) {\n\t\t\t\t\tcreateSpatialMap()\n\t\t\t\t}\n\t\t\t\tconst hash = tile2Hash(tilePos)\n\t\t\t\treturn spatialMap[hash] || []\n\t\t\t},\n\n\t\t\tupdate() {\n\t\t\t\tif (spatialMap) {\n\t\t\t\t\tupdateSpatialMap()\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tinvalidateNavigationMap() {\n\t\t\t\tcostMap = null\n\t\t\t\tedgeMap = null\n\t\t\t\tconnectivityMap = null\n\t\t\t},\n\n\t\t\tonNavigationMapChanged(this: GameObj<LevelComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation_map_changed\", cb)\n\t\t\t},\n\n\t\t\tgetTilePath(this: GameObj<LevelComp>, from: Vec2, to: Vec2, opts: PathFindOpt = {}) {\n\t\t\t\tif (!costMap) {\n\t\t\t\t\tcreateCostMap()\n\t\t\t\t}\n\t\t\t\tif (!edgeMap) {\n\t\t\t\t\tcreateEdgeMap()\n\t\t\t\t}\n\t\t\t\tif (!connectivityMap) {\n\t\t\t\t\tcreateConnectivityMap()\n\t\t\t\t}\n\n\t\t\t\t// Tiles are outside the grid\n\t\t\t\tif (from.x < 0 || from.x >= numColumns ||\n\t\t\t\t\tfrom.y < 0 || from.y >= numRows) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t\tif (to.x < 0 || to.x >= numColumns ||\n\t\t\t\t\tto.y < 0 || to.y >= numRows) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\tconst start = tile2Hash(from)\n\t\t\t\tconst goal = tile2Hash(to)\n\n\t\t\t\t// Tiles are not accessible\n\t\t\t\t// If we test the start tile, we may get stuck\n\t\t\t\t/*if (costMap[start] === Infinity) {\n\t\t\t\t\treturn null\n\t\t\t\t}*/\n\t\t\t\tif (costMap[goal] === Infinity) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\t// Same Tile, no waypoints needed\n\t\t\t\tif (start === goal) {\n\t\t\t\t\treturn []\n\t\t\t\t}\n\n\t\t\t\t// Tiles are not within the same section\n\t\t\t\t// If we test the start tile when invalid, we may get stuck\n\t\t\t\tif (connectivityMap[start] != -1 && connectivityMap[start] !== connectivityMap[goal]) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\t// Find a path\n\t\t\t\tinterface CostNode { cost: number, node: number }\n\t\t\t\tconst frontier = new BinaryHeap<CostNode>((a, b) => a.cost < b.cost)\n\t\t\t\tfrontier.insert({ cost: 0, node: start })\n\n\t\t\t\tconst cameFrom = new Map<number, number>()\n\t\t\t\tcameFrom.set(start, start)\n\t\t\t\tconst costSoFar = new Map<number, number>()\n\t\t\t\tcostSoFar.set(start, 0)\n\n\t\t\t\twhile (frontier.length !== 0) {\n\t\t\t\t\tconst current = frontier.remove()?.node\n\n\t\t\t\t\tif (current === goal)\n\t\t\t\t\t\tbreak\n\n\t\t\t\t\tconst neighbours = getNeighbours(current, opts.allowDiagonals)\n\t\t\t\t\tfor (const next of neighbours) {\n\t\t\t\t\t\tconst newCost = (costSoFar.get(current) || 0) +\n\t\t\t\t\t\t\tgetCost(current, next) +\n\t\t\t\t\t\t\tgetHeuristic(next, goal)\n\t\t\t\t\t\tif (!costSoFar.has(next) || newCost < costSoFar.get(next)) {\n\t\t\t\t\t\t\tcostSoFar.set(next, newCost)\n\t\t\t\t\t\t\tfrontier.insert({ cost: newCost, node: next })\n\t\t\t\t\t\t\tcameFrom.set(next, current)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst path = []\n\t\t\t\tlet node = goal\n\t\t\t\tconst p = hash2Tile(node)\n\t\t\t\tpath.push(p)\n\t\t\t\twhile (node !== start) {\n\t\t\t\t\tnode = cameFrom.get(node)\n\t\t\t\t\tconst p = hash2Tile(node)\n\t\t\t\t\tpath.push(p)\n\t\t\t\t}\n\t\t\t\treturn path.reverse()\n\t\t\t},\n\n\t\t\tgetPath(this: GameObj<LevelComp>, from: Vec2, to: Vec2, opts: PathFindOpt = {}) {\n\t\t\t\tconst tw = this.tileWidth()\n\t\t\t\tconst th = this.tileHeight()\n\t\t\t\tconst path = this.getTilePath(\n\t\t\t\t\tthis.pos2Tile(from),\n\t\t\t\t\tthis.pos2Tile(to),\n\t\t\t\t\topts,\n\t\t\t\t)\n\t\t\t\tif (path) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\tfrom,\n\t\t\t\t\t\t...path\n\t\t\t\t\t\t\t.slice(1, -1)\n\t\t\t\t\t\t\t.map((tilePos) => tilePos.scale(tw, th).add(tw / 2, th / 2)),\n\t\t\t\t\t\tto,\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t\tlevel.use(levelComp)\n\n\t\tlevel.onNavigationMapInvalid(() => {\n\t\t\tlevel.invalidateNavigationMap()\n\t\t\tlevel.trigger(\"navigation_map_changed\")\n\t\t})\n\n\t\tmap.forEach((row, i) => {\n\t\t\tconst keys = row.split(\"\")\n\t\t\tnumColumns = Math.max(keys.length, numColumns)\n\t\t\tkeys.forEach((key, j) => {\n\t\t\t\tlevel.spawn(key, vec2(j, i))\n\t\t\t})\n\t\t})\n\n\t\treturn level\n\n\t}\n\n\tfunction agent(opts: AgentCompOpt = {}) : AgentComp {\n\t\tlet target: Vec2 | null = null\n\t\tlet path: Vec2[] | null = null\n\t\tlet index: number | null = null\n\t\tlet navMapChangedEvent: EventController | null = null\n\t\treturn {\n\t\t\tid: \"agent\",\n\t\t\trequire: [\"pos\", \"tile\"],\n\t\t\tagentSpeed: opts.speed ?? 100,\n\t\t\tallowDiagonals: opts.allowDiagonals ?? true,\n\t\t\tgetDistanceToTarget(this: GameObj<AgentComp | PosComp>) {\n\t\t\t\treturn target ? this.pos.dist(target) : 0\n\t\t\t},\n\t\t\tgetNextLocation() {\n\t\t\t\treturn path && index ? path[index] : null\n\t\t\t},\n\t\t\tgetPath() {\n\t\t\t\treturn path ? path.slice() : null\n\t\t\t},\n\t\t\tgetTarget() {\n\t\t\t\treturn target\n\t\t\t},\n\t\t\tisNavigationFinished() {\n\t\t\t\treturn path ? index === null : true\n\t\t\t},\n\t\t\tisTargetReachable() {\n\t\t\t\treturn path !== null\n\t\t\t},\n\t\t\tisTargetReached(this: GameObj<AgentComp | PosComp>) {\n\t\t\t\treturn target ? this.pos.eq(target) : true\n\t\t\t},\n\t\t\tsetTarget(this: GameObj<AgentComp | TileComp | PosComp>, p: Vec2) {\n\t\t\t\ttarget = p\n\t\t\t\tpath = this.getLevel().getPath(this.pos, target, {\n\t\t\t\t\tallowDiagonals: this.allowDiagonals,\n\t\t\t\t})\n\t\t\t\tindex = path ? 0 : null\n\t\t\t\tif (path) {\n\t\t\t\t\tif (!navMapChangedEvent) {\n\t\t\t\t\t\tnavMapChangedEvent = this.getLevel().onNavigationMapChanged(() => {\n\t\t\t\t\t\t\tif (path && index !== null) {\n\t\t\t\t\t\t\t\tpath = this.getLevel().getPath(this.pos, target, {\n\t\t\t\t\t\t\t\t\tallowDiagonals: this.allowDiagonals,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tindex = path ? 0 : null\n\t\t\t\t\t\t\t\tif (path) {\n\t\t\t\t\t\t\t\t\tthis.trigger(\"navigation-next\", this, path[index])\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.trigger(\"navigation-ended\", this)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tthis.onDestroy(() => navMapChangedEvent.cancel())\n\t\t\t\t\t}\n\t\t\t\t\tthis.trigger(\"navigation-started\", this)\n\t\t\t\t\tthis.trigger(\"navigation-next\", this, path[index])\n\t\t\t\t} else {\n\t\t\t\t\tthis.trigger(\"navigation-ended\", this)\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate(this: GameObj<AgentComp | PosComp>) {\n\t\t\t\tif (path && index !== null) {\n\t\t\t\t\tif (this.pos.sdist(path[index]) < 2) {\n\t\t\t\t\t\tif (index === path.length - 1) {\n\t\t\t\t\t\t\tthis.pos = target.clone()\n\t\t\t\t\t\t\tindex = null\n\t\t\t\t\t\t\tthis.trigger(\"navigation-ended\", this)\n\t\t\t\t\t\t\tthis.trigger(\"target-reached\", this)\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex++\n\t\t\t\t\t\t\tthis.trigger(\"navigation-next\", this, path[index])\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tthis.moveTo(path[index], this.agentSpeed)\n\t\t\t\t}\n\t\t\t},\n\t\t\tonNavigationStarted(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation-started\", cb)\n\t\t\t},\n\t\t\tonNavigationNext(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation-next\", cb)\n\t\t\t},\n\t\t\tonNavigationEnded(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation-ended\", cb)\n\t\t\t},\n\t\t\tonTargetReached(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"target-reached\", cb)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn JSON.stringify({\n\t\t\t\t\ttarget: JSON.stringify(target),\n\t\t\t\t\tpath: JSON.stringify(path),\n\t\t\t\t})\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction record(frameRate?): Recording {\n\n\t\tconst stream = app.canvas.captureStream(frameRate)\n\t\tconst audioDest = audio.ctx.createMediaStreamDestination()\n\n\t\taudio.masterNode.connect(audioDest)\n\n\t\t// TODO: Enabling audio results in empty video if no audio received\n\t\t// const audioStream = audioDest.stream\n\t\t// const [firstAudioTrack] = audioStream.getAudioTracks()\n\n\t\t// stream.addTrack(firstAudioTrack);\n\n\t\tconst recorder = new MediaRecorder(stream)\n\t\tconst chunks = []\n\n\t\trecorder.ondataavailable = (e) => {\n\t\t\tif (e.data.size > 0) {\n\t\t\t\tchunks.push(e.data)\n\t\t\t}\n\t\t}\n\n\t\trecorder.onerror = () => {\n\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\tstream.getTracks().forEach(t => t.stop())\n\t\t}\n\n\t\trecorder.start()\n\n\t\treturn {\n\n\t\t\tresume() {\n\t\t\t\trecorder.resume()\n\t\t\t},\n\n\t\t\tpause() {\n\t\t\t\trecorder.pause()\n\t\t\t},\n\n\t\t\tstop(): Promise<Blob> {\n\t\t\t\trecorder.stop()\n\t\t\t\t// cleanup\n\t\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\t\tstream.getTracks().forEach(t => t.stop())\n\t\t\t\treturn new Promise((resolve) => {\n\t\t\t\t\trecorder.onstop = () => {\n\t\t\t\t\t\tresolve(new Blob(chunks, {\n\t\t\t\t\t\t\ttype: \"video/mp4\",\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tdownload(filename = \"kaboom.mp4\") {\n\t\t\t\tthis.stop().then((blob) => downloadBlob(filename, blob))\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction isFocused(): boolean {\n\t\treturn document.activeElement === app.canvas\n\t}\n\n\tfunction destroy(obj: GameObj) {\n\t\tobj.destroy()\n\t}\n\n\t// aliases for root game obj operations\n\tconst add = game.root.add.bind(game.root)\n\tconst readd = game.root.readd.bind(game.root)\n\tconst destroyAll = game.root.removeAll.bind(game.root)\n\tconst get = game.root.get.bind(game.root)\n\tconst wait = game.root.wait.bind(game.root)\n\tconst loop = game.root.loop.bind(game.root)\n\tconst tween = game.root.tween.bind(game.root)\n\n\tfunction boom(speed: number = 2, size: number = 1): Comp {\n\t\tlet time = 0\n\t\treturn {\n\t\t\trequire: [ \"scale\" ],\n\t\t\tupdate(this: GameObj<ScaleComp>) {\n\t\t\t\tconst s = Math.sin(time * speed) * size\n\t\t\t\tif (s < 0) {\n\t\t\t\t\tthis.destroy()\n\t\t\t\t}\n\t\t\t\tthis.scale = vec2(s)\n\t\t\t\ttime += dt()\n\t\t\t},\n\t\t}\n\t}\n\n\tconst kaSprite = loadSprite(null, kaSpriteSrc)\n\tconst boomSprite = loadSprite(null, boomSpriteSrc)\n\n\tfunction addKaboom(p: Vec2, opt: BoomOpt = {}): GameObj {\n\n\t\tconst kaboom = add([\n\t\t\tpos(p),\n\t\t\tstay(),\n\t\t])\n\n\t\tconst speed = (opt.speed || 1) * 5\n\t\tconst s = opt.scale || 1\n\n\t\tkaboom.add([\n\t\t\tsprite(boomSprite),\n\t\t\tscale(0),\n\t\t\tanchor(\"center\"),\n\t\t\tboom(speed, s),\n\t\t\t...opt.comps ?? [],\n\t\t])\n\n\t\tconst ka = kaboom.add([\n\t\t\tsprite(kaSprite),\n\t\t\tscale(0),\n\t\t\tanchor(\"center\"),\n\t\t\ttimer(),\n\t\t\t...opt.comps ?? [],\n\t\t])\n\n\t\tka.wait(0.4 / speed, () => ka.use(boom(speed, s)))\n\t\tka.onDestroy(() => kaboom.destroy())\n\n\t\treturn kaboom\n\n\t}\n\n\tfunction updateFrame() {\n\t\t// update every obj\n\t\tgame.root.update()\n\t}\n\n\tclass Collision {\n\t\tsource: GameObj\n\t\ttarget: GameObj\n\t\tdisplacement: Vec2\n\t\tresolved: boolean = false\n\t\tconstructor(source: GameObj, target: GameObj, dis: Vec2, resolved = false) {\n\t\t\tthis.source = source\n\t\t\tthis.target = target\n\t\t\tthis.displacement = dis\n\t\t\tthis.resolved = resolved\n\t\t}\n\t\treverse() {\n\t\t\treturn new Collision(\n\t\t\t\tthis.target,\n\t\t\t\tthis.source,\n\t\t\t\tthis.displacement.scale(-1),\n\t\t\t\tthis.resolved,\n\t\t\t)\n\t\t}\n\t\thasOverlap() {\n\t\t\treturn !this.displacement.isZero()\n\t\t}\n\t\tisLeft() {\n\t\t\treturn this.displacement.x > 0\n\t\t}\n\t\tisRight() {\n\t\t\treturn this.displacement.x < 0\n\t\t}\n\t\tisTop() {\n\t\t\treturn this.displacement.y > 0\n\t\t}\n\t\tisBottom() {\n\t\t\treturn this.displacement.y < 0\n\t\t}\n\t\tpreventResolution() {\n\t\t\tthis.resolved = true\n\t\t}\n\t}\n\n\tfunction checkFrame() {\n\n\t\t// TODO: persistent grid?\n\t\t// start a spatial hash grid for more efficient collision detection\n\t\tconst grid: Record<number, Record<number, GameObj<AreaComp>[]>> = {}\n\t\tconst cellSize = gopt.hashGridSize || DEF_HASH_GRID_SIZE\n\n\t\t// current transform\n\t\tlet tr = new Mat4()\n\n\t\t// a local transform stack\n\t\tconst stack = []\n\n\t\tfunction checkObj(obj: GameObj) {\n\n\t\t\tstack.push(tr.clone())\n\n\t\t\t// Update object transform here. This will be the transform later used in rendering.\n\t\t\tif (obj.pos) tr.translate(obj.pos)\n\t\t\tif (obj.scale) tr.scale(obj.scale)\n\t\t\tif (obj.angle) tr.rotate(obj.angle)\n\t\t\tobj.transform = tr.clone()\n\n\t\t\tif (obj.c(\"area\") && !obj.paused) {\n\n\t\t\t\t// TODO: only update worldArea if transform changed\n\t\t\t\tconst aobj = obj as GameObj<AreaComp>\n\t\t\t\tconst area = aobj.worldArea()\n\t\t\t\tconst bbox = area.bbox()\n\n\t\t\t\t// Get spatial hash grid coverage\n\t\t\t\tconst xmin = Math.floor(bbox.pos.x / cellSize)\n\t\t\t\tconst ymin = Math.floor(bbox.pos.y / cellSize)\n\t\t\t\tconst xmax = Math.ceil((bbox.pos.x + bbox.width) / cellSize)\n\t\t\t\tconst ymax = Math.ceil((bbox.pos.y + bbox.height) / cellSize)\n\n\t\t\t\t// Cache objs that are already checked\n\t\t\t\tconst checked = new Set()\n\n\t\t\t\t// insert & check against all covered grids\n\t\t\t\tfor (let x = xmin; x <= xmax; x++) {\n\t\t\t\t\tfor (let y = ymin; y <= ymax; y++) {\n\t\t\t\t\t\tif(!grid[x]) {\n\t\t\t\t\t\t\tgrid[x] = {}\n\t\t\t\t\t\t\tgrid[x][y] = [aobj]\n\t\t\t\t\t\t} else if(!grid[x][y]) {\n\t\t\t\t\t\t\tgrid[x][y] = [aobj]\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst cell = grid[x][y]\n\t\t\t\t\t\t\tcheck: for (const other of cell) {\n\t\t\t\t\t\t\t\tif (other.paused) continue\n\t\t\t\t\t\t\t\tif (!other.exists()) continue\n\t\t\t\t\t\t\t\tif (checked.has(other.id)) continue\n\t\t\t\t\t\t\t\tfor (const tag of aobj.collisionIgnore) {\n\t\t\t\t\t\t\t\t\tif (other.is(tag)) {\n\t\t\t\t\t\t\t\t\t\tcontinue check\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (const tag of other.collisionIgnore) {\n\t\t\t\t\t\t\t\t\tif (aobj.is(tag)) {\n\t\t\t\t\t\t\t\t\t\tcontinue check\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// TODO: cache the world area here\n\t\t\t\t\t\t\t\tconst res = sat(aobj.worldArea(), other.worldArea())\n\t\t\t\t\t\t\t\tif (res) {\n\t\t\t\t\t\t\t\t\t// TODO: rehash if the object position is changed after resolution?\n\t\t\t\t\t\t\t\t\tconst col1 = new Collision(aobj, other, res)\n\t\t\t\t\t\t\t\t\taobj.trigger(\"collideUpdate\", other, col1)\n\t\t\t\t\t\t\t\t\tconst col2 = col1.reverse()\n\t\t\t\t\t\t\t\t\t// resolution only has to happen once\n\t\t\t\t\t\t\t\t\tcol2.resolved = col1.resolved\n\t\t\t\t\t\t\t\t\tother.trigger(\"collideUpdate\", aobj, col2)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tchecked.add(other.id)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcell.push(aobj)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tobj.children.forEach(checkObj)\n\t\t\ttr = stack.pop()\n\n\t\t}\n\n\t\tcheckObj(game.root)\n\n\t}\n\n\tfunction drawFrame() {\n\n\t\t// calculate camera matrix\n\t\tconst cam = game.cam\n\t\tconst shake = Vec2.fromAngle(rand(0, 360)).scale(cam.shake)\n\n\t\tcam.shake = lerp(cam.shake, 0, 5 * dt())\n\t\tcam.transform = new Mat4()\n\t\t\t.translate(center())\n\t\t\t.scale(cam.scale)\n\t\t\t.rotate(cam.angle)\n\t\t\t.translate((cam.pos ?? center()).scale(-1).add(shake))\n\n\t\tgame.root.draw()\n\t\tflush()\n\n\t}\n\n\tfunction drawLoadScreen() {\n\n\t\tconst progress = loadProgress()\n\n\t\tif (game.events.numListeners(\"loading\") > 0) {\n\t\t\tgame.events.trigger(\"loading\", progress)\n\t\t} else {\n\t\t\tdrawUnscaled(() => {\n\t\t\t\tconst w = width() / 2\n\t\t\t\tconst h = 24\n\t\t\t\tconst pos = vec2(width() / 2, height() / 2).sub(vec2(w / 2, h / 2))\n\t\t\t\tdrawRect({\n\t\t\t\t\tpos: vec2(0),\n\t\t\t\t\twidth: width(),\n\t\t\t\t\theight: height(),\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t})\n\t\t\t\tdrawRect({\n\t\t\t\t\tpos: pos,\n\t\t\t\t\twidth: w,\n\t\t\t\t\theight: h,\n\t\t\t\t\tfill: false,\n\t\t\t\t\toutline: {\n\t\t\t\t\t\twidth: 4,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\tdrawRect({\n\t\t\t\t\tpos: pos,\n\t\t\t\t\twidth: w * progress,\n\t\t\t\t\theight: h,\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t}\n\n\tfunction drawInspectText(pos, txt) {\n\n\t\tdrawUnscaled(() => {\n\n\t\t\tconst pad = vec2(8)\n\n\t\t\tpushTransform()\n\t\t\tpushTranslate(pos)\n\n\t\t\tconst ftxt = formatText({\n\t\t\t\ttext: txt,\n\t\t\t\tfont: DBG_FONT,\n\t\t\t\tsize: 16,\n\t\t\t\tpos: pad,\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\tfixed: true,\n\t\t\t})\n\n\t\t\tconst bw = ftxt.width + pad.x * 2\n\t\t\tconst bh = ftxt.height + pad.x * 2\n\n\t\t\tif (pos.x + bw >= width()) {\n\t\t\t\tpushTranslate(vec2(-bw, 0))\n\t\t\t}\n\n\t\t\tif (pos.y + bh >= height()) {\n\t\t\t\tpushTranslate(vec2(0, -bh))\n\t\t\t}\n\n\t\t\tdrawRect({\n\t\t\t\twidth: bw,\n\t\t\t\theight: bh,\n\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\tradius: 4,\n\t\t\t\topacity: 0.8,\n\t\t\t\tfixed: true,\n\t\t\t})\n\n\t\t\tdrawFormattedText(ftxt)\n\t\t\tpopTransform()\n\n\t\t})\n\n\t}\n\n\tfunction drawDebug() {\n\n\t\tif (debug.inspect) {\n\n\t\t\tlet inspecting = null\n\n\t\t\tfor (const obj of game.root.get(\"*\", { recursive: true })) {\n\t\t\t\tif (obj.c(\"area\") && obj.isHovering()) {\n\t\t\t\t\tinspecting = obj\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgame.root.drawInspect()\n\n\t\t\tif (inspecting) {\n\n\t\t\t\tconst lines = []\n\t\t\t\tconst data = inspecting.inspect()\n\n\t\t\t\tfor (const tag in data) {\n\t\t\t\t\tif (data[tag]) {\n\t\t\t\t\t\tlines.push(`${tag}: ${data[tag]}`)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlines.push(`${tag}`)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdrawInspectText(contentToView(mousePos()), lines.join(\"\\n\"))\n\n\t\t\t}\n\n\t\t\tdrawInspectText(vec2(8), `FPS: ${debug.fps()}`)\n\n\t\t}\n\n\t\tif (debug.paused) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\t// top right corner\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(width(), 0)\n\t\t\t\tpushTranslate(-8, 8)\n\n\t\t\t\tconst size = 32\n\n\t\t\t\t// bg\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: size,\n\t\t\t\t\theight: size,\n\t\t\t\t\tanchor: \"topright\",\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t\tradius: 4,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\t// pause icon\n\t\t\t\tfor (let i = 1; i <= 2; i++) {\n\t\t\t\t\tdrawRect({\n\t\t\t\t\t\twidth: 4,\n\t\t\t\t\t\theight: size * 0.6,\n\t\t\t\t\t\tanchor: \"center\",\n\t\t\t\t\t\tpos: vec2(-size / 3 * i, size * 0.5),\n\t\t\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\t\t\tradius: 2,\n\t\t\t\t\t\tfixed: true,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t\tif (debug.timeScale !== 1) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\t// bottom right corner\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(width(), height())\n\t\t\t\tpushTranslate(-8, -8)\n\n\t\t\t\tconst pad = 8\n\n\t\t\t\t// format text first to get text size\n\t\t\t\tconst ftxt = formatText({\n\t\t\t\t\ttext: debug.timeScale.toFixed(1),\n\t\t\t\t\tfont: DBG_FONT,\n\t\t\t\t\tsize: 16,\n\t\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\t\tpos: vec2(-pad),\n\t\t\t\t\tanchor: \"botright\",\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\t// bg\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: ftxt.width + pad * 2 + pad * 4,\n\t\t\t\t\theight: ftxt.height + pad * 2,\n\t\t\t\t\tanchor: \"botright\",\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t\tradius: 4,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\t// fast forward / slow down icon\n\t\t\t\tfor (let i = 0; i < 2; i++) {\n\t\t\t\t\tconst flipped = debug.timeScale < 1\n\t\t\t\t\tdrawTriangle({\n\t\t\t\t\t\tp1: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad),\n\t\t\t\t\t\tp2: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad - ftxt.height),\n\t\t\t\t\t\tp3: vec2(-ftxt.width - pad * (flipped ? 3.5 : 2), -pad - ftxt.height / 2),\n\t\t\t\t\t\tpos: vec2(-i * pad * 1 + (flipped ? -pad * 0.5 : 0), 0),\n\t\t\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\t\t\tfixed: true,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t// text\n\t\t\t\tdrawFormattedText(ftxt)\n\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t\tif (debug.curRecording) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(0, height())\n\t\t\t\tpushTranslate(24, -24)\n\n\t\t\t\tdrawCircle({\n\t\t\t\t\tradius: 12,\n\t\t\t\t\tcolor: rgb(255, 0, 0),\n\t\t\t\t\topacity: wave(0, 1, app.time() * 4),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t\tif (debug.showLog && game.logs.length > 0) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(0, height())\n\t\t\t\tpushTranslate(8, -8)\n\n\t\t\t\tconst pad = 8\n\t\t\t\tconst logs = []\n\n\t\t\t\tfor (const log of game.logs) {\n\t\t\t\t\tlet str = \"\"\n\t\t\t\t\tconst style = log.msg instanceof Error ? \"error\" : \"info\"\n\t\t\t\t\tstr += `[time]${log.time.toFixed(2)}[/time]`\n\t\t\t\t\tstr += \" \"\n\t\t\t\t\tstr += `[${style}]${log.msg?.toString ? log.msg.toString() : log.msg}[/${style}]`\n\t\t\t\t\tlogs.push(str)\n\t\t\t\t}\n\n\t\t\t\tgame.logs = game.logs\n\t\t\t\t\t.filter((log) => app.time() - log.time < (gopt.logTime || LOG_TIME))\n\n\t\t\t\tconst ftext = formatText({\n\t\t\t\t\ttext: logs.join(\"\\n\"),\n\t\t\t\t\tfont: DBG_FONT,\n\t\t\t\t\tpos: vec2(pad, -pad),\n\t\t\t\t\tanchor: \"botleft\",\n\t\t\t\t\tsize: 16,\n\t\t\t\t\twidth: width() * 0.6,\n\t\t\t\t\tlineSpacing: pad / 2,\n\t\t\t\t\tfixed: true,\n\t\t\t\t\tstyles: {\n\t\t\t\t\t\t\"time\": { color: rgb(127, 127, 127) },\n\t\t\t\t\t\t\"info\": { color: rgb(255, 255, 255) },\n\t\t\t\t\t\t\"error\": { color: rgb(255, 0, 127) },\n\t\t\t\t\t},\n\t\t\t\t})\n\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: ftext.width + pad * 2,\n\t\t\t\t\theight: ftext.height + pad * 2,\n\t\t\t\t\tanchor: \"botleft\",\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t\tradius: 4,\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tdrawFormattedText(ftext)\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t}\n\n\tfunction onLoading(action: (progress: number) => void) {\n\t\tgame.events.on(\"loading\", action)\n\t}\n\n\tfunction onResize(action: () => void) {\n\t\tapp.onResize(action)\n\t}\n\n\tfunction onError(action: (err: Error) => void) {\n\t\tgame.events.on(\"error\", action)\n\t}\n\n\tfunction handleErr(err: Error) {\n\n\t\tconsole.error(err)\n\n\t\taudio.ctx.suspend()\n\n\t\t// TODO: this should only run once\n\t\tapp.run(() => {\n\n\t\t\tframeStart()\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\tconst pad = 32\n\t\t\t\tconst gap = 16\n\t\t\t\tconst gw = width()\n\t\t\t\tconst gh = height()\n\n\t\t\t\tconst textStyle = {\n\t\t\t\t\tsize: 36,\n\t\t\t\t\twidth: gw - pad * 2,\n\t\t\t\t\tletterSpacing: 4,\n\t\t\t\t\tlineSpacing: 4,\n\t\t\t\t\tfont: DBG_FONT,\n\t\t\t\t\tfixed: true,\n\t\t\t\t}\n\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: gw,\n\t\t\t\t\theight: gh,\n\t\t\t\t\tcolor: rgb(0, 0, 255),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tconst title = formatText({\n\t\t\t\t\t...textStyle,\n\t\t\t\t\ttext: \"Error\",\n\t\t\t\t\tpos: vec2(pad),\n\t\t\t\t\tcolor: rgb(255, 128, 0),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tdrawFormattedText(title)\n\n\t\t\t\tdrawText({\n\t\t\t\t\t...textStyle,\n\t\t\t\t\ttext: err.message,\n\t\t\t\t\tpos: vec2(pad, pad + title.height + gap),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tpopTransform()\n\t\t\t\tgame.events.trigger(\"error\", err)\n\n\t\t\t})\n\n\t\t\tframeEnd()\n\n\t\t})\n\n\t}\n\n\tfunction onCleanup(action: () => void) {\n\t\tgc.push(action)\n\t}\n\n\tfunction quit() {\n\n\t\tgame.events.onOnce(\"frameEnd\", () => {\n\n\t\t\tapp.quit()\n\n\t\t\t// clear canvas\n\t\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT)\n\n\t\t\t// unbind everything\n\t\t\tconst numTextureUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)\n\n\t\t\tfor (let unit = 0; unit < numTextureUnits; unit++) {\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + unit)\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, null)\n\t\t\t\tgl.bindTexture(gl.TEXTURE_CUBE_MAP, null)\n\t\t\t}\n\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null)\n\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null)\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null)\n\n\t\t\t// run all scattered gc events\n\t\t\tggl.destroy()\n\t\t\tgc.forEach((f) => f())\n\n\t\t})\n\n\t}\n\n\tlet isFirstFrame = true\n\n\t// main game loop\n\tapp.run(() => {\n\n\t\ttry {\n\n\t\t\tif (!assets.loaded) {\n\t\t\t\tif (loadProgress() === 1 && !isFirstFrame) {\n\t\t\t\t\tassets.loaded = true\n\t\t\t\t\tgame.events.trigger(\"load\")\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!assets.loaded && gopt.loadingScreen !== false || isFirstFrame) {\n\t\t\t\tframeStart()\n\t\t\t\t// TODO: Currently if assets are not initially loaded no updates or timers will be run, however they will run if loadingScreen is set to false. What's the desired behavior or should we make them consistent?\n\t\t\t\tdrawLoadScreen()\n\t\t\t\tframeEnd()\n\t\t\t} else {\n\t\t\t\tif (!debug.paused) updateFrame()\n\t\t\t\tcheckFrame()\n\t\t\t\tframeStart()\n\t\t\t\tdrawFrame()\n\t\t\t\tif (gopt.debug !== false) drawDebug()\n\t\t\t\tframeEnd()\n\t\t\t}\n\n\t\t\tif (isFirstFrame) {\n\t\t\t\tisFirstFrame = false\n\t\t\t}\n\n\t\t\tgame.events.trigger(\"frameEnd\")\n\n\t\t} catch (e) {\n\t\t\thandleErr(e)\n\t\t}\n\n\t})\n\n\t// update viewport based on user setting and fullscreen state\n\tfunction updateViewport() {\n\n\t\t// content size (scaled content size, with scale, stretch and letterbox)\n\t\t// view size (unscaled viewport size)\n\t\t// window size (will be the same as view size except letterbox mode)\n\n\t\t// canvas size\n\t\tconst pd = pixelDensity\n\t\tconst cw = gl.drawingBufferWidth / pd\n\t\tconst ch = gl.drawingBufferHeight / pd\n\n\t\tif (gopt.letterbox) {\n\n\t\t\tif (!gopt.width || !gopt.height) {\n\t\t\t\tthrow new Error(\"Letterboxing requires width and height defined.\")\n\t\t\t}\n\n\t\t\tconst rc = cw / ch\n\t\t\tconst rg = gopt.width / gopt.height\n\n\t\t\tif (rc > rg) {\n\t\t\t\tconst sw = ch * rg\n\t\t\t\tconst x = (cw - sw) / 2\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: x,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: sw,\n\t\t\t\t\theight: ch,\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst sh = cw / rg\n\t\t\t\tconst y = (ch - sh) / 2\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: y,\n\t\t\t\t\twidth: cw,\n\t\t\t\t\theight: sh,\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn\n\n\t\t}\n\n\t\tif (gopt.stretch) {\n\t\t\tif (!gopt.width || !gopt.height) {\n\t\t\t\tthrow new Error(\"Stretching requires width and height defined.\")\n\t\t\t}\n\t\t}\n\n\t\tgfx.viewport = {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: cw,\n\t\t\theight: ch,\n\t\t}\n\n\t}\n\n\tfunction initEvents() {\n\n\t\tapp.onHide(() => {\n\t\t\tif (!gopt.backgroundAudio) {\n\t\t\t\taudio.ctx.suspend()\n\t\t\t}\n\t\t})\n\n\t\tapp.onShow(() => {\n\t\t\tif (!gopt.backgroundAudio && !debug.paused) {\n\t\t\t\taudio.ctx.resume()\n\t\t\t}\n\t\t})\n\n\t\tapp.onResize(() => {\n\t\t\tif (app.isFullscreen()) return\n\t\t\tconst fixedSize = gopt.width && gopt.height\n\t\t\tif (fixedSize && !gopt.stretch && !gopt.letterbox) return\n\t\t\tcanvas.width = canvas.offsetWidth * pixelDensity\n\t\t\tcanvas.height = canvas.offsetHeight * pixelDensity\n\t\t\tupdateViewport()\n\t\t\tif (!fixedSize) {\n\t\t\t\tgfx.frameBuffer.free()\n\t\t\t\tgfx.frameBuffer = new FrameBuffer(ggl, gl.drawingBufferWidth, gl.drawingBufferHeight)\n\t\t\t\tgfx.width = gl.drawingBufferWidth / pixelDensity\n\t\t\t\tgfx.height = gl.drawingBufferHeight / pixelDensity\n\t\t\t}\n\t\t})\n\n\t\tif (gopt.debug !== false) {\n\t\t\tapp.onKeyPress(\"f1\", () => debug.inspect = !debug.inspect)\n\t\t\tapp.onKeyPress(\"f2\", () => debug.clearLog())\n\t\t\tapp.onKeyPress(\"f8\", () => debug.paused = !debug.paused)\n\t\t\tapp.onKeyPress(\"f7\", () => {\n\t\t\t\tdebug.timeScale = toFixed(clamp(debug.timeScale - 0.2, 0, 2), 1)\n\t\t\t})\n\t\t\tapp.onKeyPress(\"f9\", () => {\n\t\t\t\tdebug.timeScale = toFixed(clamp(debug.timeScale + 0.2, 0, 2), 1)\n\t\t\t})\n\t\t\tapp.onKeyPress(\"f10\", () => debug.stepFrame())\n\t\t}\n\n\t\tif (gopt.burp) {\n\t\t\tapp.onKeyPress(\"b\", () => burp())\n\t\t}\n\n\t}\n\n\tupdateViewport()\n\tinitEvents()\n\n\t// the exported ctx handle\n\tconst ctx: KaboomCtx = {\n\t\tVERSION,\n\t\t// asset load\n\t\tloadRoot,\n\t\tloadProgress,\n\t\tloadSprite,\n\t\tloadSpriteAtlas,\n\t\tloadSound,\n\t\tloadBitmapFont,\n\t\tloadFont,\n\t\tloadShader,\n\t\tloadShaderURL,\n\t\tloadAseprite,\n\t\tloadPedit,\n\t\tloadBean,\n\t\tloadJSON,\n\t\tload,\n\t\tgetSprite,\n\t\tgetSound,\n\t\tgetFont,\n\t\tgetBitmapFont,\n\t\tgetShader,\n\t\tgetAsset,\n\t\tAsset,\n\t\tSpriteData,\n\t\tSoundData,\n\t\t// query\n\t\twidth,\n\t\theight,\n\t\tcenter,\n\t\tdt,\n\t\ttime: app.time,\n\t\tscreenshot: app.screenshot,\n\t\trecord,\n\t\tisFocused,\n\t\tsetCursor: app.setCursor,\n\t\tgetCursor: app.getCursor,\n\t\tsetCursorLocked: app.setCursorLocked,\n\t\tisCursorLocked: app.isCursorLocked,\n\t\tsetFullscreen: app.setFullscreen,\n\t\tisFullscreen: app.isFullscreen,\n\t\tisTouchscreen: app.isTouchscreen,\n\t\tonLoad,\n\t\tonLoading,\n\t\tonResize,\n\t\tonGamepadConnect: app.onGamepadConnect,\n\t\tonGamepadDisconnect: app.onGamepadDisconnect,\n\t\tonError,\n\t\tonCleanup,\n\t\t// misc\n\t\tcamPos,\n\t\tcamScale,\n\t\tcamRot,\n\t\tshake,\n\t\ttoScreen,\n\t\ttoWorld,\n\t\tsetGravity,\n\t\tgetGravity,\n\t\tsetBackground,\n\t\tgetBackground,\n\t\tgetGamepads: app.getGamepads,\n\t\t// obj\n\t\tadd,\n\t\tmake,\n\t\tdestroy,\n\t\tdestroyAll,\n\t\tget,\n\t\treadd,\n\t\t// comps\n\t\tpos,\n\t\tscale,\n\t\trotate,\n\t\tcolor,\n\t\topacity,\n\t\tanchor,\n\t\tarea,\n\t\tsprite,\n\t\ttext,\n\t\tpolygon,\n\t\trect,\n\t\tcircle,\n\t\tuvquad,\n\t\toutline,\n\t\tbody,\n\t\tdoubleJump,\n\t\tshader,\n\t\ttimer,\n\t\tfixed,\n\t\tstay,\n\t\thealth,\n\t\tlifespan,\n\t\tz,\n\t\tmove,\n\t\toffscreen,\n\t\tfollow,\n\t\tstate,\n\t\tfadeIn,\n\t\tmask,\n\t\tdrawon,\n\t\ttile,\n\t\tagent,\n\t\t// group events\n\t\ton,\n\t\tonUpdate,\n\t\tonDraw,\n\t\tonAdd,\n\t\tonDestroy,\n\t\tonClick,\n\t\tonCollide,\n\t\tonCollideUpdate,\n\t\tonCollideEnd,\n\t\tonHover,\n\t\tonHoverUpdate,\n\t\tonHoverEnd,\n\t\t// input\n\t\tonKeyDown: app.onKeyDown,\n\t\tonKeyPress: app.onKeyPress,\n\t\tonKeyPressRepeat: app.onKeyPressRepeat,\n\t\tonKeyRelease: app.onKeyRelease,\n\t\tonMouseDown: app.onMouseDown,\n\t\tonMousePress: app.onMousePress,\n\t\tonMouseRelease: app.onMouseRelease,\n\t\tonMouseMove: app.onMouseMove,\n\t\tonCharInput: app.onCharInput,\n\t\tonTouchStart: app.onTouchStart,\n\t\tonTouchMove: app.onTouchMove,\n\t\tonTouchEnd: app.onTouchEnd,\n\t\tonScroll: app.onScroll,\n\t\tonHide: app.onHide,\n\t\tonShow: app.onShow,\n\t\tonGamepadButtonDown: app.onGamepadButtonDown,\n\t\tonGamepadButtonPress: app.onGamepadButtonPress,\n\t\tonGamepadButtonRelease: app.onGamepadButtonRelease,\n\t\tonGamepadStick: app.onGamepadStick,\n\t\tmousePos: mousePos,\n\t\tmouseDeltaPos: app.mouseDeltaPos,\n\t\tisKeyDown: app.isKeyDown,\n\t\tisKeyPressed: app.isKeyPressed,\n\t\tisKeyPressedRepeat: app.isKeyPressedRepeat,\n\t\tisKeyReleased: app.isKeyReleased,\n\t\tisMouseDown: app.isMouseDown,\n\t\tisMousePressed: app.isMousePressed,\n\t\tisMouseReleased: app.isMouseReleased,\n\t\tisMouseMoved: app.isMouseMoved,\n\t\tisGamepadButtonPressed: app.isGamepadButtonPressed,\n\t\tisGamepadButtonDown: app.isGamepadButtonDown,\n\t\tisGamepadButtonReleased: app.isGamepadButtonReleased,\n\t\tgetGamepadStick: app.getGamepadStick,\n\t\tcharInputted: app.charInputted,\n\t\t// timer\n\t\tloop,\n\t\twait,\n\t\t// audio\n\t\tplay,\n\t\tvolume,\n\t\tburp,\n\t\taudioCtx: audio.ctx,\n\t\t// math\n\t\tLine,\n\t\tRect,\n\t\tCircle,\n\t\tPolygon,\n\t\tVec2,\n\t\tColor,\n\t\tMat4,\n\t\tQuad,\n\t\tRNG,\n\t\trand,\n\t\trandi,\n\t\trandSeed,\n\t\tvec2,\n\t\trgb,\n\t\thsl2rgb,\n\t\tquad,\n\t\tchoose,\n\t\tchance,\n\t\tlerp,\n\t\ttween,\n\t\teasings,\n\t\tmap,\n\t\tmapc,\n\t\twave,\n\t\tdeg2rad,\n\t\trad2deg,\n\t\tclamp,\n\t\ttestLineLine,\n\t\ttestRectRect,\n\t\ttestRectLine,\n\t\ttestRectPoint,\n\t\ttestCirclePolygon,\n\t\ttestLinePoint,\n\t\ttestLineCircle,\n\t\t// raw draw\n\t\tdrawSprite,\n\t\tdrawText,\n\t\tformatText,\n\t\tdrawRect,\n\t\tdrawLine,\n\t\tdrawLines,\n\t\tdrawTriangle,\n\t\tdrawCircle,\n\t\tdrawEllipse,\n\t\tdrawUVQuad,\n\t\tdrawPolygon,\n\t\tdrawFormattedText,\n\t\tdrawMasked,\n\t\tdrawSubtracted,\n\t\tpushTransform,\n\t\tpopTransform,\n\t\tpushTranslate,\n\t\tpushScale,\n\t\tpushRotate,\n\t\tpushMatrix,\n\t\tusePostEffect,\n\t\tmakeCanvas,\n\t\t// debug\n\t\tdebug,\n\t\t// scene\n\t\tscene,\n\t\tgo,\n\t\tonSceneLeave,\n\t\t// level\n\t\taddLevel,\n\t\t// storage\n\t\tgetData,\n\t\tsetData,\n\t\tdownload,\n\t\tdownloadJSON,\n\t\tdownloadText,\n\t\tdownloadBlob,\n\t\t// plugin\n\t\tplug,\n\t\t// char sets\n\t\tASCII_CHARS,\n\t\t// dom\n\t\tcanvas: app.canvas,\n\t\t// misc\n\t\taddKaboom,\n\t\t// dirs\n\t\tLEFT: Vec2.LEFT,\n\t\tRIGHT: Vec2.RIGHT,\n\t\tUP: Vec2.UP,\n\t\tDOWN: Vec2.DOWN,\n\t\t// colors\n\t\tRED: Color.RED,\n\t\tGREEN: Color.GREEN,\n\t\tBLUE: Color.BLUE,\n\t\tYELLOW: Color.YELLOW,\n\t\tMAGENTA: Color.MAGENTA,\n\t\tCYAN: Color.CYAN,\n\t\tWHITE: Color.WHITE,\n\t\tBLACK: Color.BLACK,\n\t\tquit,\n\t\t// helpers\n\t\tEvent,\n\t\tEventHandler,\n\t\tEventController,\n\t}\n\n\tif (gopt.plugins) {\n\t\tgopt.plugins.forEach(plug)\n\t}\n\n\t// export everything to window if global is set\n\tif (gopt.global !== false) {\n\t\tfor (const k in ctx) {\n\t\t\twindow[k] = ctx[k]\n\t\t}\n\t}\n\n\tif (gopt.focus !== false) {\n\t\tapp.canvas.focus()\n\t}\n\n\treturn ctx\n\n}\n", "import kaboom from \"kaboom\";\n\nkaboom();\n\nloadSprite(\"bird\", \"sprites/bird.png\");\nloadSprite(\"bg\", \"sprites/bg.png\");\nloadSprite(\"pipe\", \"sprites/pipe.png\");\nloadSound(\"wooosh\", \"sounds/wooosh.mp3\");\n\nscene(\"game\", () => {\n    const PIPE_SPEED = 500;\n    const PIPE_GAP_MIN = height() * 0.25; // 25% of screen height\n    const PIPE_GAP_MAX = height() * 0.32; // 32% of screen height\n    const PIPE_HORIZONTAL_GAP = width() * 0.38; // 38% of screen width\n\n    const JUMP_FORCE = 800;\n    let score = 0;\n\n    add([\n        sprite(\"bg\"),\n        pos(0, 0),\n        scale(width() / 240, height() / 240),\n        z(-1)\n    ]);\n\n    const scoreText = add([\n        text(score.toString(), { \n            size: Math.min(width(), height()) * 0.08\n        }),\n        pos(20, 20),\n        z(10),\n        color(255, 255, 255)\n    ]);\n\n    const player = add([\n        sprite(\"bird\"),\n        pos(width() * 0.1, height() / 2),\n        area(),\n        body(),\n        scale(Math.min(width(), height()) * 0.003),\n        z(1),\n        \"player\"\n    ]);\n\n    function producePipes() {\n        const pipeGap = rand(PIPE_GAP_MIN, PIPE_GAP_MAX);\n        const offset = rand(-height() * 0.1, height() * 0.1);\n\n        add([\n            sprite(\"pipe\", { flipY: true }),\n            pos(width(), height() / 2 + offset - pipeGap / 2),\n            area(),\n            scale(Math.min(width(), height()) * 0.003),\n            move(LEFT, PIPE_SPEED),\n            anchor(\"botleft\"),\n            \"pipe\",\n            \"top-pipe\",\n            { passed: false }\n        ]);\n\n        add([\n            sprite(\"pipe\"),\n            pos(width(), height() / 2 + offset + pipeGap / 2),\n            area(),\n            scale(Math.min(width(), height()) * 0.003),\n            move(LEFT, PIPE_SPEED),\n            anchor(\"topleft\"),\n            \"pipe\",\n            \"bottom-pipe\"\n        ]);\n    }\n\n    function spawnPipeLoop() {\n        producePipes();\n        // Calculate how long it takes for a pipe to move PIPE_HORIZONTAL_GAP distance\n        const interval = PIPE_HORIZONTAL_GAP / PIPE_SPEED;\n        wait(interval, spawnPipeLoop);\n    }\n\n    spawnPipeLoop();\n\n    // Update pipes and scoring\n    onUpdate(\"pipe\", (pipe) => {\n        // Score when bird passes through top pipe\n        if (pipe.is(\"top-pipe\") && !pipe.passed && pipe.pos.x + pipe.width < player.pos.x) {\n            pipe.passed = true;\n            score += 1;\n            scoreText.text = score.toString();\n        }\n\n        // Remove pipes that are completely off screen\n        if (pipe.pos.x < -pipe.width - 50) {\n            destroy(pipe);\n        }\n    });\n\n    // Collision detection\n    player.onCollide(\"pipe\", () => {\n        try {\n            play(\"wooosh\");\n        } catch (e) {\n            console.log(\"Collision sound not available\");\n        }\n        go(\"gameover\", score);\n    });\n\n    // Boundary checking\n    player.onUpdate(() => {\n        if (player.pos.y > height() + 30 || player.pos.y < -30) {\n            go(\"gameover\", score);\n        }\n    });\n\n    // Jump controls\n    onKeyPress(\"space\", () => {\n        try {\n            play(\"wooosh\");\n        } catch (e) {\n            console.log(\"Sound not available\");\n        }\n        player.jump(JUMP_FORCE);\n    });\n\n    onMousePress(() => {\n        try {\n            play(\"wooosh\");\n        } catch (e) {\n            console.log(\"Sound not available\");\n        }\n        player.jump(JUMP_FORCE);\n    });\n\n    onTouchStart(() => {\n        try {\n            play(\"wooosh\");\n        } catch (e) {\n            console.log(\"Sound not available\");\n        }\n        player.jump(JUMP_FORCE);\n    });\n});\n\n// Game over scene\nscene(\"gameover\", (score) => {\n    if (score > highScore) {\n        highScore = score;\n    }\n\n    add([\n        rect(width(), height()),\n        color(0, 0, 0),\n        opacity(0.7),\n        z(0)\n    ]);\n\n    add([\n        text(\"GAME OVER!\", { \n            size: Math.min(width(), height()) * 0.08\n        }),\n        pos(center().x, center().y - height() * 0.15),\n        anchor(\"center\"),\n        color(255, 255, 255),\n        z(1)\n    ]);\n\n    add([\n        text(`Score: ${score}`, { \n            size: Math.min(width(), height()) * 0.05\n        }),\n        pos(center().x, center().y - height() * 0.05),\n        anchor(\"center\"),\n        color(255, 255, 255),\n        z(1)\n    ]);\n\n    add([\n        text(`High Score: ${highScore}`, { \n            size: Math.min(width(), height()) * 0.04\n        }),\n        pos(center().x, center().y),\n        anchor(\"center\"),\n        color(255, 255, 255),\n        z(1)\n    ]);\n\n    add([\n        text(\"Press SPACE or Click to Restart\", { \n            size: Math.min(width(), height()) * 0.03\n        }),\n        pos(center().x, center().y + height() * 0.08),\n        anchor(\"center\"),\n        color(200, 200, 200),\n        z(1)\n    ]);\n\n    // Restart controls\n    onKeyPress(\"space\", () => {\n        go(\"game\");\n    });\n\n    onMousePress(() => {\n        go(\"game\");\n    });\n\n    onTouchStart(() => {\n        go(\"game\");\n    });\n});\n\n// Start the game\ngo(\"game\");\n"],
  "mappings": "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",
  "names": ["deg2rad", "deg", "__name", "rad2deg", "rad", "clamp", "val", "min", "max", "lerp", "a", "b", "t", "Vec2", "Color", "map", "v", "l1", "h1", "l2", "h2", "mapc", "x", "y", "angle", "_Vec2", "args", "p2", "vec2", "s", "len", "normal", "on", "dest", "cos", "sin", "n", "m", "other", "Rect", "_a", "r", "g", "arr", "_Color", "hex", "result", "h", "l", "hue2rgb", "p", "q", "d", "rgb", "hsl2rgb", "Quad", "w", "_Quad", "quad", "Mat4", "_Mat4", "c", "m0", "m1", "m4", "m5", "out", "i", "j", "det", "f00", "f01", "f02", "f03", "f04", "f05", "f06", "f07", "f08", "f09", "f10", "f11", "f12", "f13", "f14", "f15", "f16", "f17", "f18", "wave", "lo", "hi", "f", "A", "C", "M", "RNG", "seed", "defRNG", "randSeed", "rand", "randi", "chance", "choose", "list", "testRectRect", "r1", "r2", "testLineLineT", "denom", "ua", "ub", "testLineLine", "testRectLine", "testRectPoint", "pts", "Line", "pt", "testLinePoint", "v1", "v2", "testLineCircle", "circle", "centerToOrigin", "dis", "t1", "t2", "testCirclePoint", "testCirclePolygon", "prev", "cur", "testPolygonPoint", "poly", "p1", "_Line", "pos", "width", "height", "_Rect", "Polygon", "dx", "dy", "Circle", "center", "radius", "tr", "Ellipse", "_Circle", "rx", "ry", "_Ellipse", "_Polygon", "total", "sat", "overlap", "displacement", "axisProj", "min1", "max1", "min2", "max2", "o", "o1", "o2", "Registry", "id", "EventController", "cancel", "events", "ev", "_EventController", "e", "Event", "action", "res", "EventHandler", "name", "deepEq", "k1", "k2", "k", "base64ToArrayBuffer", "base64", "binstr", "bytes", "dataURLToArrayBuffer", "url", "download", "filename", "downloadText", "text", "downloadJSON", "data", "downloadBlob", "blob", "isDataURL", "str", "getFileName", "overload2", "fn1", "fn2", "al", "uid", "getErrorMessage", "error", "BinaryHeap", "compareFn", "item", "lastItem", "parent", "child", "index1", "index2", "GRAPHEMES", "runes", "string", "increment", "nextUnits", "isGrapheme", "isVariationSelector", "isDiacriticalMark", "isZeroWidthJoiner", "current", "isFirstOfSurrogatePair", "currentPair", "nextPair", "isRegionalIndicator", "isSubdivisionFlag", "isSupplementarySpecialpurposePlane", "isFitzpatrickModifier", "betweenInclusive", "codePointFromSurrogatePair", "codePoint", "pair", "highOffset", "lowOffset", "value", "lower", "upper", "gamepad_default", "ButtonState", "btn", "GamepadState", "FPSCounter", "dt", "app_default", "opt", "state", "time", "fps", "numFrames", "screenshot", "setCursor", "getCursor", "setCursorLocked", "isCursorLocked", "enterFullscreen", "el", "exitFullscreen", "getFullscreenElement", "setFullscreen", "isFullscreen", "quit", "canvasEvents", "docEvents", "winEvents", "resizeObserver", "run", "accumulatedDt", "frame", "loopTime", "realDt", "desiredDt", "processInput", "resetInput", "isTouchscreen", "mousePos", "mouseDeltaPos", "isMousePressed", "isMouseDown", "isMouseReleased", "isMouseMoved", "isKeyPressed", "isKeyPressedRepeat", "isKeyDown", "isKeyReleased", "isGamepadButtonPressed", "isGamepadButtonDown", "isGamepadButtonReleased", "onResize", "onKeyDown", "key", "onKeyPress", "onKeyPressRepeat", "onKeyRelease", "onMouseDown", "mouse", "onMousePress", "onMouseRelease", "onMouseMove", "onCharInput", "onTouchStart", "onTouchMove", "onTouchEnd", "onScroll", "onHide", "onShow", "onGamepadButtonDown", "onGamepadButtonPress", "onGamepadButtonRelease", "onGamepadStick", "stick", "onGamepadConnect", "onGamepadDisconnect", "getGamepadStick", "charInputted", "getGamepads", "processGamepad", "registerGamepad", "browserGamepad", "gamepad", "removeGamepad", "gamepadState", "stickName", "pd", "cw", "ch", "ww", "wh", "rw", "rc", "ratio", "offset", "MOUSE_BUTTONS", "PREVENT_DEFAULT_KEYS", "KEY_ALIAS", "touches", "box", "kbGamepad", "entries", "entry", "Texture", "ctx", "gl", "filter", "wrap", "img", "tex", "_Texture", "FrameBuffer", "bytesPerRow", "temp", "topOffset", "bottomOffset", "canvas", "Shader", "vert", "frag", "attribs", "vertShader", "fragShader", "prog", "attrib", "vertError", "fragError", "uniform", "loc", "BatchRenderer", "format", "maxVertices", "maxIndices", "sum", "primitive", "verts", "indices", "shader", "indexOffset", "genStack", "setFunc", "stack", "push", "pop", "initGfx", "opts", "gc", "onDestroy", "destroy", "curVertexFormat", "setVertexFormat", "fmt", "stride", "pushTexture2D", "popTexture2D", "pushArrayBuffer", "popArrayBuffer", "pushElementArrayBuffer", "popElementArrayBuffer", "pushFramebuffer", "popFramebuffer", "pushRenderbuffer", "popRenderbuffer", "pushViewport", "popViewport", "pushProgram", "popProgram", "Asset", "loader", "err", "asset", "_Asset", "AssetBucket", "handle", "loaded", "fetchURL", "fetchJSON", "path", "fetchText", "fetchArrayBuffer", "loadImg", "src", "resolve", "reject", "c2", "c3", "c4", "c5", "easings", "easings_default", "TexPacker", "gfx", "curTex", "VERSION", "ASCII_CHARS", "DEF_ANCHOR", "BG_GRID_SIZE", "DEF_FONT", "DBG_FONT", "DEF_TEXT_SIZE", "DEF_TEXT_CACHE_SIZE", "MAX_TEXT_CACHE_SIZE", "FONT_ATLAS_WIDTH", "FONT_ATLAS_HEIGHT", "SPRITE_ATLAS_WIDTH", "SPRITE_ATLAS_HEIGHT", "UV_PAD", "DEF_HASH_GRID_SIZE", "DEF_FONT_FILTER", "LOG_MAX", "LOG_TIME", "VERTEX_FORMAT", "STRIDE", "MAX_BATCHED_QUAD", "MAX_BATCHED_VERTS", "MAX_BATCHED_INDICES", "VERT_TEMPLATE", "FRAG_TEMPLATE", "DEF_VERT", "DEF_FRAG", "COMP_DESC", "COMP_EVENTS", "anchorPt", "orig", "alignPt", "align", "createEmptyAudioBuffer", "kaboom_default", "gopt", "root", "gscale", "fixedSize", "styles", "pixelDensity", "fontCacheCanvas", "fontCacheC2d", "app", "ggl", "defShader", "makeShader", "emptyTex", "frameBuffer", "bgColor", "bgAlpha", "renderer", "bgTex", "SpriteData", "frames", "anims", "slice9", "assets", "slice", "SoundData", "buf", "audio", "masterNode", "burpSnd", "burp_default", "fixURL", "game", "make", "timer", "load", "prom", "loadProgress", "buckets", "bucket", "loadRoot", "loadJSON", "FontData", "face", "loadFont", "font", "loadBitmapFont", "gw", "gh", "makeFont", "qw", "qh", "loadSpriteAtlas", "rej", "json", "atlas", "info", "spr", "createSpriteSheet", "images", "c2d", "merged", "loadSprite", "loadPedit", "loadAseprite", "imgSrc", "jsonSrc", "resolveJSON", "size", "anim", "loadShader", "loadShaderURL", "resolveUrl", "vcode", "fcode", "loadSound", "loadBean", "bean_default", "getSprite", "getSound", "getFont", "getBitmapFont", "getShader", "getAsset", "resolveSprite", "resolveSound", "snd", "resolveShader", "resolveFont", "bfont", "volume", "play", "paused", "srcNode", "onEndEvents", "gainNode", "startTime", "stopTime", "started", "getTime", "start", "cloneNode", "oldNode", "newNode", "burp", "makeCanvas", "vertSrc", "fragSrc", "match", "line", "msg", "ty", "chars", "cols", "charMap", "drawRaw", "fixed", "shaderSrc", "transform", "vv", "screen2ndc", "flush", "frameStart", "drawUnscaled", "drawUVQuad", "usePostEffect", "frameEnd", "ow", "oh", "drawTexture", "pushMatrix", "pushTranslate", "pushScale", "pushRotate", "pushTransform", "popTransform", "color", "opacity", "uvPadX", "uvPadY", "qx", "qy", "scale", "repX", "repY", "drawSprite", "getArcPts", "radiusX", "radiusY", "end", "nverts", "step", "drawRect", "drawPolygon", "drawLine", "drawLines", "minSLen", "drawCircle", "drawTriangle", "drawEllipse", "polyOpt", "npts", "drawStenciled", "content", "mask", "test", "drawMasked", "drawSubtracted", "getViewportScale", "applyCharTransform", "fchar", "TEXT_STYLE_RE", "compileStyledText", "charStyleMap", "renderText", "idxOffset", "origIdx", "fontAtlases", "formatText", "fontName", "lineSpacing", "letterSpacing", "curX", "tw", "th", "lines", "curLine", "cursor", "lastSpace", "lastSpaceWidth", "fchars", "ox", "idx", "style", "drawText", "drawFormattedText", "ftext", "windowToContent", "contentToView", "debugPaused", "debug", "updateFrame", "get", "camPos", "camScale", "camRot", "shake", "intensity", "toScreen", "toWorld", "calcTransform", "obj", "comps", "compStates", "cleanups", "inputEvents", "onCurCompCleanup", "trigger", "tag", "children", "maskFunc", "comp", "prop", "func", "checkDeps", "dep", "recurse", "isChild", "onAdd", "ctrl", "cb", "evs", "event", "onUpdate", "add", "onDraw", "onCollide", "col", "onCollideUpdate", "onCollideEnd", "forAllCurrentAndFuture", "onClick", "onHover", "onHoverUpdate", "onHoverEnd", "setGravity", "getGravity", "setBackground", "getBackground", "speed", "diff", "isFixed", "toFixed", "rotate", "easeFunc", "tween", "anchor", "z", "follow", "move", "dir", "DEF_OFFSCREEN_DIS", "offscreen", "distance", "isOut", "screenRect", "area", "colliding", "collidingThisFrame", "mpos", "hovering", "localArea", "getRenderProps", "sprite", "spriteData", "curAnim", "curAnimDir", "spriteLoadedEvent", "calcTexScale", "left", "right", "top", "bottom", "iw", "ih", "w1", "w3", "w2", "h3", "quads", "uv", "setSpriteData", "onLoad", "prevAnim", "update", "nt", "polygon", "rect", "uvquad", "outline", "actions", "curTimer", "newAction", "from", "to", "duration", "setValue", "curTime", "DEF_JUMP_FORCE", "MAX_VEL", "body", "curPlatform", "lastPlatformPos", "wantFall", "tmass", "col2", "prevVelY", "force", "doubleJump", "numJumps", "jumpsLeft", "stay", "scenesToStay", "health", "hp", "maxHP", "origHP", "lifespan", "fade", "wait", "initState", "stateList", "transitions", "initStateEvents", "didFirstEnter", "oldState", "available", "fadeIn", "done", "drawon", "scene", "def", "go", "initEvents", "onSceneLeave", "getData", "setData", "plug", "plugin", "funcs", "funcsObj", "EdgeMask", "tile", "tilePos", "isObstacle", "cost", "edges", "getEdgeMask", "loopup", "edgeMask", "level", "is", "addLevel", "numRows", "numColumns", "spatialMap", "costMap", "edgeMap", "connectivityMap", "tile2Hash", "hash2Tile", "hash", "createSpatialMap", "insertIntoSpatialMap", "removeFromSpatialMap", "index", "updateSpatialMap", "spatialMapChanged", "createCostMap", "objects", "createEdgeMap", "createConnectivityMap", "traverse", "frontier", "getNeighbours", "getCost", "node", "neighbour", "getHeuristic", "goal", "diagonals", "levelComp", "hasPos", "hasTile", "cameFrom", "costSoFar", "neighbours", "next", "newCost", "row", "keys", "agent", "target", "navMapChangedEvent", "record", "frameRate", "stream", "audioDest", "recorder", "chunks", "isFocused", "readd", "destroyAll", "loop", "boom", "kaSprite", "ka_default", "boomSprite", "boom_default", "addKaboom", "kaboom", "ka", "Collision", "source", "resolved", "checkFrame", "grid", "cellSize", "checkObj", "aobj", "bbox", "xmin", "ymin", "xmax", "ymax", "checked", "cell", "check", "col1", "drawFrame", "cam", "drawLoadScreen", "progress", "drawInspectText", "txt", "pad", "ftxt", "bw", "bh", "drawDebug", "inspecting", "flipped", "logs", "log", "onLoading", "onError", "handleErr", "textStyle", "title", "onCleanup", "numTextureUnits", "unit", "isFirstFrame", "updateViewport", "rg", "sw", "sh"]
}
